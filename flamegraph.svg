<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="2142"><g><title>rust_stock_tracker`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="0.1401%" y="981" width="0.0467%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="1"/><text x="0.3901%" y="991.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="0.1401%" y="965" width="0.0467%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="1"/><text x="0.3901%" y="975.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="0.1401%" y="949" width="0.0467%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.3901%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.05%)</title><rect x="0.1401%" y="933" width="0.0467%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.3901%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.05%)</title><rect x="0.1401%" y="917" width="0.0467%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.3901%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="0.1401%" y="901" width="0.0467%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="0.3901%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="0.1401%" y="885" width="0.0467%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.3901%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="0.1401%" y="869" width="0.0467%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.3901%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="0.1401%" y="853" width="0.0467%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.3901%" y="863.50"></text></g><g><title>rust_stock_tracker`core::num::flt2dec::strategy::dragon::format_exact (1 samples, 0.05%)</title><rect x="0.1867%" y="965" width="0.0467%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="1"/><text x="0.4367%" y="975.50"></text></g><g><title>rust_stock_tracker`alloc::fmt::format (6 samples, 0.28%)</title><rect x="0.0000%" y="1013" width="0.2801%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1023.50"></text></g><g><title>rust_stock_tracker`core::fmt::write (5 samples, 0.23%)</title><rect x="0.0467%" y="997" width="0.2334%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="5"/><text x="0.2967%" y="1007.50"></text></g><g><title>rust_stock_tracker`core::fmt::float::float_to_decimal_common_exact (2 samples, 0.09%)</title><rect x="0.1867%" y="981" width="0.0934%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="2"/><text x="0.4367%" y="991.50"></text></g><g><title>rust_stock_tracker`core::num::flt2dec::strategy::grisu::format_exact_opt (1 samples, 0.05%)</title><rect x="0.2334%" y="965" width="0.0467%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="0.4834%" y="975.50"></text></g><g><title>rust_stock_tracker`rust_stock_tracker_lib::stocks::StockInfo::fmt_csv (7 samples, 0.33%)</title><rect x="0.0000%" y="1029" width="0.3268%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1039.50"></text></g><g><title>rust_stock_tracker`chrono::datetime::DateTime&lt;Tz&gt;::to_rfc3339 (1 samples, 0.05%)</title><rect x="0.2801%" y="1013" width="0.0467%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.5301%" y="1023.50"></text></g><g><title>rust_stock_tracker`&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="0.2801%" y="997" width="0.0467%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.5301%" y="1007.50"></text></g><g><title>rust_stock_tracker`chrono::format::format_inner (1 samples, 0.05%)</title><rect x="0.2801%" y="981" width="0.0467%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.5301%" y="991.50"></text></g><g><title>rust_stock_tracker`std::io::stdio::_eprint (1 samples, 0.05%)</title><rect x="0.3268%" y="1029" width="0.0467%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.5768%" y="1039.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.05%)</title><rect x="0.3268%" y="1013" width="0.0467%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="0.5768%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.05%)</title><rect x="0.3268%" y="997" width="0.0467%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.5768%" y="1007.50"></text></g><g><title>rust_stock_tracker`std::io::stdio::_print (7 samples, 0.33%)</title><rect x="0.3735%" y="1029" width="0.3268%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="7"/><text x="0.6235%" y="1039.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.33%)</title><rect x="0.3735%" y="1013" width="0.3268%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="7"/><text x="0.6235%" y="1023.50"></text></g><g><title>rust_stock_tracker`core::fmt::write (7 samples, 0.33%)</title><rect x="0.3735%" y="997" width="0.3268%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="7"/><text x="0.6235%" y="1007.50"></text></g><g><title>rust_stock_tracker`&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.33%)</title><rect x="0.3735%" y="981" width="0.3268%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="7"/><text x="0.6235%" y="991.50"></text></g><g><title>rust_stock_tracker`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.33%)</title><rect x="0.3735%" y="965" width="0.3268%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="7"/><text x="0.6235%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.33%)</title><rect x="0.3735%" y="949" width="0.3268%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="7"/><text x="0.6235%" y="959.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.84%)</title><rect x="0.0000%" y="1045" width="0.8403%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1055.50"></text></g><g><title>rust_stock_tracker`std::sync::once::Once::call_once::_{{closure}} (3 samples, 0.14%)</title><rect x="0.7003%" y="1029" width="0.1401%" height="15" fill="rgb(214,148,48)" fg:x="15" fg:w="3"/><text x="0.9503%" y="1039.50"></text></g><g><title>rust_stock_tracker`std::sys::unix::rand::hashmap_random_keys (3 samples, 0.14%)</title><rect x="0.7003%" y="1013" width="0.1401%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="3"/><text x="0.9503%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.14%)</title><rect x="0.7003%" y="997" width="0.1401%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="3"/><text x="0.9503%" y="1007.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (10 samples, 0.47%)</title><rect x="0.8403%" y="1045" width="0.4669%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="10"/><text x="1.0903%" y="1055.50"></text></g><g><title>rust_stock_tracker`tokio::park::thread::Inner::park (10 samples, 0.47%)</title><rect x="0.8403%" y="1029" width="0.4669%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="10"/><text x="1.0903%" y="1039.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::wait_until_internal (10 samples, 0.47%)</title><rect x="0.8403%" y="1013" width="0.4669%" height="15" fill="rgb(254,191,54)" fg:x="18" fg:w="10"/><text x="1.0903%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (10 samples, 0.47%)</title><rect x="0.8403%" y="997" width="0.4669%" height="15" fill="rgb(241,83,37)" fg:x="18" fg:w="10"/><text x="1.0903%" y="1007.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::Runtime::block_on (29 samples, 1.35%)</title><rect x="0.0000%" y="1093" width="1.3539%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="29"/><text x="0.2500%" y="1103.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::ThreadPool::block_on (29 samples, 1.35%)</title><rect x="0.0000%" y="1077" width="1.3539%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="29"/><text x="0.2500%" y="1087.50"></text></g><g><title>rust_stock_tracker`tokio::park::thread::CachedParkThread::block_on (29 samples, 1.35%)</title><rect x="0.0000%" y="1061" width="1.3539%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="29"/><text x="0.2500%" y="1071.50"></text></g><g><title>rust_stock_tracker`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.05%)</title><rect x="1.3072%" y="1045" width="0.0467%" height="15" fill="rgb(238,167,29)" fg:x="28" fg:w="1"/><text x="1.5572%" y="1055.50"></text></g><g><title>libdyld.dylib`start (30 samples, 1.40%)</title><rect x="0.0000%" y="1189" width="1.4006%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1199.50"></text></g><g><title>rust_stock_tracker`main (30 samples, 1.40%)</title><rect x="0.0000%" y="1173" width="1.4006%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1183.50"></text></g><g><title>rust_stock_tracker`std::rt::lang_start_internal (30 samples, 1.40%)</title><rect x="0.0000%" y="1157" width="1.4006%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1167.50"></text></g><g><title>rust_stock_tracker`std::rt::lang_start::_{{closure}} (30 samples, 1.40%)</title><rect x="0.0000%" y="1141" width="1.4006%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1151.50"></text></g><g><title>rust_stock_tracker`std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 1.40%)</title><rect x="0.0000%" y="1125" width="1.4006%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1135.50"></text></g><g><title>rust_stock_tracker`rust_stock_tracker::main (30 samples, 1.40%)</title><rect x="0.0000%" y="1109" width="1.4006%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1119.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::builder::Builder::build (1 samples, 0.05%)</title><rect x="1.3539%" y="1093" width="0.0467%" height="15" fill="rgb(206,96,30)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1103.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::driver::Driver::new (1 samples, 0.05%)</title><rect x="1.3539%" y="1077" width="0.0467%" height="15" fill="rgb(218,138,4)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1087.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::Driver::new (1 samples, 0.05%)</title><rect x="1.3539%" y="1061" width="0.0467%" height="15" fill="rgb(250,191,14)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1071.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.05%)</title><rect x="1.3539%" y="1045" width="0.0467%" height="15" fill="rgb(239,60,40)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1055.50"></text></g><g><title>libdyld.dylib`_dyld_fast_stub_entry(void*, long) (1 samples, 0.05%)</title><rect x="1.3539%" y="1029" width="0.0467%" height="15" fill="rgb(206,27,48)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1039.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.05%)</title><rect x="1.3539%" y="1013" width="0.0467%" height="15" fill="rgb(225,35,8)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1023.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.05%)</title><rect x="1.3539%" y="997" width="0.0467%" height="15" fill="rgb(250,213,24)" fg:x="29" fg:w="1"/><text x="1.6039%" y="1007.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.05%)</title><rect x="1.3539%" y="981" width="0.0467%" height="15" fill="rgb(247,123,22)" fg:x="29" fg:w="1"/><text x="1.6039%" y="991.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.05%)</title><rect x="1.3539%" y="965" width="0.0467%" height="15" fill="rgb(231,138,38)" fg:x="29" fg:w="1"/><text x="1.6039%" y="975.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.05%)</title><rect x="1.3539%" y="949" width="0.0467%" height="15" fill="rgb(231,145,46)" fg:x="29" fg:w="1"/><text x="1.6039%" y="959.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.05%)</title><rect x="1.3539%" y="933" width="0.0467%" height="15" fill="rgb(251,118,11)" fg:x="29" fg:w="1"/><text x="1.6039%" y="943.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.05%)</title><rect x="1.3539%" y="917" width="0.0467%" height="15" fill="rgb(217,147,25)" fg:x="29" fg:w="1"/><text x="1.6039%" y="927.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (1 samples, 0.05%)</title><rect x="1.3539%" y="901" width="0.0467%" height="15" fill="rgb(247,81,37)" fg:x="29" fg:w="1"/><text x="1.6039%" y="911.50"></text></g><g><title>dyld`ImageLoader::trieWalk (1 samples, 0.05%)</title><rect x="1.3539%" y="885" width="0.0467%" height="15" fill="rgb(209,12,38)" fg:x="29" fg:w="1"/><text x="1.6039%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.05%)</title><rect x="1.4006%" y="1189" width="0.0467%" height="15" fill="rgb(227,1,9)" fg:x="30" fg:w="1"/><text x="1.6506%" y="1199.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (8 samples, 0.37%)</title><rect x="1.4472%" y="1173" width="0.3735%" height="15" fill="rgb(248,47,43)" fg:x="31" fg:w="8"/><text x="1.6972%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="1.9141%" y="1109" width="0.0467%" height="15" fill="rgb(221,10,30)" fg:x="41" fg:w="1"/><text x="2.1641%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.05%)</title><rect x="1.9141%" y="1093" width="0.0467%" height="15" fill="rgb(210,229,1)" fg:x="41" fg:w="1"/><text x="2.1641%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.09%)</title><rect x="1.9141%" y="1125" width="0.0934%" height="15" fill="rgb(222,148,37)" fg:x="41" fg:w="2"/><text x="2.1641%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="1.9608%" y="1109" width="0.0467%" height="15" fill="rgb(234,67,33)" fg:x="42" fg:w="1"/><text x="2.2108%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (13 samples, 0.61%)</title><rect x="1.4472%" y="1189" width="0.6069%" height="15" fill="rgb(247,98,35)" fg:x="31" fg:w="13"/><text x="1.6972%" y="1199.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (5 samples, 0.23%)</title><rect x="1.8207%" y="1173" width="0.2334%" height="15" fill="rgb(247,138,52)" fg:x="39" fg:w="5"/><text x="2.0707%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (5 samples, 0.23%)</title><rect x="1.8207%" y="1157" width="0.2334%" height="15" fill="rgb(213,79,30)" fg:x="39" fg:w="5"/><text x="2.0707%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (5 samples, 0.23%)</title><rect x="1.8207%" y="1141" width="0.2334%" height="15" fill="rgb(246,177,23)" fg:x="39" fg:w="5"/><text x="2.0707%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (1 samples, 0.05%)</title><rect x="2.0075%" y="1125" width="0.0467%" height="15" fill="rgb(230,62,27)" fg:x="43" fg:w="1"/><text x="2.2575%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.05%)</title><rect x="2.0075%" y="1109" width="0.0467%" height="15" fill="rgb(216,154,8)" fg:x="43" fg:w="1"/><text x="2.2575%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.05%)</title><rect x="2.0542%" y="1125" width="0.0467%" height="15" fill="rgb(244,35,45)" fg:x="44" fg:w="1"/><text x="2.3042%" y="1135.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (1 samples, 0.05%)</title><rect x="2.1008%" y="1077" width="0.0467%" height="15" fill="rgb(251,115,12)" fg:x="45" fg:w="1"/><text x="2.3508%" y="1087.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="2.2409%" y="1061" width="0.0467%" height="15" fill="rgb(240,54,50)" fg:x="48" fg:w="1"/><text x="2.4909%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.19%)</title><rect x="2.2876%" y="1045" width="0.1867%" height="15" fill="rgb(233,84,52)" fg:x="49" fg:w="4"/><text x="2.5376%" y="1055.50"></text></g><g><title>rust_stock_tracker`mio::event::events::Events::iter (1 samples, 0.05%)</title><rect x="2.5210%" y="1029" width="0.0467%" height="15" fill="rgb(207,117,47)" fg:x="54" fg:w="1"/><text x="2.7710%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`kevent (68 samples, 3.17%)</title><rect x="2.7077%" y="1013" width="3.1746%" height="15" fill="rgb(249,43,39)" fg:x="58" fg:w="68"/><text x="2.9577%" y="1023.50">lib..</text></g><g><title>rust_stock_tracker`mio::poll::Poll::poll (1 samples, 0.05%)</title><rect x="5.8824%" y="1013" width="0.0467%" height="15" fill="rgb(209,38,44)" fg:x="126" fg:w="1"/><text x="6.1324%" y="1023.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="5.9290%" y="981" width="0.0467%" height="15" fill="rgb(236,212,23)" fg:x="127" fg:w="1"/><text x="6.1790%" y="991.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="5.9290%" y="965" width="0.0467%" height="15" fill="rgb(242,79,21)" fg:x="127" fg:w="1"/><text x="6.1790%" y="975.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::notify_one_slow (7 samples, 0.33%)</title><rect x="5.9757%" y="965" width="0.3268%" height="15" fill="rgb(211,96,35)" fg:x="128" fg:w="7"/><text x="6.2257%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (7 samples, 0.33%)</title><rect x="5.9757%" y="949" width="0.3268%" height="15" fill="rgb(253,215,40)" fg:x="128" fg:w="7"/><text x="6.2257%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::Driver::turn (81 samples, 3.78%)</title><rect x="2.5677%" y="1029" width="3.7815%" height="15" fill="rgb(211,81,21)" fg:x="55" fg:w="81"/><text x="2.8177%" y="1039.50">rust..</text></g><g><title>rust_stock_tracker`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (9 samples, 0.42%)</title><rect x="5.9290%" y="1013" width="0.4202%" height="15" fill="rgb(208,190,38)" fg:x="127" fg:w="9"/><text x="6.1790%" y="1023.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (9 samples, 0.42%)</title><rect x="5.9290%" y="997" width="0.4202%" height="15" fill="rgb(235,213,38)" fg:x="127" fg:w="9"/><text x="6.1790%" y="1007.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (8 samples, 0.37%)</title><rect x="5.9757%" y="981" width="0.3735%" height="15" fill="rgb(237,122,38)" fg:x="128" fg:w="8"/><text x="6.2257%" y="991.50"></text></g><g><title>rust_stock_tracker`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.05%)</title><rect x="6.3025%" y="965" width="0.0467%" height="15" fill="rgb(244,218,35)" fg:x="135" fg:w="1"/><text x="6.5525%" y="975.50"></text></g><g><title>rust_stock_tracker`tokio::signal::unix::driver::Driver::process (2 samples, 0.09%)</title><rect x="6.3492%" y="1029" width="0.0934%" height="15" fill="rgb(240,68,47)" fg:x="136" fg:w="2"/><text x="6.5992%" y="1039.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_ready (2 samples, 0.09%)</title><rect x="6.3492%" y="1013" width="0.0934%" height="15" fill="rgb(210,16,53)" fg:x="136" fg:w="2"/><text x="6.5992%" y="1023.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.09%)</title><rect x="6.3492%" y="997" width="0.0934%" height="15" fill="rgb(235,124,12)" fg:x="136" fg:w="2"/><text x="6.5992%" y="1007.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (1 samples, 0.05%)</title><rect x="6.4426%" y="1013" width="0.0467%" height="15" fill="rgb(224,169,11)" fg:x="138" fg:w="1"/><text x="6.6926%" y="1023.50"></text></g><g><title> 32]&gt; (1 samples, 0.05%)</title><rect x="6.4426%" y="997" width="0.0467%" height="15" fill="rgb(250,166,2)" fg:x="138" fg:w="1"/><text x="6.6926%" y="1007.50"></text></g><g><title>rust_stock_tracker`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (2 samples, 0.09%)</title><rect x="6.4426%" y="1029" width="0.0934%" height="15" fill="rgb(242,216,29)" fg:x="138" fg:w="2"/><text x="6.6926%" y="1039.50"></text></g><g><title>rust_stock_tracker`tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.05%)</title><rect x="6.4893%" y="1013" width="0.0467%" height="15" fill="rgb(230,116,27)" fg:x="139" fg:w="1"/><text x="6.7393%" y="1023.50"></text></g><g><title>rust_stock_tracker`tokio::time::driver::wheel::level::Level::next_expiration (1 samples, 0.05%)</title><rect x="6.4893%" y="997" width="0.0467%" height="15" fill="rgb(228,99,48)" fg:x="139" fg:w="1"/><text x="6.7393%" y="1007.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (93 samples, 4.34%)</title><rect x="2.2876%" y="1061" width="4.3417%" height="15" fill="rgb(253,11,6)" fg:x="49" fg:w="93"/><text x="2.5376%" y="1071.50">rust_..</text></g><g><title>rust_stock_tracker`tokio::time::driver::Driver&lt;P&gt;::park_internal (89 samples, 4.15%)</title><rect x="2.4743%" y="1045" width="4.1550%" height="15" fill="rgb(247,143,39)" fg:x="53" fg:w="89"/><text x="2.7243%" y="1055.50">rust_..</text></g><g><title>rust_stock_tracker`tokio::time::driver::wheel::Wheel::next_expiration (2 samples, 0.09%)</title><rect x="6.5359%" y="1029" width="0.0934%" height="15" fill="rgb(236,97,10)" fg:x="140" fg:w="2"/><text x="6.7859%" y="1039.50"></text></g><g><title>rust_stock_tracker`tokio::time::driver::wheel::level::Level::next_expiration (2 samples, 0.09%)</title><rect x="6.5359%" y="1013" width="0.0934%" height="15" fill="rgb(233,208,19)" fg:x="140" fg:w="2"/><text x="6.7859%" y="1023.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="6.6293%" y="1029" width="0.0467%" height="15" fill="rgb(216,164,2)" fg:x="142" fg:w="1"/><text x="6.8793%" y="1039.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;futures_util::future::poll_fn::PollFn&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::send_request::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.05%)</title><rect x="6.6293%" y="1013" width="0.0467%" height="15" fill="rgb(220,129,5)" fg:x="142" fg:w="1"/><text x="6.8793%" y="1023.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="6.6293%" y="997" width="0.0467%" height="15" fill="rgb(242,17,10)" fg:x="142" fg:w="1"/><text x="6.8793%" y="1007.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="6.6293%" y="981" width="0.0467%" height="15" fill="rgb(242,107,0)" fg:x="142" fg:w="1"/><text x="6.8793%" y="991.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.05%)</title><rect x="6.7227%" y="965" width="0.0467%" height="15" fill="rgb(251,28,31)" fg:x="144" fg:w="1"/><text x="6.9727%" y="975.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::waker::wake_by_ref (1 samples, 0.05%)</title><rect x="6.9561%" y="917" width="0.0467%" height="15" fill="rgb(233,223,10)" fg:x="149" fg:w="1"/><text x="7.2061%" y="927.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::notify_one_slow (2 samples, 0.09%)</title><rect x="7.0028%" y="885" width="0.0934%" height="15" fill="rgb(215,21,27)" fg:x="150" fg:w="2"/><text x="7.2528%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.09%)</title><rect x="7.0028%" y="869" width="0.0934%" height="15" fill="rgb(232,23,21)" fg:x="150" fg:w="2"/><text x="7.2528%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (4 samples, 0.19%)</title><rect x="6.9561%" y="949" width="0.1867%" height="15" fill="rgb(244,5,23)" fg:x="149" fg:w="4"/><text x="7.2061%" y="959.50"></text></g><g><title>rust_stock_tracker`hyper::client::dispatch::Callback&lt;T,U&gt;::send (4 samples, 0.19%)</title><rect x="6.9561%" y="933" width="0.1867%" height="15" fill="rgb(226,81,46)" fg:x="149" fg:w="4"/><text x="7.2061%" y="943.50"></text></g><g><title>rust_stock_tracker`tokio::sync::oneshot::Sender&lt;T&gt;::send (3 samples, 0.14%)</title><rect x="7.0028%" y="917" width="0.1401%" height="15" fill="rgb(247,70,30)" fg:x="150" fg:w="3"/><text x="7.2528%" y="927.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (3 samples, 0.14%)</title><rect x="7.0028%" y="901" width="0.1401%" height="15" fill="rgb(212,68,19)" fg:x="150" fg:w="3"/><text x="7.2528%" y="911.50"></text></g><g><title>rust_stock_tracker`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="7.0962%" y="885" width="0.0467%" height="15" fill="rgb(240,187,13)" fg:x="152" fg:w="1"/><text x="7.3462%" y="895.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::idle::Idle::worker_to_notify (1 samples, 0.05%)</title><rect x="7.0962%" y="869" width="0.0467%" height="15" fill="rgb(223,113,26)" fg:x="152" fg:w="1"/><text x="7.3462%" y="879.50"></text></g><g><title>rust_stock_tracker`futures_channel::mpsc::decode_state (1 samples, 0.05%)</title><rect x="7.1429%" y="949" width="0.0467%" height="15" fill="rgb(206,192,2)" fg:x="153" fg:w="1"/><text x="7.3929%" y="959.50"></text></g><g><title>rust_stock_tracker`hyper::body::body::Body::new_channel (3 samples, 0.14%)</title><rect x="7.1895%" y="949" width="0.1401%" height="15" fill="rgb(241,108,4)" fg:x="154" fg:w="3"/><text x="7.4395%" y="959.50"></text></g><g><title>rust_stock_tracker`futures_channel::mpsc::channel (1 samples, 0.05%)</title><rect x="7.2829%" y="933" width="0.0467%" height="15" fill="rgb(247,173,49)" fg:x="156" fg:w="1"/><text x="7.5329%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="7.2829%" y="917" width="0.0467%" height="15" fill="rgb(224,114,35)" fg:x="156" fg:w="1"/><text x="7.5329%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="7.2829%" y="901" width="0.0467%" height="15" fill="rgb(245,159,27)" fg:x="156" fg:w="1"/><text x="7.5329%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="7.2829%" y="885" width="0.0467%" height="15" fill="rgb(245,172,44)" fg:x="156" fg:w="1"/><text x="7.5329%" y="895.50"></text></g><g><title>rust_stock_tracker`hyper::body::body::Sender::poll_ready (2 samples, 0.09%)</title><rect x="7.3296%" y="949" width="0.0934%" height="15" fill="rgb(236,23,11)" fg:x="157" fg:w="2"/><text x="7.5796%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.05%)</title><rect x="7.3763%" y="933" width="0.0467%" height="15" fill="rgb(205,117,38)" fg:x="158" fg:w="1"/><text x="7.6263%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.47%)</title><rect x="7.4230%" y="869" width="0.4669%" height="15" fill="rgb(237,72,25)" fg:x="159" fg:w="10"/><text x="7.6730%" y="879.50"></text></g><g><title>rust_stock_tracker`hyper::body::body::Sender::try_send_data (11 samples, 0.51%)</title><rect x="7.4230%" y="949" width="0.5135%" height="15" fill="rgb(244,70,9)" fg:x="159" fg:w="11"/><text x="7.6730%" y="959.50"></text></g><g><title>rust_stock_tracker`futures_channel::mpsc::Sender&lt;T&gt;::try_send (11 samples, 0.51%)</title><rect x="7.4230%" y="933" width="0.5135%" height="15" fill="rgb(217,125,39)" fg:x="159" fg:w="11"/><text x="7.6730%" y="943.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (11 samples, 0.51%)</title><rect x="7.4230%" y="917" width="0.5135%" height="15" fill="rgb(235,36,10)" fg:x="159" fg:w="11"/><text x="7.6730%" y="927.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (11 samples, 0.51%)</title><rect x="7.4230%" y="901" width="0.5135%" height="15" fill="rgb(251,123,47)" fg:x="159" fg:w="11"/><text x="7.6730%" y="911.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::notify_one_slow (11 samples, 0.51%)</title><rect x="7.4230%" y="885" width="0.5135%" height="15" fill="rgb(221,13,13)" fg:x="159" fg:w="11"/><text x="7.6730%" y="895.50"></text></g><g><title>rust_stock_tracker`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.05%)</title><rect x="7.8898%" y="869" width="0.0467%" height="15" fill="rgb(238,131,9)" fg:x="169" fg:w="1"/><text x="8.1398%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;want::State as core::convert::From&lt;usize&gt;&gt;::from (1 samples, 0.05%)</title><rect x="7.9365%" y="933" width="0.0467%" height="15" fill="rgb(211,50,8)" fg:x="170" fg:w="1"/><text x="8.1865%" y="943.50"></text></g><g><title>rust_stock_tracker`hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (3 samples, 0.14%)</title><rect x="7.9365%" y="949" width="0.1401%" height="15" fill="rgb(245,182,24)" fg:x="170" fg:w="3"/><text x="8.1865%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (2 samples, 0.09%)</title><rect x="7.9832%" y="933" width="0.0934%" height="15" fill="rgb(242,14,37)" fg:x="171" fg:w="2"/><text x="8.2332%" y="943.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (2 samples, 0.09%)</title><rect x="7.9832%" y="917" width="0.0934%" height="15" fill="rgb(246,228,12)" fg:x="171" fg:w="2"/><text x="8.2332%" y="927.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::notify_one_slow (2 samples, 0.09%)</title><rect x="7.9832%" y="901" width="0.0934%" height="15" fill="rgb(213,55,15)" fg:x="171" fg:w="2"/><text x="8.2332%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.09%)</title><rect x="7.9832%" y="885" width="0.0934%" height="15" fill="rgb(209,9,3)" fg:x="171" fg:w="2"/><text x="8.2332%" y="895.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (2 samples, 0.09%)</title><rect x="8.0766%" y="949" width="0.0934%" height="15" fill="rgb(230,59,30)" fg:x="173" fg:w="2"/><text x="8.3266%" y="959.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::role::encode_headers (2 samples, 0.09%)</title><rect x="8.0766%" y="933" width="0.0934%" height="15" fill="rgb(209,121,21)" fg:x="173" fg:w="2"/><text x="8.3266%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (2 samples, 0.09%)</title><rect x="8.0766%" y="917" width="0.0934%" height="15" fill="rgb(220,109,13)" fg:x="173" fg:w="2"/><text x="8.3266%" y="927.50"></text></g><g><title>rust_stock_tracker`core::fmt::write (2 samples, 0.09%)</title><rect x="8.0766%" y="901" width="0.0934%" height="15" fill="rgb(232,18,1)" fg:x="173" fg:w="2"/><text x="8.3266%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;http::uri::Uri as core::fmt::Display&gt;::fmt (2 samples, 0.09%)</title><rect x="8.0766%" y="885" width="0.0934%" height="15" fill="rgb(215,41,42)" fg:x="173" fg:w="2"/><text x="8.3266%" y="895.50"></text></g><g><title>rust_stock_tracker`core::fmt::Formatter::write_fmt (1 samples, 0.05%)</title><rect x="8.1232%" y="869" width="0.0467%" height="15" fill="rgb(224,123,36)" fg:x="174" fg:w="1"/><text x="8.3732%" y="879.50"></text></g><g><title>rust_stock_tracker`core::fmt::write (1 samples, 0.05%)</title><rect x="8.1232%" y="853" width="0.0467%" height="15" fill="rgb(240,125,3)" fg:x="174" fg:w="1"/><text x="8.3732%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="8.1232%" y="837" width="0.0467%" height="15" fill="rgb(205,98,50)" fg:x="174" fg:w="1"/><text x="8.3732%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.05%)</title><rect x="8.2166%" y="933" width="0.0467%" height="15" fill="rgb(205,185,37)" fg:x="176" fg:w="1"/><text x="8.4666%" y="943.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (14 samples, 0.65%)</title><rect x="8.2633%" y="885" width="0.6536%" height="15" fill="rgb(238,207,15)" fg:x="177" fg:w="14"/><text x="8.5133%" y="895.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::write_func (14 samples, 0.65%)</title><rect x="8.2633%" y="869" width="0.6536%" height="15" fill="rgb(213,199,42)" fg:x="177" fg:w="14"/><text x="8.5133%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (14 samples, 0.65%)</title><rect x="8.2633%" y="853" width="0.6536%" height="15" fill="rgb(235,201,11)" fg:x="177" fg:w="14"/><text x="8.5133%" y="863.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_write_io (14 samples, 0.65%)</title><rect x="8.2633%" y="837" width="0.6536%" height="15" fill="rgb(207,46,11)" fg:x="177" fg:w="14"/><text x="8.5133%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (14 samples, 0.65%)</title><rect x="8.2633%" y="821" width="0.6536%" height="15" fill="rgb(241,35,35)" fg:x="177" fg:w="14"/><text x="8.5133%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (14 samples, 0.65%)</title><rect x="8.2633%" y="805" width="0.6536%" height="15" fill="rgb(243,32,47)" fg:x="177" fg:w="14"/><text x="8.5133%" y="815.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.05%)</title><rect x="8.9169%" y="853" width="0.0467%" height="15" fill="rgb(247,202,23)" fg:x="191" fg:w="1"/><text x="9.1669%" y="863.50"></text></g><g><title>libcorecrypto.dylib`aes_key_expansion (1 samples, 0.05%)</title><rect x="8.9169%" y="837" width="0.0467%" height="15" fill="rgb(219,102,11)" fg:x="191" fg:w="1"/><text x="9.1669%" y="847.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (18 samples, 0.84%)</title><rect x="8.1699%" y="949" width="0.8403%" height="15" fill="rgb(243,110,44)" fg:x="175" fg:w="18"/><text x="8.4199%" y="959.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (16 samples, 0.75%)</title><rect x="8.2633%" y="933" width="0.7470%" height="15" fill="rgb(222,74,54)" fg:x="177" fg:w="16"/><text x="8.5133%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (16 samples, 0.75%)</title><rect x="8.2633%" y="917" width="0.7470%" height="15" fill="rgb(216,99,12)" fg:x="177" fg:w="16"/><text x="8.5133%" y="927.50"></text></g><g><title>Security`SSLWrite (16 samples, 0.75%)</title><rect x="8.2633%" y="901" width="0.7470%" height="15" fill="rgb(226,22,26)" fg:x="177" fg:w="16"/><text x="8.5133%" y="911.50"></text></g><g><title>Security`SSLRecordWriteInternal (2 samples, 0.09%)</title><rect x="8.9169%" y="885" width="0.0934%" height="15" fill="rgb(217,163,10)" fg:x="191" fg:w="2"/><text x="9.1669%" y="895.50"></text></g><g><title>libcoretls.dylib`tls_record_encrypt (2 samples, 0.09%)</title><rect x="8.9169%" y="869" width="0.0934%" height="15" fill="rgb(213,25,53)" fg:x="191" fg:w="2"/><text x="9.1669%" y="879.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADEncrypt (1 samples, 0.05%)</title><rect x="8.9636%" y="853" width="0.0467%" height="15" fill="rgb(252,105,26)" fg:x="192" fg:w="1"/><text x="9.2136%" y="863.50"></text></g><g><title>libcorecrypto.dylib`Encrypt_Main_Loop_End (1 samples, 0.05%)</title><rect x="8.9636%" y="837" width="0.0467%" height="15" fill="rgb(220,39,43)" fg:x="192" fg:w="1"/><text x="9.2136%" y="847.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (1 samples, 0.05%)</title><rect x="9.0103%" y="933" width="0.0467%" height="15" fill="rgb(229,68,48)" fg:x="193" fg:w="1"/><text x="9.2603%" y="943.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.05%)</title><rect x="9.0103%" y="917" width="0.0467%" height="15" fill="rgb(252,8,32)" fg:x="193" fg:w="1"/><text x="9.2603%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="9.0103%" y="901" width="0.0467%" height="15" fill="rgb(223,20,43)" fg:x="193" fg:w="1"/><text x="9.2603%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="9.0103%" y="885" width="0.0467%" height="15" fill="rgb(229,81,49)" fg:x="193" fg:w="1"/><text x="9.2603%" y="895.50"></text></g><g><title>Security`SSLRead (1 samples, 0.05%)</title><rect x="9.0103%" y="869" width="0.0467%" height="15" fill="rgb(236,28,36)" fg:x="193" fg:w="1"/><text x="9.2603%" y="879.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.05%)</title><rect x="9.0103%" y="853" width="0.0467%" height="15" fill="rgb(249,185,26)" fg:x="193" fg:w="1"/><text x="9.2603%" y="863.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::read_func (1 samples, 0.05%)</title><rect x="9.0103%" y="837" width="0.0467%" height="15" fill="rgb(249,174,33)" fg:x="193" fg:w="1"/><text x="9.2603%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="9.0103%" y="821" width="0.0467%" height="15" fill="rgb(233,201,37)" fg:x="193" fg:w="1"/><text x="9.2603%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="9.0103%" y="805" width="0.0467%" height="15" fill="rgb(221,78,26)" fg:x="193" fg:w="1"/><text x="9.2603%" y="815.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.05%)</title><rect x="9.0103%" y="789" width="0.0467%" height="15" fill="rgb(250,127,30)" fg:x="193" fg:w="1"/><text x="9.2603%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="9.0103%" y="773" width="0.0467%" height="15" fill="rgb(230,49,44)" fg:x="193" fg:w="1"/><text x="9.2603%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 0.05%)</title><rect x="9.0103%" y="757" width="0.0467%" height="15" fill="rgb(229,67,23)" fg:x="193" fg:w="1"/><text x="9.2603%" y="767.50"></text></g><g><title>rust_stock_tracker`__rdl_alloc (1 samples, 0.05%)</title><rect x="9.0570%" y="917" width="0.0467%" height="15" fill="rgb(249,83,47)" fg:x="194" fg:w="1"/><text x="9.3070%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.23%)</title><rect x="9.1970%" y="901" width="0.2334%" height="15" fill="rgb(215,43,3)" fg:x="197" fg:w="5"/><text x="9.4470%" y="911.50"></text></g><g><title>Security`SSLRead (1 samples, 0.05%)</title><rect x="9.4304%" y="885" width="0.0467%" height="15" fill="rgb(238,154,13)" fg:x="202" fg:w="1"/><text x="9.6804%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.09%)</title><rect x="9.5238%" y="837" width="0.0934%" height="15" fill="rgb(219,56,2)" fg:x="204" fg:w="2"/><text x="9.7738%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.05%)</title><rect x="9.5705%" y="821" width="0.0467%" height="15" fill="rgb(233,0,4)" fg:x="205" fg:w="1"/><text x="9.8205%" y="831.50"></text></g><g><title>Security`SSLRecordFreeInternal (3 samples, 0.14%)</title><rect x="9.5238%" y="853" width="0.1401%" height="15" fill="rgb(235,30,7)" fg:x="204" fg:w="3"/><text x="9.7738%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.05%)</title><rect x="9.6172%" y="837" width="0.0467%" height="15" fill="rgb(250,79,13)" fg:x="206" fg:w="1"/><text x="9.8672%" y="847.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.05%)</title><rect x="9.6639%" y="837" width="0.0467%" height="15" fill="rgb(211,146,34)" fg:x="207" fg:w="1"/><text x="9.9139%" y="847.50"></text></g><g><title>libcoretls.dylib`CCSymmAddADD (1 samples, 0.05%)</title><rect x="9.7106%" y="837" width="0.0467%" height="15" fill="rgb(228,22,38)" fg:x="208" fg:w="1"/><text x="9.9606%" y="847.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_ecb (1 samples, 0.05%)</title><rect x="9.7572%" y="805" width="0.0467%" height="15" fill="rgb(235,168,5)" fg:x="209" fg:w="1"/><text x="10.0072%" y="815.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_reset (1 samples, 0.05%)</title><rect x="9.8039%" y="789" width="0.0467%" height="15" fill="rgb(221,155,16)" fg:x="210" fg:w="1"/><text x="10.0539%" y="799.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.05%)</title><rect x="9.8039%" y="773" width="0.0467%" height="15" fill="rgb(215,215,53)" fg:x="210" fg:w="1"/><text x="10.0539%" y="783.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_init (2 samples, 0.09%)</title><rect x="9.8039%" y="805" width="0.0934%" height="15" fill="rgb(223,4,10)" fg:x="210" fg:w="2"/><text x="10.0539%" y="815.50"></text></g><g><title>libsystem_c.dylib`memset_s (1 samples, 0.05%)</title><rect x="9.8506%" y="789" width="0.0467%" height="15" fill="rgb(234,103,6)" fg:x="211" fg:w="1"/><text x="10.1006%" y="799.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (4 samples, 0.19%)</title><rect x="9.7572%" y="821" width="0.1867%" height="15" fill="rgb(227,97,0)" fg:x="209" fg:w="4"/><text x="10.0072%" y="831.50"></text></g><g><title>libcorecrypto.dylib`gcm_init (1 samples, 0.05%)</title><rect x="9.8973%" y="805" width="0.0467%" height="15" fill="rgb(234,150,53)" fg:x="212" fg:w="1"/><text x="10.1473%" y="815.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADSetIV (1 samples, 0.05%)</title><rect x="9.9440%" y="821" width="0.0467%" height="15" fill="rgb(228,201,54)" fg:x="213" fg:w="1"/><text x="10.1940%" y="831.50"></text></g><g><title>libcorecrypto.dylib`Decrypt_Main_Loop_End (1 samples, 0.05%)</title><rect x="9.9907%" y="789" width="0.0467%" height="15" fill="rgb(222,22,37)" fg:x="214" fg:w="1"/><text x="10.2407%" y="799.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (7 samples, 0.33%)</title><rect x="9.7572%" y="837" width="0.3268%" height="15" fill="rgb(237,53,32)" fg:x="209" fg:w="7"/><text x="10.0072%" y="847.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (2 samples, 0.09%)</title><rect x="9.9907%" y="821" width="0.0934%" height="15" fill="rgb(233,25,53)" fg:x="214" fg:w="2"/><text x="10.2407%" y="831.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (2 samples, 0.09%)</title><rect x="9.9907%" y="805" width="0.0934%" height="15" fill="rgb(210,40,34)" fg:x="214" fg:w="2"/><text x="10.2407%" y="815.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_finalize (1 samples, 0.05%)</title><rect x="10.0373%" y="789" width="0.0467%" height="15" fill="rgb(241,220,44)" fg:x="215" fg:w="1"/><text x="10.2873%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="10.0840%" y="805" width="0.0467%" height="15" fill="rgb(235,28,35)" fg:x="216" fg:w="1"/><text x="10.3340%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="10.0840%" y="789" width="0.0467%" height="15" fill="rgb(210,56,17)" fg:x="216" fg:w="1"/><text x="10.3340%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="10.1307%" y="805" width="0.0467%" height="15" fill="rgb(224,130,29)" fg:x="217" fg:w="1"/><text x="10.3807%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.14%)</title><rect x="10.0840%" y="837" width="0.1401%" height="15" fill="rgb(235,212,8)" fg:x="216" fg:w="3"/><text x="10.3340%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.14%)</title><rect x="10.0840%" y="821" width="0.1401%" height="15" fill="rgb(223,33,50)" fg:x="216" fg:w="3"/><text x="10.3340%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="10.1774%" y="805" width="0.0467%" height="15" fill="rgb(219,149,13)" fg:x="218" fg:w="1"/><text x="10.4274%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="10.1774%" y="789" width="0.0467%" height="15" fill="rgb(250,156,29)" fg:x="218" fg:w="1"/><text x="10.4274%" y="799.50"></text></g><g><title>rust_stock_tracker`std::sys::unix::decode_error_kind (1 samples, 0.05%)</title><rect x="10.2241%" y="789" width="0.0467%" height="15" fill="rgb(216,193,19)" fg:x="219" fg:w="1"/><text x="10.4741%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (28 samples, 1.31%)</title><rect x="10.2708%" y="773" width="1.3072%" height="15" fill="rgb(216,135,14)" fg:x="220" fg:w="28"/><text x="10.5208%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (28 samples, 1.31%)</title><rect x="10.2708%" y="757" width="1.3072%" height="15" fill="rgb(241,47,5)" fg:x="220" fg:w="28"/><text x="10.5208%" y="767.50"></text></g><g><title>Security`SSLRecordReadInternal (42 samples, 1.96%)</title><rect x="9.6639%" y="853" width="1.9608%" height="15" fill="rgb(233,42,35)" fg:x="207" fg:w="42"/><text x="9.9139%" y="863.50">S..</text></g><g><title>rust_stock_tracker`security_framework::secure_transport::read_func (30 samples, 1.40%)</title><rect x="10.2241%" y="837" width="1.4006%" height="15" fill="rgb(231,13,6)" fg:x="219" fg:w="30"/><text x="10.4741%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (30 samples, 1.40%)</title><rect x="10.2241%" y="821" width="1.4006%" height="15" fill="rgb(207,181,40)" fg:x="219" fg:w="30"/><text x="10.4741%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (30 samples, 1.40%)</title><rect x="10.2241%" y="805" width="1.4006%" height="15" fill="rgb(254,173,49)" fg:x="219" fg:w="30"/><text x="10.4741%" y="815.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_read_io (29 samples, 1.35%)</title><rect x="10.2708%" y="789" width="1.3539%" height="15" fill="rgb(221,1,38)" fg:x="220" fg:w="29"/><text x="10.5208%" y="799.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.05%)</title><rect x="11.5780%" y="773" width="0.0467%" height="15" fill="rgb(206,124,46)" fg:x="248" fg:w="1"/><text x="11.8280%" y="783.50"></text></g><g><title>libcoretls.dylib`tls_record_get_header_size (1 samples, 0.05%)</title><rect x="11.6246%" y="853" width="0.0467%" height="15" fill="rgb(249,21,11)" fg:x="249" fg:w="1"/><text x="11.8746%" y="863.50"></text></g><g><title>Security`SSLRead (48 samples, 2.24%)</title><rect x="9.4771%" y="869" width="2.2409%" height="15" fill="rgb(222,201,40)" fg:x="203" fg:w="48"/><text x="9.7271%" y="879.50">S..</text></g><g><title>libcoretls.dylib`tls_record_parse_header (1 samples, 0.05%)</title><rect x="11.6713%" y="853" width="0.0467%" height="15" fill="rgb(235,61,29)" fg:x="250" fg:w="1"/><text x="11.9213%" y="863.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (50 samples, 2.33%)</title><rect x="9.4304%" y="901" width="2.3343%" height="15" fill="rgb(219,207,3)" fg:x="202" fg:w="50"/><text x="9.6804%" y="911.50">r..</text></g><g><title>rust_stock_tracker`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (49 samples, 2.29%)</title><rect x="9.4771%" y="885" width="2.2876%" height="15" fill="rgb(222,56,46)" fg:x="203" fg:w="49"/><text x="9.7271%" y="895.50">r..</text></g><g><title>libcoretls.dylib`tls_handshake_continue (1 samples, 0.05%)</title><rect x="11.7180%" y="869" width="0.0467%" height="15" fill="rgb(239,76,54)" fg:x="251" fg:w="1"/><text x="11.9680%" y="879.50"></text></g><g><title>rust_stock_tracker`DYLD-STUB$$SSLGetConnection (1 samples, 0.05%)</title><rect x="11.7647%" y="901" width="0.0467%" height="15" fill="rgb(231,124,27)" fg:x="252" fg:w="1"/><text x="12.0147%" y="911.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (61 samples, 2.85%)</title><rect x="9.0103%" y="949" width="2.8478%" height="15" fill="rgb(249,195,6)" fg:x="193" fg:w="61"/><text x="9.2603%" y="959.50">ru..</text></g><g><title>rust_stock_tracker`hyper::proto::h1::decode::Decoder::decode (60 samples, 2.80%)</title><rect x="9.0570%" y="933" width="2.8011%" height="15" fill="rgb(237,174,47)" fg:x="194" fg:w="60"/><text x="9.3070%" y="943.50">ru..</text></g><g><title>rust_stock_tracker`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (59 samples, 2.75%)</title><rect x="9.1036%" y="917" width="2.7544%" height="15" fill="rgb(206,201,31)" fg:x="195" fg:w="59"/><text x="9.3536%" y="927.50">ru..</text></g><g><title>rust_stock_tracker`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.05%)</title><rect x="11.8114%" y="901" width="0.0467%" height="15" fill="rgb(231,57,52)" fg:x="253" fg:w="1"/><text x="12.0614%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="11.8114%" y="885" width="0.0467%" height="15" fill="rgb(248,177,22)" fg:x="253" fg:w="1"/><text x="12.0614%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="11.8114%" y="869" width="0.0467%" height="15" fill="rgb(215,211,37)" fg:x="253" fg:w="1"/><text x="12.0614%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="11.8114%" y="853" width="0.0467%" height="15" fill="rgb(241,128,51)" fg:x="253" fg:w="1"/><text x="12.0614%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.05%)</title><rect x="11.8114%" y="837" width="0.0467%" height="15" fill="rgb(227,165,31)" fg:x="253" fg:w="1"/><text x="12.0614%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="11.8114%" y="821" width="0.0467%" height="15" fill="rgb(228,167,24)" fg:x="253" fg:w="1"/><text x="12.0614%" y="831.50"></text></g><g><title>Security`SSLRecordFreeInternal (1 samples, 0.05%)</title><rect x="11.9514%" y="853" width="0.0467%" height="15" fill="rgb(228,143,12)" fg:x="256" fg:w="1"/><text x="12.2014%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="11.9514%" y="837" width="0.0467%" height="15" fill="rgb(249,149,8)" fg:x="256" fg:w="1"/><text x="12.2014%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="11.9514%" y="821" width="0.0467%" height="15" fill="rgb(243,35,44)" fg:x="256" fg:w="1"/><text x="12.2014%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="11.9514%" y="805" width="0.0467%" height="15" fill="rgb(246,89,9)" fg:x="256" fg:w="1"/><text x="12.2014%" y="815.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (2 samples, 0.09%)</title><rect x="11.9981%" y="837" width="0.0934%" height="15" fill="rgb(233,213,13)" fg:x="257" fg:w="2"/><text x="12.2481%" y="847.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (2 samples, 0.09%)</title><rect x="11.9981%" y="821" width="0.0934%" height="15" fill="rgb(233,141,41)" fg:x="257" fg:w="2"/><text x="12.2481%" y="831.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (1 samples, 0.05%)</title><rect x="12.0448%" y="805" width="0.0467%" height="15" fill="rgb(239,167,4)" fg:x="258" fg:w="1"/><text x="12.2948%" y="815.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_finalize (1 samples, 0.05%)</title><rect x="12.0448%" y="789" width="0.0467%" height="15" fill="rgb(209,217,16)" fg:x="258" fg:w="1"/><text x="12.2948%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.42%)</title><rect x="11.9048%" y="901" width="0.4202%" height="15" fill="rgb(219,88,35)" fg:x="255" fg:w="9"/><text x="12.1548%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (8 samples, 0.37%)</title><rect x="11.9514%" y="885" width="0.3735%" height="15" fill="rgb(220,193,23)" fg:x="256" fg:w="8"/><text x="12.2014%" y="895.50"></text></g><g><title>Security`SSLRead (8 samples, 0.37%)</title><rect x="11.9514%" y="869" width="0.3735%" height="15" fill="rgb(230,90,52)" fg:x="256" fg:w="8"/><text x="12.2014%" y="879.50"></text></g><g><title>Security`SSLRecordReadInternal (7 samples, 0.33%)</title><rect x="11.9981%" y="853" width="0.3268%" height="15" fill="rgb(252,106,19)" fg:x="257" fg:w="7"/><text x="12.2481%" y="863.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::read_func (5 samples, 0.23%)</title><rect x="12.0915%" y="837" width="0.2334%" height="15" fill="rgb(206,74,20)" fg:x="259" fg:w="5"/><text x="12.3415%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (5 samples, 0.23%)</title><rect x="12.0915%" y="821" width="0.2334%" height="15" fill="rgb(230,138,44)" fg:x="259" fg:w="5"/><text x="12.3415%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.23%)</title><rect x="12.0915%" y="805" width="0.2334%" height="15" fill="rgb(235,182,43)" fg:x="259" fg:w="5"/><text x="12.3415%" y="815.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_read_io (5 samples, 0.23%)</title><rect x="12.0915%" y="789" width="0.2334%" height="15" fill="rgb(242,16,51)" fg:x="259" fg:w="5"/><text x="12.3415%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.23%)</title><rect x="12.0915%" y="773" width="0.2334%" height="15" fill="rgb(248,9,4)" fg:x="259" fg:w="5"/><text x="12.3415%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (5 samples, 0.23%)</title><rect x="12.0915%" y="757" width="0.2334%" height="15" fill="rgb(210,31,22)" fg:x="259" fg:w="5"/><text x="12.3415%" y="767.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (10 samples, 0.47%)</title><rect x="11.9048%" y="917" width="0.4669%" height="15" fill="rgb(239,54,39)" fg:x="255" fg:w="10"/><text x="12.1548%" y="927.50"></text></g><g><title>rust_stock_tracker`DYLD-STUB$$bzero (1 samples, 0.05%)</title><rect x="12.3249%" y="901" width="0.0467%" height="15" fill="rgb(230,99,41)" fg:x="264" fg:w="1"/><text x="12.5749%" y="911.50"></text></g><g><title>rust_stock_tracker`http::header::map::HeaderMap&lt;T&gt;::append (6 samples, 0.28%)</title><rect x="12.5117%" y="885" width="0.2801%" height="15" fill="rgb(253,106,12)" fg:x="268" fg:w="6"/><text x="12.7617%" y="895.50"></text></g><g><title>rust_stock_tracker`http::header::map::HeaderMap&lt;T&gt;::reserve_one (1 samples, 0.05%)</title><rect x="12.7451%" y="869" width="0.0467%" height="15" fill="rgb(213,46,41)" fg:x="273" fg:w="1"/><text x="12.9951%" y="879.50"></text></g><g><title>rust_stock_tracker`http::header::name::HeaderName::from_bytes (2 samples, 0.09%)</title><rect x="12.7918%" y="885" width="0.0934%" height="15" fill="rgb(215,133,35)" fg:x="274" fg:w="2"/><text x="13.0418%" y="895.50"></text></g><g><title>rust_stock_tracker`bytes::bytes::Bytes::copy_from_slice (1 samples, 0.05%)</title><rect x="12.8385%" y="869" width="0.0467%" height="15" fill="rgb(213,28,5)" fg:x="275" fg:w="1"/><text x="13.0885%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="12.8385%" y="853" width="0.0467%" height="15" fill="rgb(215,77,49)" fg:x="275" fg:w="1"/><text x="13.0885%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="12.8385%" y="837" width="0.0467%" height="15" fill="rgb(248,100,22)" fg:x="275" fg:w="1"/><text x="13.0885%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="12.8385%" y="821" width="0.0467%" height="15" fill="rgb(208,67,9)" fg:x="275" fg:w="1"/><text x="13.0885%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="12.8385%" y="805" width="0.0467%" height="15" fill="rgb(219,133,21)" fg:x="275" fg:w="1"/><text x="13.0885%" y="815.50"></text></g><g><title>rust_stock_tracker`http::header::name::parse_hdr (3 samples, 0.14%)</title><rect x="12.8852%" y="885" width="0.1401%" height="15" fill="rgb(246,46,29)" fg:x="276" fg:w="3"/><text x="13.1352%" y="895.50"></text></g><g><title>rust_stock_tracker`httparse::Response::parse_with_config_and_uninit_headers (6 samples, 0.28%)</title><rect x="13.0252%" y="885" width="0.2801%" height="15" fill="rgb(246,185,52)" fg:x="279" fg:w="6"/><text x="13.2752%" y="895.50"></text></g><g><title>rust_stock_tracker`httparse::parse_headers_iter_uninit (5 samples, 0.23%)</title><rect x="13.0719%" y="869" width="0.2334%" height="15" fill="rgb(252,136,11)" fg:x="280" fg:w="5"/><text x="13.3219%" y="879.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (32 samples, 1.49%)</title><rect x="11.8581%" y="949" width="1.4939%" height="15" fill="rgb(219,138,53)" fg:x="254" fg:w="32"/><text x="12.1081%" y="959.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (32 samples, 1.49%)</title><rect x="11.8581%" y="933" width="1.4939%" height="15" fill="rgb(211,51,23)" fg:x="254" fg:w="32"/><text x="12.1081%" y="943.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::role::parse_headers (21 samples, 0.98%)</title><rect x="12.3716%" y="917" width="0.9804%" height="15" fill="rgb(247,221,28)" fg:x="265" fg:w="21"/><text x="12.6216%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (20 samples, 0.93%)</title><rect x="12.4183%" y="901" width="0.9337%" height="15" fill="rgb(251,222,45)" fg:x="266" fg:w="20"/><text x="12.6683%" y="911.50"></text></g><g><title>rust_stock_tracker`hyper::headers::content_length_parse_all (1 samples, 0.05%)</title><rect x="13.3053%" y="885" width="0.0467%" height="15" fill="rgb(217,162,53)" fg:x="285" fg:w="1"/><text x="13.5553%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.09%)</title><rect x="13.3987%" y="901" width="0.0934%" height="15" fill="rgb(229,93,14)" fg:x="287" fg:w="2"/><text x="13.6487%" y="911.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (5 samples, 0.23%)</title><rect x="13.3520%" y="949" width="0.2334%" height="15" fill="rgb(209,67,49)" fg:x="286" fg:w="5"/><text x="13.6020%" y="959.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (5 samples, 0.23%)</title><rect x="13.3520%" y="933" width="0.2334%" height="15" fill="rgb(213,87,29)" fg:x="286" fg:w="5"/><text x="13.6020%" y="943.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (5 samples, 0.23%)</title><rect x="13.3520%" y="917" width="0.2334%" height="15" fill="rgb(205,151,52)" fg:x="286" fg:w="5"/><text x="13.6020%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.09%)</title><rect x="13.4921%" y="901" width="0.0934%" height="15" fill="rgb(253,215,39)" fg:x="289" fg:w="2"/><text x="13.7421%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;security_framework::secure_transport::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="13.5387%" y="885" width="0.0467%" height="15" fill="rgb(221,220,41)" fg:x="290" fg:w="1"/><text x="13.7887%" y="895.50"></text></g><g><title>Security`SSLRead (1 samples, 0.05%)</title><rect x="13.5387%" y="869" width="0.0467%" height="15" fill="rgb(218,133,21)" fg:x="290" fg:w="1"/><text x="13.7887%" y="879.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.05%)</title><rect x="13.5387%" y="853" width="0.0467%" height="15" fill="rgb(221,193,43)" fg:x="290" fg:w="1"/><text x="13.7887%" y="863.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::read_func (1 samples, 0.05%)</title><rect x="13.5387%" y="837" width="0.0467%" height="15" fill="rgb(240,128,52)" fg:x="290" fg:w="1"/><text x="13.7887%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="13.5387%" y="821" width="0.0467%" height="15" fill="rgb(253,114,12)" fg:x="290" fg:w="1"/><text x="13.7887%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.05%)</title><rect x="13.5387%" y="805" width="0.0467%" height="15" fill="rgb(215,223,47)" fg:x="290" fg:w="1"/><text x="13.7887%" y="815.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.05%)</title><rect x="13.5387%" y="789" width="0.0467%" height="15" fill="rgb(248,225,23)" fg:x="290" fg:w="1"/><text x="13.7887%" y="799.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.05%)</title><rect x="13.5387%" y="773" width="0.0467%" height="15" fill="rgb(250,108,0)" fg:x="290" fg:w="1"/><text x="13.7887%" y="783.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (13 samples, 0.61%)</title><rect x="13.5854%" y="901" width="0.6069%" height="15" fill="rgb(228,208,7)" fg:x="291" fg:w="13"/><text x="13.8354%" y="911.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::write_func (13 samples, 0.61%)</title><rect x="13.5854%" y="885" width="0.6069%" height="15" fill="rgb(244,45,10)" fg:x="291" fg:w="13"/><text x="13.8354%" y="895.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (13 samples, 0.61%)</title><rect x="13.5854%" y="869" width="0.6069%" height="15" fill="rgb(207,125,25)" fg:x="291" fg:w="13"/><text x="13.8354%" y="879.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_write_io (13 samples, 0.61%)</title><rect x="13.5854%" y="853" width="0.6069%" height="15" fill="rgb(210,195,18)" fg:x="291" fg:w="13"/><text x="13.8354%" y="863.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (13 samples, 0.61%)</title><rect x="13.5854%" y="837" width="0.6069%" height="15" fill="rgb(249,80,12)" fg:x="291" fg:w="13"/><text x="13.8354%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (13 samples, 0.61%)</title><rect x="13.5854%" y="821" width="0.6069%" height="15" fill="rgb(221,65,9)" fg:x="291" fg:w="13"/><text x="13.8354%" y="831.50"></text></g><g><title>libcoretls.dylib`SSLAllocBuffer (1 samples, 0.05%)</title><rect x="14.1923%" y="885" width="0.0467%" height="15" fill="rgb(235,49,36)" fg:x="304" fg:w="1"/><text x="14.4423%" y="895.50"></text></g><g><title>libcoretls.dylib`SSLEncodeInt (1 samples, 0.05%)</title><rect x="14.2390%" y="837" width="0.0467%" height="15" fill="rgb(225,32,20)" fg:x="305" fg:w="1"/><text x="14.4890%" y="847.50"></text></g><g><title>rust_stock_tracker`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_shutdown (16 samples, 0.75%)</title><rect x="13.5854%" y="949" width="0.7470%" height="15" fill="rgb(215,141,46)" fg:x="291" fg:w="16"/><text x="13.8354%" y="959.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (16 samples, 0.75%)</title><rect x="13.5854%" y="933" width="0.7470%" height="15" fill="rgb(250,160,47)" fg:x="291" fg:w="16"/><text x="13.8354%" y="943.50"></text></g><g><title>Security`SSLClose (16 samples, 0.75%)</title><rect x="13.5854%" y="917" width="0.7470%" height="15" fill="rgb(216,222,40)" fg:x="291" fg:w="16"/><text x="13.8354%" y="927.50"></text></g><g><title>libcoretls.dylib`tls_handshake_close (3 samples, 0.14%)</title><rect x="14.1923%" y="901" width="0.1401%" height="15" fill="rgb(234,217,39)" fg:x="304" fg:w="3"/><text x="14.4423%" y="911.50"></text></g><g><title>libcoretls.dylib`SSLSendAlert (2 samples, 0.09%)</title><rect x="14.2390%" y="885" width="0.0934%" height="15" fill="rgb(207,178,40)" fg:x="305" fg:w="2"/><text x="14.4890%" y="895.50"></text></g><g><title>Security`tls_handshake_write_callback (2 samples, 0.09%)</title><rect x="14.2390%" y="869" width="0.0934%" height="15" fill="rgb(221,136,13)" fg:x="305" fg:w="2"/><text x="14.4890%" y="879.50"></text></g><g><title>Security`SSLRecordWriteInternal (2 samples, 0.09%)</title><rect x="14.2390%" y="853" width="0.0934%" height="15" fill="rgb(249,199,10)" fg:x="305" fg:w="2"/><text x="14.4890%" y="863.50"></text></g><g><title>libcoretls.dylib`tls_record_encrypt (1 samples, 0.05%)</title><rect x="14.2857%" y="837" width="0.0467%" height="15" fill="rgb(249,222,13)" fg:x="306" fg:w="1"/><text x="14.5357%" y="847.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.05%)</title><rect x="14.2857%" y="821" width="0.0467%" height="15" fill="rgb(244,185,38)" fg:x="306" fg:w="1"/><text x="14.5357%" y="831.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_set_iv (1 samples, 0.05%)</title><rect x="14.2857%" y="805" width="0.0467%" height="15" fill="rgb(236,202,9)" fg:x="306" fg:w="1"/><text x="14.5357%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.05%)</title><rect x="14.2857%" y="789" width="0.0467%" height="15" fill="rgb(250,229,37)" fg:x="306" fg:w="1"/><text x="14.5357%" y="799.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (1 samples, 0.05%)</title><rect x="14.3324%" y="949" width="0.0467%" height="15" fill="rgb(206,174,23)" fg:x="307" fg:w="1"/><text x="14.5824%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::waker::wake_by_val (1 samples, 0.05%)</title><rect x="14.3791%" y="949" width="0.0467%" height="15" fill="rgb(211,33,43)" fg:x="308" fg:w="1"/><text x="14.6291%" y="959.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="14.4258%" y="933" width="0.0467%" height="15" fill="rgb(245,58,50)" fg:x="309" fg:w="1"/><text x="14.6758%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (167 samples, 7.80%)</title><rect x="6.7227%" y="981" width="7.7965%" height="15" fill="rgb(244,68,36)" fg:x="144" fg:w="167"/><text x="6.9727%" y="991.50">rust_stock_..</text></g><g><title>rust_stock_tracker`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (166 samples, 7.75%)</title><rect x="6.7694%" y="965" width="7.7498%" height="15" fill="rgb(232,229,15)" fg:x="145" fg:w="166"/><text x="7.0194%" y="975.50">rust_stock_..</text></g><g><title>rust_stock_tracker`tokio::sync::oneshot::Sender&lt;T&gt;::poll_closed (2 samples, 0.09%)</title><rect x="14.4258%" y="949" width="0.0934%" height="15" fill="rgb(254,30,23)" fg:x="309" fg:w="2"/><text x="14.6758%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::sync::oneshot::Task::set_task (1 samples, 0.05%)</title><rect x="14.4725%" y="933" width="0.0467%" height="15" fill="rgb(235,160,14)" fg:x="310" fg:w="1"/><text x="14.7225%" y="943.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::waker::clone_waker (1 samples, 0.05%)</title><rect x="14.4725%" y="917" width="0.0467%" height="15" fill="rgb(212,155,44)" fg:x="310" fg:w="1"/><text x="14.7225%" y="927.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::state::State::ref_inc (1 samples, 0.05%)</title><rect x="14.4725%" y="901" width="0.0467%" height="15" fill="rgb(226,2,50)" fg:x="310" fg:w="1"/><text x="14.7225%" y="911.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::body::body::Sender&gt;&gt; (1 samples, 0.05%)</title><rect x="14.5191%" y="965" width="0.0467%" height="15" fill="rgb(234,177,6)" fg:x="311" fg:w="1"/><text x="14.7691%" y="975.50"></text></g><g><title>Security`DYLD-STUB$$CFRelease (1 samples, 0.05%)</title><rect x="14.5658%" y="933" width="0.0467%" height="15" fill="rgb(217,24,9)" fg:x="312" fg:w="1"/><text x="14.8158%" y="943.50"></text></g><g><title>CoreFoundation`CFGetAllocator (1 samples, 0.05%)</title><rect x="14.7059%" y="773" width="0.0467%" height="15" fill="rgb(220,13,46)" fg:x="315" fg:w="1"/><text x="14.9559%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="14.7526%" y="709" width="0.0467%" height="15" fill="rgb(239,221,27)" fg:x="316" fg:w="1"/><text x="15.0026%" y="719.50"></text></g><g><title>CoreFoundation`__CFURLDeallocate (2 samples, 0.09%)</title><rect x="14.7526%" y="773" width="0.0934%" height="15" fill="rgb(222,198,25)" fg:x="316" fg:w="2"/><text x="15.0026%" y="783.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.09%)</title><rect x="14.7526%" y="757" width="0.0934%" height="15" fill="rgb(211,99,13)" fg:x="316" fg:w="2"/><text x="15.0026%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="14.7526%" y="741" width="0.0934%" height="15" fill="rgb(232,111,31)" fg:x="316" fg:w="2"/><text x="15.0026%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="14.7526%" y="725" width="0.0934%" height="15" fill="rgb(245,82,37)" fg:x="316" fg:w="2"/><text x="15.0026%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="14.7993%" y="709" width="0.0467%" height="15" fill="rgb(227,149,46)" fg:x="317" fg:w="1"/><text x="15.0493%" y="719.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (4 samples, 0.19%)</title><rect x="14.7059%" y="805" width="0.1867%" height="15" fill="rgb(218,36,50)" fg:x="315" fg:w="4"/><text x="14.9559%" y="815.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.19%)</title><rect x="14.7059%" y="789" width="0.1867%" height="15" fill="rgb(226,80,48)" fg:x="315" fg:w="4"/><text x="14.9559%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="14.8459%" y="773" width="0.0467%" height="15" fill="rgb(238,224,15)" fg:x="318" fg:w="1"/><text x="15.0959%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="14.8459%" y="757" width="0.0467%" height="15" fill="rgb(241,136,10)" fg:x="318" fg:w="1"/><text x="15.0959%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="14.8459%" y="741" width="0.0467%" height="15" fill="rgb(208,32,45)" fg:x="318" fg:w="1"/><text x="15.0959%" y="751.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (6 samples, 0.28%)</title><rect x="14.7059%" y="821" width="0.2801%" height="15" fill="rgb(207,135,9)" fg:x="315" fg:w="6"/><text x="14.9559%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="14.8926%" y="805" width="0.0934%" height="15" fill="rgb(206,86,44)" fg:x="319" fg:w="2"/><text x="15.1426%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="14.8926%" y="789" width="0.0934%" height="15" fill="rgb(245,177,15)" fg:x="319" fg:w="2"/><text x="15.1426%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.09%)</title><rect x="14.8926%" y="773" width="0.0934%" height="15" fill="rgb(206,64,50)" fg:x="319" fg:w="2"/><text x="15.1426%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.09%)</title><rect x="15.0794%" y="773" width="0.0934%" height="15" fill="rgb(234,36,40)" fg:x="323" fg:w="2"/><text x="15.3294%" y="783.50"></text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.23%)</title><rect x="14.9860%" y="821" width="0.2334%" height="15" fill="rgb(213,64,8)" fg:x="321" fg:w="5"/><text x="15.2360%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.23%)</title><rect x="14.9860%" y="805" width="0.2334%" height="15" fill="rgb(210,75,36)" fg:x="321" fg:w="5"/><text x="15.2360%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.19%)</title><rect x="15.0327%" y="789" width="0.1867%" height="15" fill="rgb(229,88,21)" fg:x="322" fg:w="4"/><text x="15.2827%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="15.1727%" y="773" width="0.0467%" height="15" fill="rgb(252,204,47)" fg:x="325" fg:w="1"/><text x="15.4227%" y="783.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (14 samples, 0.65%)</title><rect x="14.6125%" y="885" width="0.6536%" height="15" fill="rgb(208,77,27)" fg:x="313" fg:w="14"/><text x="14.8625%" y="895.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (14 samples, 0.65%)</title><rect x="14.6125%" y="869" width="0.6536%" height="15" fill="rgb(221,76,26)" fg:x="313" fg:w="14"/><text x="14.8625%" y="879.50"></text></g><g><title>CoreFoundation`_CFRelease (14 samples, 0.65%)</title><rect x="14.6125%" y="853" width="0.6536%" height="15" fill="rgb(225,139,18)" fg:x="313" fg:w="14"/><text x="14.8625%" y="863.50"></text></g><g><title>Security`SecCertificateDestroy (14 samples, 0.65%)</title><rect x="14.6125%" y="837" width="0.6536%" height="15" fill="rgb(230,137,11)" fg:x="313" fg:w="14"/><text x="14.8625%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.05%)</title><rect x="15.2194%" y="821" width="0.0467%" height="15" fill="rgb(212,28,1)" fg:x="326" fg:w="1"/><text x="15.4694%" y="831.50"></text></g><g><title>CoreFoundation`-[__NSCFConstantString release] (1 samples, 0.05%)</title><rect x="15.2661%" y="837" width="0.0467%" height="15" fill="rgb(248,164,17)" fg:x="327" fg:w="1"/><text x="15.5161%" y="847.50"></text></g><g><title>CoreFoundation`cow_cleanup (2 samples, 0.09%)</title><rect x="15.3128%" y="837" width="0.0934%" height="15" fill="rgb(222,171,42)" fg:x="328" fg:w="2"/><text x="15.5628%" y="847.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.05%)</title><rect x="15.3595%" y="821" width="0.0467%" height="15" fill="rgb(243,84,45)" fg:x="329" fg:w="1"/><text x="15.6095%" y="831.50"></text></g><g><title>CoreFoundation`CFAllocatorDeallocate (1 samples, 0.05%)</title><rect x="15.3595%" y="805" width="0.0467%" height="15" fill="rgb(252,49,23)" fg:x="329" fg:w="1"/><text x="15.6095%" y="815.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (4 samples, 0.19%)</title><rect x="15.2661%" y="853" width="0.1867%" height="15" fill="rgb(215,19,7)" fg:x="327" fg:w="4"/><text x="15.5161%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="15.4062%" y="837" width="0.0467%" height="15" fill="rgb(238,81,41)" fg:x="330" fg:w="1"/><text x="15.6562%" y="847.50"></text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.23%)</title><rect x="15.2661%" y="869" width="0.2334%" height="15" fill="rgb(210,199,37)" fg:x="327" fg:w="5"/><text x="15.5161%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="15.4528%" y="853" width="0.0467%" height="15" fill="rgb(244,192,49)" fg:x="331" fg:w="1"/><text x="15.7028%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="15.4528%" y="837" width="0.0467%" height="15" fill="rgb(226,211,11)" fg:x="331" fg:w="1"/><text x="15.7028%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="15.4528%" y="821" width="0.0467%" height="15" fill="rgb(236,162,54)" fg:x="331" fg:w="1"/><text x="15.7028%" y="831.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (6 samples, 0.28%)</title><rect x="15.2661%" y="885" width="0.2801%" height="15" fill="rgb(220,229,9)" fg:x="327" fg:w="6"/><text x="15.5161%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="15.4995%" y="869" width="0.0467%" height="15" fill="rgb(250,87,22)" fg:x="332" fg:w="1"/><text x="15.7495%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="15.4995%" y="853" width="0.0467%" height="15" fill="rgb(239,43,17)" fg:x="332" fg:w="1"/><text x="15.7495%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="15.4995%" y="837" width="0.0467%" height="15" fill="rgb(231,177,25)" fg:x="332" fg:w="1"/><text x="15.7495%" y="847.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (1 samples, 0.05%)</title><rect x="15.5462%" y="869" width="0.0467%" height="15" fill="rgb(219,179,1)" fg:x="333" fg:w="1"/><text x="15.7962%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="15.5929%" y="805" width="0.0467%" height="15" fill="rgb(238,219,53)" fg:x="334" fg:w="1"/><text x="15.8429%" y="815.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.14%)</title><rect x="15.5462%" y="885" width="0.1401%" height="15" fill="rgb(232,167,36)" fg:x="333" fg:w="3"/><text x="15.7962%" y="895.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (2 samples, 0.09%)</title><rect x="15.5929%" y="869" width="0.0934%" height="15" fill="rgb(244,19,51)" fg:x="334" fg:w="2"/><text x="15.8429%" y="879.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.09%)</title><rect x="15.5929%" y="853" width="0.0934%" height="15" fill="rgb(224,6,22)" fg:x="334" fg:w="2"/><text x="15.8429%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="15.5929%" y="837" width="0.0934%" height="15" fill="rgb(224,145,5)" fg:x="334" fg:w="2"/><text x="15.8429%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="15.5929%" y="821" width="0.0934%" height="15" fill="rgb(234,130,49)" fg:x="334" fg:w="2"/><text x="15.8429%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (1 samples, 0.05%)</title><rect x="15.6396%" y="805" width="0.0467%" height="15" fill="rgb(254,6,2)" fg:x="335" fg:w="1"/><text x="15.8896%" y="815.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.05%)</title><rect x="15.6863%" y="853" width="0.0467%" height="15" fill="rgb(208,96,46)" fg:x="336" fg:w="1"/><text x="15.9363%" y="863.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (1 samples, 0.05%)</title><rect x="15.6863%" y="837" width="0.0467%" height="15" fill="rgb(239,3,39)" fg:x="336" fg:w="1"/><text x="15.9363%" y="847.50"></text></g><g><title>CoreFoundation`_CFRelease (25 samples, 1.17%)</title><rect x="14.6125%" y="917" width="1.1671%" height="15" fill="rgb(233,210,1)" fg:x="313" fg:w="25"/><text x="14.8625%" y="927.50"></text></g><g><title>Security`SecTrustDestroy (25 samples, 1.17%)</title><rect x="14.6125%" y="901" width="1.1671%" height="15" fill="rgb(244,137,37)" fg:x="313" fg:w="25"/><text x="14.8625%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (2 samples, 0.09%)</title><rect x="15.6863%" y="885" width="0.0934%" height="15" fill="rgb(240,136,2)" fg:x="336" fg:w="2"/><text x="15.9363%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.09%)</title><rect x="15.6863%" y="869" width="0.0934%" height="15" fill="rgb(239,18,37)" fg:x="336" fg:w="2"/><text x="15.9363%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (1 samples, 0.05%)</title><rect x="15.7330%" y="853" width="0.0467%" height="15" fill="rgb(218,185,22)" fg:x="337" fg:w="1"/><text x="15.9830%" y="863.50"></text></g><g><title>libcorecrypto.dylib`ccsha1_di (2 samples, 0.09%)</title><rect x="15.8263%" y="885" width="0.0934%" height="15" fill="rgb(225,218,4)" fg:x="339" fg:w="2"/><text x="16.0763%" y="895.50"></text></g><g><title>libcoretls.dylib`CloseHash (3 samples, 0.14%)</title><rect x="15.8263%" y="901" width="0.1401%" height="15" fill="rgb(230,182,32)" fg:x="339" fg:w="3"/><text x="16.0763%" y="911.50"></text></g><g><title>libcorecrypto.dylib`ccsha384_di (1 samples, 0.05%)</title><rect x="15.9197%" y="885" width="0.0467%" height="15" fill="rgb(242,56,43)" fg:x="341" fg:w="1"/><text x="16.1697%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="15.9664%" y="885" width="0.0467%" height="15" fill="rgb(233,99,24)" fg:x="342" fg:w="1"/><text x="16.2164%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="15.9664%" y="869" width="0.0467%" height="15" fill="rgb(234,209,42)" fg:x="342" fg:w="1"/><text x="16.2164%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="15.9664%" y="853" width="0.0467%" height="15" fill="rgb(227,7,12)" fg:x="342" fg:w="1"/><text x="16.2164%" y="863.50"></text></g><g><title>libcoretls.dylib`SSLFreeBuffer (2 samples, 0.09%)</title><rect x="15.9664%" y="901" width="0.0934%" height="15" fill="rgb(245,203,43)" fg:x="342" fg:w="2"/><text x="16.2164%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="16.0131%" y="885" width="0.0467%" height="15" fill="rgb(238,205,33)" fg:x="343" fg:w="1"/><text x="16.2631%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="16.0131%" y="869" width="0.0467%" height="15" fill="rgb(231,56,7)" fg:x="343" fg:w="1"/><text x="16.2631%" y="879.50"></text></g><g><title>libcoretls.dylib`tls_free_buffer_list (1 samples, 0.05%)</title><rect x="16.0598%" y="901" width="0.0467%" height="15" fill="rgb(244,186,29)" fg:x="344" fg:w="1"/><text x="16.3098%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="16.0598%" y="885" width="0.0467%" height="15" fill="rgb(234,111,31)" fg:x="344" fg:w="1"/><text x="16.3098%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="16.0598%" y="869" width="0.0467%" height="15" fill="rgb(241,149,10)" fg:x="344" fg:w="1"/><text x="16.3098%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="16.0598%" y="853" width="0.0467%" height="15" fill="rgb(249,206,44)" fg:x="344" fg:w="1"/><text x="16.3098%" y="863.50"></text></g><g><title>libcorecrypto.dylib`ccrng_cryptographic_generate (1 samples, 0.05%)</title><rect x="16.1064%" y="869" width="0.0467%" height="15" fill="rgb(251,153,30)" fg:x="345" fg:w="1"/><text x="16.3564%" y="879.50"></text></g><g><title>libcoretls.dylib`tls_metric_destroyed (2 samples, 0.09%)</title><rect x="16.1064%" y="901" width="0.0934%" height="15" fill="rgb(239,152,38)" fg:x="345" fg:w="2"/><text x="16.3564%" y="911.50"></text></g><g><title>libsystem_c.dylib`arc4random_uniform (2 samples, 0.09%)</title><rect x="16.1064%" y="885" width="0.0934%" height="15" fill="rgb(249,139,47)" fg:x="345" fg:w="2"/><text x="16.3564%" y="895.50"></text></g><g><title>libcorecrypto.dylib`ccrng_uniform (1 samples, 0.05%)</title><rect x="16.1531%" y="869" width="0.0467%" height="15" fill="rgb(244,64,35)" fg:x="346" fg:w="1"/><text x="16.4031%" y="879.50"></text></g><g><title>libcorecrypto.dylib`ccrng_cryptographic_generate (1 samples, 0.05%)</title><rect x="16.1531%" y="853" width="0.0467%" height="15" fill="rgb(216,46,15)" fg:x="346" fg:w="1"/><text x="16.4031%" y="863.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.05%)</title><rect x="16.1531%" y="837" width="0.0467%" height="15" fill="rgb(250,74,19)" fg:x="346" fg:w="1"/><text x="16.4031%" y="847.50"></text></g><g><title>libcorecrypto.dylib`ccaes_vng_ctr_crypt (1 samples, 0.05%)</title><rect x="16.1531%" y="821" width="0.0467%" height="15" fill="rgb(249,42,33)" fg:x="346" fg:w="1"/><text x="16.4031%" y="831.50"></text></g><g><title>libcoretls.dylib`tls_handshake_destroy (10 samples, 0.47%)</title><rect x="15.7796%" y="917" width="0.4669%" height="15" fill="rgb(242,149,17)" fg:x="338" fg:w="10"/><text x="16.0296%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="16.1998%" y="901" width="0.0467%" height="15" fill="rgb(244,29,21)" fg:x="347" fg:w="1"/><text x="16.4498%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="16.1998%" y="885" width="0.0467%" height="15" fill="rgb(220,130,37)" fg:x="347" fg:w="1"/><text x="16.4498%" y="895.50"></text></g><g><title>CoreFoundation`_CFRelease (37 samples, 1.73%)</title><rect x="14.5658%" y="949" width="1.7274%" height="15" fill="rgb(211,67,2)" fg:x="312" fg:w="37"/><text x="14.8158%" y="959.50"></text></g><g><title>Security`SSLContextDestroy (36 samples, 1.68%)</title><rect x="14.6125%" y="933" width="1.6807%" height="15" fill="rgb(235,68,52)" fg:x="313" fg:w="36"/><text x="14.8625%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.05%)</title><rect x="16.2465%" y="917" width="0.0467%" height="15" fill="rgb(246,142,3)" fg:x="348" fg:w="1"/><text x="16.4965%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`close (13 samples, 0.61%)</title><rect x="16.2932%" y="917" width="0.6069%" height="15" fill="rgb(241,25,7)" fg:x="349" fg:w="13"/><text x="16.5432%" y="927.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (221 samples, 10.32%)</title><rect x="6.6760%" y="1029" width="10.3175%" height="15" fill="rgb(242,119,39)" fg:x="143" fg:w="221"/><text x="6.9260%" y="1039.50">rust_stock_trac..</text></g><g><title>rust_stock_tracker`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (221 samples, 10.32%)</title><rect x="6.6760%" y="1013" width="10.3175%" height="15" fill="rgb(241,98,45)" fg:x="143" fg:w="221"/><text x="6.9260%" y="1023.50">rust_stock_trac..</text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (220 samples, 10.27%)</title><rect x="6.7227%" y="997" width="10.2708%" height="15" fill="rgb(254,28,30)" fg:x="144" fg:w="220"/><text x="6.9727%" y="1007.50">rust_stock_trac..</text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (53 samples, 2.47%)</title><rect x="14.5191%" y="981" width="2.4743%" height="15" fill="rgb(241,142,54)" fg:x="311" fg:w="53"/><text x="14.7691%" y="991.50">ru..</text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (52 samples, 2.43%)</title><rect x="14.5658%" y="965" width="2.4276%" height="15" fill="rgb(222,85,15)" fg:x="312" fg:w="52"/><text x="14.8158%" y="975.50">ru..</text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;security_framework::secure_transport::Connection&lt;tokio_native_tls::AllowStd&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;&gt; (15 samples, 0.70%)</title><rect x="16.2932%" y="949" width="0.7003%" height="15" fill="rgb(210,85,47)" fg:x="349" fg:w="15"/><text x="16.5432%" y="959.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (15 samples, 0.70%)</title><rect x="16.2932%" y="933" width="0.7003%" height="15" fill="rgb(224,206,25)" fg:x="349" fg:w="15"/><text x="16.5432%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="16.9001%" y="917" width="0.0934%" height="15" fill="rgb(243,201,19)" fg:x="362" fg:w="2"/><text x="17.1501%" y="927.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::deregister (2 samples, 0.09%)</title><rect x="16.9001%" y="901" width="0.0934%" height="15" fill="rgb(236,59,4)" fg:x="362" fg:w="2"/><text x="17.1501%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (2 samples, 0.09%)</title><rect x="16.9001%" y="885" width="0.0934%" height="15" fill="rgb(254,179,45)" fg:x="362" fg:w="2"/><text x="17.1501%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.09%)</title><rect x="16.9001%" y="869" width="0.0934%" height="15" fill="rgb(226,14,10)" fg:x="362" fg:w="2"/><text x="17.1501%" y="879.50"></text></g><g><title>rust_stock_tracker`std::thread::local::LocalKey&lt;T&gt;::with (224 samples, 10.46%)</title><rect x="6.6293%" y="1061" width="10.4575%" height="15" fill="rgb(244,27,41)" fg:x="142" fg:w="224"/><text x="6.8793%" y="1071.50">rust_stock_trac..</text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (224 samples, 10.46%)</title><rect x="6.6293%" y="1045" width="10.4575%" height="15" fill="rgb(235,35,32)" fg:x="142" fg:w="224"/><text x="6.8793%" y="1055.50">rust_stock_trac..</text></g><g><title>rust_stock_tracker`tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.09%)</title><rect x="16.9935%" y="1029" width="0.0934%" height="15" fill="rgb(218,68,31)" fg:x="364" fg:w="2"/><text x="17.2435%" y="1039.50"></text></g><g><title>rust_stock_tracker`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (321 samples, 14.99%)</title><rect x="2.1475%" y="1077" width="14.9860%" height="15" fill="rgb(207,120,37)" fg:x="46" fg:w="321"/><text x="2.3975%" y="1087.50">rust_stock_tracker`toki..</text></g><g><title>rust_stock_tracker`tokio::coop::CURRENT::__getit (1 samples, 0.05%)</title><rect x="17.0868%" y="1061" width="0.0467%" height="15" fill="rgb(227,98,0)" fg:x="366" fg:w="1"/><text x="17.3368%" y="1071.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::Spawner::pop (1 samples, 0.05%)</title><rect x="17.1335%" y="1077" width="0.0467%" height="15" fill="rgb(207,7,3)" fg:x="367" fg:w="1"/><text x="17.3835%" y="1087.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::Runtime::block_on (324 samples, 15.13%)</title><rect x="2.1008%" y="1109" width="15.1261%" height="15" fill="rgb(206,98,19)" fg:x="45" fg:w="324"/><text x="2.3508%" y="1119.50">rust_stock_tracker`toki..</text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (324 samples, 15.13%)</title><rect x="2.1008%" y="1093" width="15.1261%" height="15" fill="rgb(217,5,26)" fg:x="45" fg:w="324"/><text x="2.3508%" y="1103.50">rust_stock_tracker`toki..</text></g><g><title>rust_stock_tracker`tokio::runtime::stats::stats::WorkerStatsBatcher::submit (1 samples, 0.05%)</title><rect x="17.1802%" y="1077" width="0.0467%" height="15" fill="rgb(235,190,38)" fg:x="368" fg:w="1"/><text x="17.4302%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.09%)</title><rect x="17.2736%" y="1077" width="0.0934%" height="15" fill="rgb(247,86,24)" fg:x="370" fg:w="2"/><text x="17.5236%" y="1087.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.19%)</title><rect x="17.2269%" y="1093" width="0.1867%" height="15" fill="rgb(205,101,16)" fg:x="369" fg:w="4"/><text x="17.4769%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.05%)</title><rect x="17.3669%" y="1077" width="0.0467%" height="15" fill="rgb(246,168,33)" fg:x="372" fg:w="1"/><text x="17.6169%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (1 samples, 0.05%)</title><rect x="17.3669%" y="1061" width="0.0467%" height="15" fill="rgb(231,114,1)" fg:x="372" fg:w="1"/><text x="17.6169%" y="1071.50"></text></g><g><title>rust_stock_tracker`parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.19%)</title><rect x="17.4136%" y="1093" width="0.1867%" height="15" fill="rgb(207,184,53)" fg:x="373" fg:w="4"/><text x="17.6636%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (4 samples, 0.19%)</title><rect x="17.4136%" y="1077" width="0.1867%" height="15" fill="rgb(224,95,51)" fg:x="373" fg:w="4"/><text x="17.6636%" y="1087.50"></text></g><g><title>rust_stock_tracker`parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.05%)</title><rect x="17.6004%" y="1093" width="0.0467%" height="15" fill="rgb(212,188,45)" fg:x="377" fg:w="1"/><text x="17.8504%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.05%)</title><rect x="17.6004%" y="1077" width="0.0467%" height="15" fill="rgb(223,154,38)" fg:x="377" fg:w="1"/><text x="17.8504%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.05%)</title><rect x="17.9272%" y="1045" width="0.0467%" height="15" fill="rgb(251,22,52)" fg:x="384" fg:w="1"/><text x="18.1772%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.05%)</title><rect x="17.9739%" y="1045" width="0.0467%" height="15" fill="rgb(229,209,22)" fg:x="385" fg:w="1"/><text x="18.2239%" y="1055.50"></text></g><g><title>rust_stock_tracker`std::thread::JoinHandle&lt;T&gt;::join (9 samples, 0.42%)</title><rect x="17.6471%" y="1093" width="0.4202%" height="15" fill="rgb(234,138,34)" fg:x="378" fg:w="9"/><text x="17.8971%" y="1103.50"></text></g><g><title>rust_stock_tracker`std::sys::unix::thread::Thread::join (9 samples, 0.42%)</title><rect x="17.6471%" y="1077" width="0.4202%" height="15" fill="rgb(212,95,11)" fg:x="378" fg:w="9"/><text x="17.8971%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (9 samples, 0.42%)</title><rect x="17.6471%" y="1061" width="0.4202%" height="15" fill="rgb(240,179,47)" fg:x="378" fg:w="9"/><text x="17.8971%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_deallocate (1 samples, 0.05%)</title><rect x="18.0205%" y="1045" width="0.0467%" height="15" fill="rgb(240,163,11)" fg:x="386" fg:w="1"/><text x="18.2705%" y="1055.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.05%)</title><rect x="18.0672%" y="997" width="0.0467%" height="15" fill="rgb(236,37,12)" fg:x="387" fg:w="1"/><text x="18.3172%" y="1007.50"></text></g><g><title>libsystem_c.dylib`_isort (1 samples, 0.05%)</title><rect x="18.0672%" y="981" width="0.0467%" height="15" fill="rgb(232,164,16)" fg:x="387" fg:w="1"/><text x="18.3172%" y="991.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.05%)</title><rect x="18.0672%" y="965" width="0.0467%" height="15" fill="rgb(244,205,15)" fg:x="387" fg:w="1"/><text x="18.3172%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.05%)</title><rect x="18.0672%" y="949" width="0.0467%" height="15" fill="rgb(223,117,47)" fg:x="387" fg:w="1"/><text x="18.3172%" y="959.50"></text></g><g><title>libsystem_dnssd.dylib`ConnectionResponse (4 samples, 0.19%)</title><rect x="18.1139%" y="933" width="0.1867%" height="15" fill="rgb(244,107,35)" fg:x="388" fg:w="4"/><text x="18.3639%" y="943.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_callback (7 samples, 0.33%)</title><rect x="18.3007%" y="917" width="0.3268%" height="15" fill="rgb(205,140,8)" fg:x="392" fg:w="7"/><text x="18.5507%" y="927.50"></text></g><g><title>libsystem_dnssd.dylib`handle_query_response (10 samples, 0.47%)</title><rect x="18.3007%" y="933" width="0.4669%" height="15" fill="rgb(228,84,46)" fg:x="392" fg:w="10"/><text x="18.5507%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.14%)</title><rect x="18.6275%" y="917" width="0.1401%" height="15" fill="rgb(254,188,9)" fg:x="399" fg:w="3"/><text x="18.8775%" y="927.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceProcessResult (20 samples, 0.93%)</title><rect x="18.1139%" y="949" width="0.9337%" height="15" fill="rgb(206,112,54)" fg:x="388" fg:w="20"/><text x="18.3639%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom_nocancel (6 samples, 0.28%)</title><rect x="18.7675%" y="933" width="0.2801%" height="15" fill="rgb(216,84,49)" fg:x="402" fg:w="6"/><text x="19.0175%" y="943.50"></text></g><g><title>libsystem_info.dylib`_mdns_debug_message (1 samples, 0.05%)</title><rect x="19.0476%" y="949" width="0.0467%" height="15" fill="rgb(214,194,35)" fg:x="408" fg:w="1"/><text x="19.2976%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__sendto_nocancel (2 samples, 0.09%)</title><rect x="19.1410%" y="917" width="0.0934%" height="15" fill="rgb(249,28,3)" fg:x="410" fg:w="2"/><text x="19.3910%" y="927.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_clear (4 samples, 0.19%)</title><rect x="19.0943%" y="949" width="0.1867%" height="15" fill="rgb(222,56,52)" fg:x="409" fg:w="4"/><text x="19.3443%" y="959.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceRefDeallocate (4 samples, 0.19%)</title><rect x="19.0943%" y="933" width="0.1867%" height="15" fill="rgb(245,217,50)" fg:x="409" fg:w="4"/><text x="19.3443%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="19.2344%" y="917" width="0.0467%" height="15" fill="rgb(213,201,24)" fg:x="412" fg:w="1"/><text x="19.4844%" y="927.50"></text></g><g><title>libsystem_dnssd.dylib`ConnectToServer (10 samples, 0.47%)</title><rect x="19.2810%" y="917" width="0.4669%" height="15" fill="rgb(248,116,28)" fg:x="413" fg:w="10"/><text x="19.5310%" y="927.50"></text></g><g><title>libsystem_dnssd.dylib`DYLD-STUB$$close$NOCANCEL (1 samples, 0.05%)</title><rect x="19.7479%" y="917" width="0.0467%" height="15" fill="rgb(219,72,43)" fg:x="423" fg:w="1"/><text x="19.9979%" y="927.50"></text></g><g><title>libsystem_dnssd.dylib`deliver_request (3 samples, 0.14%)</title><rect x="19.7946%" y="917" width="0.1401%" height="15" fill="rgb(209,138,14)" fg:x="424" fg:w="3"/><text x="20.0446%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__sendto_nocancel (3 samples, 0.14%)</title><rect x="19.7946%" y="901" width="0.1401%" height="15" fill="rgb(222,18,33)" fg:x="424" fg:w="3"/><text x="20.0446%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (4 samples, 0.19%)</title><rect x="19.9346%" y="917" width="0.1867%" height="15" fill="rgb(213,199,7)" fg:x="427" fg:w="4"/><text x="20.1846%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__select_nocancel (7 samples, 0.33%)</title><rect x="20.1214%" y="917" width="0.3268%" height="15" fill="rgb(250,110,10)" fg:x="431" fg:w="7"/><text x="20.3714%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__sendmsg_nocancel (3 samples, 0.14%)</title><rect x="20.4482%" y="917" width="0.1401%" height="15" fill="rgb(248,123,6)" fg:x="438" fg:w="3"/><text x="20.6982%" y="927.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (31 samples, 1.45%)</title><rect x="19.2810%" y="949" width="1.4472%" height="15" fill="rgb(206,91,31)" fg:x="413" fg:w="31"/><text x="19.5310%" y="959.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecord (31 samples, 1.45%)</title><rect x="19.2810%" y="933" width="1.4472%" height="15" fill="rgb(211,154,13)" fg:x="413" fg:w="31"/><text x="19.5310%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__socketpair (3 samples, 0.14%)</title><rect x="20.5882%" y="917" width="0.1401%" height="15" fill="rgb(225,148,7)" fg:x="441" fg:w="3"/><text x="20.8382%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__select_nocancel (1 samples, 0.05%)</title><rect x="20.7283%" y="949" width="0.0467%" height="15" fill="rgb(220,160,43)" fg:x="444" fg:w="1"/><text x="20.9783%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (8 samples, 0.37%)</title><rect x="20.7750%" y="949" width="0.3735%" height="15" fill="rgb(213,52,39)" fg:x="445" fg:w="8"/><text x="21.0250%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (8 samples, 0.37%)</title><rect x="20.7750%" y="933" width="0.3735%" height="15" fill="rgb(243,137,7)" fg:x="445" fg:w="8"/><text x="21.0250%" y="943.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (71 samples, 3.31%)</title><rect x="18.1139%" y="965" width="3.3147%" height="15" fill="rgb(230,79,13)" fg:x="388" fg:w="71"/><text x="18.3639%" y="975.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (6 samples, 0.28%)</title><rect x="21.1485%" y="949" width="0.2801%" height="15" fill="rgb(247,105,23)" fg:x="453" fg:w="6"/><text x="21.3985%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (6 samples, 0.28%)</title><rect x="21.1485%" y="933" width="0.2801%" height="15" fill="rgb(223,179,41)" fg:x="453" fg:w="6"/><text x="21.3985%" y="943.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo_list_from_hostent (1 samples, 0.05%)</title><rect x="21.4286%" y="965" width="0.0467%" height="15" fill="rgb(218,9,34)" fg:x="459" fg:w="1"/><text x="21.6786%" y="975.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo_list (1 samples, 0.05%)</title><rect x="21.4286%" y="949" width="0.0467%" height="15" fill="rgb(222,106,8)" fg:x="459" fg:w="1"/><text x="21.6786%" y="959.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo_v6 (1 samples, 0.05%)</title><rect x="21.4286%" y="933" width="0.0467%" height="15" fill="rgb(211,220,0)" fg:x="459" fg:w="1"/><text x="21.6786%" y="943.50"></text></g><g><title>libsystem_info.dylib`LI_ils_create (1 samples, 0.05%)</title><rect x="21.4286%" y="917" width="0.0467%" height="15" fill="rgb(229,52,16)" fg:x="459" fg:w="1"/><text x="21.6786%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (8 samples, 0.37%)</title><rect x="21.4753%" y="965" width="0.3735%" height="15" fill="rgb(212,155,18)" fg:x="460" fg:w="8"/><text x="21.7253%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`kevent (20 samples, 0.93%)</title><rect x="21.8487%" y="965" width="0.9337%" height="15" fill="rgb(242,21,14)" fg:x="468" fg:w="20"/><text x="22.0987%" y="975.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (102 samples, 4.76%)</title><rect x="18.0672%" y="1077" width="4.7619%" height="15" fill="rgb(222,19,48)" fg:x="387" fg:w="102"/><text x="18.3172%" y="1087.50">rust_s..</text></g><g><title>rust_stock_tracker`&lt;(&amp;str,u16) as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (102 samples, 4.76%)</title><rect x="18.0672%" y="1061" width="4.7619%" height="15" fill="rgb(232,45,27)" fg:x="387" fg:w="102"/><text x="18.3172%" y="1071.50">rust_s..</text></g><g><title>rust_stock_tracker`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (102 samples, 4.76%)</title><rect x="18.0672%" y="1045" width="4.7619%" height="15" fill="rgb(249,103,42)" fg:x="387" fg:w="102"/><text x="18.3172%" y="1055.50">rust_s..</text></g><g><title>libsystem_info.dylib`getaddrinfo (102 samples, 4.76%)</title><rect x="18.0672%" y="1029" width="4.7619%" height="15" fill="rgb(246,81,33)" fg:x="387" fg:w="102"/><text x="18.3172%" y="1039.50">libsys..</text></g><g><title>libsystem_info.dylib`si_addrinfo (102 samples, 4.76%)</title><rect x="18.0672%" y="1013" width="4.7619%" height="15" fill="rgb(252,33,42)" fg:x="387" fg:w="102"/><text x="18.3172%" y="1023.50">libsys..</text></g><g><title>libsystem_info.dylib`search_addrinfo (101 samples, 4.72%)</title><rect x="18.1139%" y="997" width="4.7152%" height="15" fill="rgb(209,212,41)" fg:x="388" fg:w="101"/><text x="18.3639%" y="1007.50">libsy..</text></g><g><title>libsystem_info.dylib`mdns_addrinfo (101 samples, 4.72%)</title><rect x="18.1139%" y="981" width="4.7152%" height="15" fill="rgb(207,154,6)" fg:x="388" fg:w="101"/><text x="18.3639%" y="991.50">libsy..</text></g><g><title>libsystem_kernel.dylib`kqueue (1 samples, 0.05%)</title><rect x="22.7824%" y="965" width="0.0467%" height="15" fill="rgb(223,64,47)" fg:x="488" fg:w="1"/><text x="23.0324%" y="975.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="23.0626%" y="1013" width="0.0467%" height="15" fill="rgb(211,161,38)" fg:x="494" fg:w="1"/><text x="23.3126%" y="1023.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="23.3894%" y="981" width="0.0467%" height="15" fill="rgb(219,138,40)" fg:x="501" fg:w="1"/><text x="23.6394%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (121 samples, 5.65%)</title><rect x="23.6228%" y="965" width="5.6489%" height="15" fill="rgb(241,228,46)" fg:x="506" fg:w="121"/><text x="23.8728%" y="975.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__psynch_cvwait (1 samples, 0.05%)</title><rect x="29.2717%" y="965" width="0.0467%" height="15" fill="rgb(223,209,38)" fg:x="627" fg:w="1"/><text x="29.5217%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.09%)</title><rect x="29.3184%" y="949" width="0.0934%" height="15" fill="rgb(236,164,45)" fg:x="628" fg:w="2"/><text x="29.5684%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.09%)</title><rect x="29.3184%" y="933" width="0.0934%" height="15" fill="rgb(231,15,5)" fg:x="628" fg:w="2"/><text x="29.5684%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.14%)</title><rect x="29.3184%" y="965" width="0.1401%" height="15" fill="rgb(252,35,15)" fg:x="628" fg:w="3"/><text x="29.5684%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.05%)</title><rect x="29.4118%" y="949" width="0.0467%" height="15" fill="rgb(248,181,18)" fg:x="630" fg:w="1"/><text x="29.6618%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.05%)</title><rect x="29.4585%" y="965" width="0.0467%" height="15" fill="rgb(233,39,42)" fg:x="631" fg:w="1"/><text x="29.7085%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.05%)</title><rect x="29.5051%" y="965" width="0.0467%" height="15" fill="rgb(238,110,33)" fg:x="632" fg:w="1"/><text x="29.7551%" y="975.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::Context::park_timeout (139 samples, 6.49%)</title><rect x="23.1092%" y="1013" width="6.4893%" height="15" fill="rgb(233,195,10)" fg:x="495" fg:w="139"/><text x="23.3592%" y="1023.50">rust_sto..</text></g><g><title>rust_stock_tracker`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (138 samples, 6.44%)</title><rect x="23.1559%" y="997" width="6.4426%" height="15" fill="rgb(254,105,3)" fg:x="496" fg:w="138"/><text x="23.4059%" y="1007.50">rust_sto..</text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::wait_until_internal (132 samples, 6.16%)</title><rect x="23.4360%" y="981" width="6.1625%" height="15" fill="rgb(221,225,9)" fg:x="502" fg:w="132"/><text x="23.6860%" y="991.50">rust_sto..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.05%)</title><rect x="29.5518%" y="965" width="0.0467%" height="15" fill="rgb(224,227,45)" fg:x="633" fg:w="1"/><text x="29.8018%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.05%)</title><rect x="29.6919%" y="997" width="0.0467%" height="15" fill="rgb(229,198,43)" fg:x="636" fg:w="1"/><text x="29.9419%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (21 samples, 0.98%)</title><rect x="29.7386%" y="981" width="0.9804%" height="15" fill="rgb(206,209,35)" fg:x="637" fg:w="21"/><text x="29.9886%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.05%)</title><rect x="30.7190%" y="981" width="0.0467%" height="15" fill="rgb(245,195,53)" fg:x="658" fg:w="1"/><text x="30.9690%" y="991.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::notify_one_slow (23 samples, 1.07%)</title><rect x="29.7386%" y="997" width="1.0738%" height="15" fill="rgb(240,92,26)" fg:x="637" fg:w="23"/><text x="29.9886%" y="1007.50"></text></g><g><title>rust_stock_tracker`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.05%)</title><rect x="30.7656%" y="981" width="0.0467%" height="15" fill="rgb(207,40,23)" fg:x="659" fg:w="1"/><text x="31.0156%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="30.9057%" y="965" width="0.0934%" height="15" fill="rgb(223,111,35)" fg:x="662" fg:w="2"/><text x="31.1557%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="30.9057%" y="949" width="0.0934%" height="15" fill="rgb(229,147,28)" fg:x="662" fg:w="2"/><text x="31.1557%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="30.9991%" y="965" width="0.0467%" height="15" fill="rgb(211,29,28)" fg:x="664" fg:w="1"/><text x="31.2491%" y="975.50"></text></g><g><title>rust_stock_tracker`&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (1 samples, 0.05%)</title><rect x="31.0458%" y="965" width="0.0467%" height="15" fill="rgb(228,72,33)" fg:x="665" fg:w="1"/><text x="31.2958%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.09%)</title><rect x="31.1391%" y="933" width="0.0934%" height="15" fill="rgb(205,214,31)" fg:x="667" fg:w="2"/><text x="31.3891%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="31.2325%" y="933" width="0.0467%" height="15" fill="rgb(224,111,15)" fg:x="669" fg:w="1"/><text x="31.4825%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.05%)</title><rect x="31.2325%" y="917" width="0.0467%" height="15" fill="rgb(253,21,26)" fg:x="669" fg:w="1"/><text x="31.4825%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (2 samples, 0.09%)</title><rect x="31.4659%" y="901" width="0.0934%" height="15" fill="rgb(245,139,43)" fg:x="674" fg:w="2"/><text x="31.7159%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (1 samples, 0.05%)</title><rect x="31.5126%" y="885" width="0.0467%" height="15" fill="rgb(252,170,7)" fg:x="675" fg:w="1"/><text x="31.7626%" y="895.50"></text></g><g><title>rust_stock_tracker`http::extensions::Extensions::insert (1 samples, 0.05%)</title><rect x="31.5126%" y="869" width="0.0467%" height="15" fill="rgb(231,118,14)" fg:x="675" fg:w="1"/><text x="31.7626%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.05%)</title><rect x="31.5126%" y="853" width="0.0467%" height="15" fill="rgb(238,83,0)" fg:x="675" fg:w="1"/><text x="31.7626%" y="863.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="31.5593%" y="869" width="0.0467%" height="15" fill="rgb(221,39,39)" fg:x="676" fg:w="1"/><text x="31.8093%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="31.5593%" y="853" width="0.0467%" height="15" fill="rgb(222,119,46)" fg:x="676" fg:w="1"/><text x="31.8093%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="31.5593%" y="837" width="0.0467%" height="15" fill="rgb(222,165,49)" fg:x="676" fg:w="1"/><text x="31.8093%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="31.5593%" y="821" width="0.0467%" height="15" fill="rgb(219,113,52)" fg:x="676" fg:w="1"/><text x="31.8093%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.19%)</title><rect x="31.4659%" y="917" width="0.1867%" height="15" fill="rgb(214,7,15)" fg:x="674" fg:w="4"/><text x="31.7159%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.09%)</title><rect x="31.5593%" y="901" width="0.0934%" height="15" fill="rgb(235,32,4)" fg:x="676" fg:w="2"/><text x="31.8093%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (2 samples, 0.09%)</title><rect x="31.5593%" y="885" width="0.0934%" height="15" fill="rgb(238,90,54)" fg:x="676" fg:w="2"/><text x="31.8093%" y="895.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="31.6060%" y="869" width="0.0467%" height="15" fill="rgb(213,208,19)" fg:x="677" fg:w="1"/><text x="31.8560%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="31.7460%" y="885" width="0.0467%" height="15" fill="rgb(233,156,4)" fg:x="680" fg:w="1"/><text x="31.9960%" y="895.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.09%)</title><rect x="31.7927%" y="885" width="0.0934%" height="15" fill="rgb(207,194,5)" fg:x="681" fg:w="2"/><text x="32.0427%" y="895.50"></text></g><g><title>rust_stock_tracker`tokio::task::spawn::spawn (1 samples, 0.05%)</title><rect x="31.8394%" y="869" width="0.0467%" height="15" fill="rgb(206,111,30)" fg:x="682" fg:w="1"/><text x="32.0894%" y="879.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::spawner::Spawner::spawn (1 samples, 0.05%)</title><rect x="31.8394%" y="853" width="0.0467%" height="15" fill="rgb(243,70,54)" fg:x="682" fg:w="1"/><text x="32.0894%" y="863.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="31.8394%" y="837" width="0.0467%" height="15" fill="rgb(242,28,8)" fg:x="682" fg:w="1"/><text x="32.0894%" y="847.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule::_{{closure}} (1 samples, 0.05%)</title><rect x="31.8394%" y="821" width="0.0467%" height="15" fill="rgb(219,106,18)" fg:x="682" fg:w="1"/><text x="32.0894%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.05%)</title><rect x="31.8394%" y="805" width="0.0467%" height="15" fill="rgb(244,222,10)" fg:x="682" fg:w="1"/><text x="32.0894%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.05%)</title><rect x="31.8394%" y="789" width="0.0467%" height="15" fill="rgb(236,179,52)" fg:x="682" fg:w="1"/><text x="32.0894%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (3 samples, 0.14%)</title><rect x="31.9328%" y="869" width="0.1401%" height="15" fill="rgb(213,23,39)" fg:x="684" fg:w="3"/><text x="32.1828%" y="879.50"></text></g><g><title>rust_stock_tracker`hyper::client::connect::http::_&lt;impl hyper::client::connect::Connection for tokio::net::tcp::stream::TcpStream&gt;::connected (3 samples, 0.14%)</title><rect x="31.9328%" y="853" width="0.1401%" height="15" fill="rgb(238,48,10)" fg:x="684" fg:w="3"/><text x="32.1828%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (3 samples, 0.14%)</title><rect x="31.9328%" y="837" width="0.1401%" height="15" fill="rgb(251,196,23)" fg:x="684" fg:w="3"/><text x="32.1828%" y="847.50"></text></g><g><title>Security`SSLGetConnection (2 samples, 0.09%)</title><rect x="32.1195%" y="789" width="0.0934%" height="15" fill="rgb(250,152,24)" fg:x="688" fg:w="2"/><text x="32.3695%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="32.2129%" y="789" width="0.0467%" height="15" fill="rgb(209,150,17)" fg:x="690" fg:w="1"/><text x="32.4629%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.05%)</title><rect x="32.2129%" y="773" width="0.0467%" height="15" fill="rgb(234,202,34)" fg:x="690" fg:w="1"/><text x="32.4629%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="32.2596%" y="789" width="0.0467%" height="15" fill="rgb(253,148,53)" fg:x="691" fg:w="1"/><text x="32.5096%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="32.3996%" y="773" width="0.0467%" height="15" fill="rgb(218,129,16)" fg:x="694" fg:w="1"/><text x="32.6496%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="32.3996%" y="757" width="0.0467%" height="15" fill="rgb(216,85,19)" fg:x="694" fg:w="1"/><text x="32.6496%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`close (11 samples, 0.51%)</title><rect x="32.4463%" y="757" width="0.5135%" height="15" fill="rgb(235,228,7)" fg:x="695" fg:w="11"/><text x="32.6963%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="32.9599%" y="757" width="0.0467%" height="15" fill="rgb(245,175,0)" fg:x="706" fg:w="1"/><text x="33.2099%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`getsockopt (1 samples, 0.05%)</title><rect x="33.0532%" y="725" width="0.0467%" height="15" fill="rgb(208,168,36)" fg:x="708" fg:w="1"/><text x="33.3032%" y="735.50"></text></g><g><title>rust_stock_tracker`mio::net::tcp::socket::TcpSocket::connect (10 samples, 0.47%)</title><rect x="33.0999%" y="725" width="0.4669%" height="15" fill="rgb(246,171,24)" fg:x="709" fg:w="10"/><text x="33.3499%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__connect (10 samples, 0.47%)</title><rect x="33.0999%" y="709" width="0.4669%" height="15" fill="rgb(215,142,24)" fg:x="709" fg:w="10"/><text x="33.3499%" y="719.50"></text></g><g><title>rust_stock_tracker`&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register (3 samples, 0.14%)</title><rect x="33.6134%" y="661" width="0.1401%" height="15" fill="rgb(250,187,7)" fg:x="720" fg:w="3"/><text x="33.8634%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.14%)</title><rect x="33.6134%" y="645" width="0.1401%" height="15" fill="rgb(228,66,33)" fg:x="720" fg:w="3"/><text x="33.8634%" y="655.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.75%)</title><rect x="33.0532%" y="741" width="0.7470%" height="15" fill="rgb(234,215,21)" fg:x="708" fg:w="16"/><text x="33.3032%" y="751.50"></text></g><g><title>rust_stock_tracker`tokio::net::tcp::stream::TcpStream::new (5 samples, 0.23%)</title><rect x="33.5668%" y="725" width="0.2334%" height="15" fill="rgb(222,191,20)" fg:x="719" fg:w="5"/><text x="33.8168%" y="735.50"></text></g><g><title>rust_stock_tracker`tokio::io::poll_evented::PollEvented&lt;E&gt;::new (5 samples, 0.23%)</title><rect x="33.5668%" y="709" width="0.2334%" height="15" fill="rgb(245,79,54)" fg:x="719" fg:w="5"/><text x="33.8168%" y="719.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::new_with_interest_and_handle (5 samples, 0.23%)</title><rect x="33.5668%" y="693" width="0.2334%" height="15" fill="rgb(240,10,37)" fg:x="719" fg:w="5"/><text x="33.8168%" y="703.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::Inner::add_source (4 samples, 0.19%)</title><rect x="33.6134%" y="677" width="0.1867%" height="15" fill="rgb(214,192,32)" fg:x="720" fg:w="4"/><text x="33.8634%" y="687.50"></text></g><g><title>rust_stock_tracker`tokio::util::slab::Allocator&lt;T&gt;::allocate (1 samples, 0.05%)</title><rect x="33.7535%" y="661" width="0.0467%" height="15" fill="rgb(209,36,54)" fg:x="723" fg:w="1"/><text x="34.0035%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`setsockopt (1 samples, 0.05%)</title><rect x="33.8002%" y="725" width="0.0467%" height="15" fill="rgb(220,10,11)" fg:x="724" fg:w="1"/><text x="34.0502%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`socket (15 samples, 0.70%)</title><rect x="33.8469%" y="725" width="0.7003%" height="15" fill="rgb(221,106,17)" fg:x="725" fg:w="15"/><text x="34.0969%" y="735.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 1.59%)</title><rect x="33.0065%" y="757" width="1.5873%" height="15" fill="rgb(251,142,44)" fg:x="707" fg:w="34"/><text x="33.2565%" y="767.50"></text></g><g><title>rust_stock_tracker`hyper::client::connect::http::connect (17 samples, 0.79%)</title><rect x="33.8002%" y="741" width="0.7937%" height="15" fill="rgb(238,13,15)" fg:x="724" fg:w="17"/><text x="34.0502%" y="751.50"></text></g><g><title>rust_stock_tracker`socket2::sys::set_nonblocking (1 samples, 0.05%)</title><rect x="34.5472%" y="725" width="0.0467%" height="15" fill="rgb(208,107,27)" fg:x="740" fg:w="1"/><text x="34.7972%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.05%)</title><rect x="34.5472%" y="709" width="0.0467%" height="15" fill="rgb(205,136,37)" fg:x="740" fg:w="1"/><text x="34.7972%" y="719.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;hyper::client::connect::http::connect::{{closure}}&gt;&gt; (1 samples, 0.05%)</title><rect x="34.5938%" y="757" width="0.0467%" height="15" fill="rgb(250,205,27)" fg:x="741" fg:w="1"/><text x="34.8438%" y="767.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::io::driver::registration::Registration as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="34.6405%" y="741" width="0.0467%" height="15" fill="rgb(210,80,43)" fg:x="742" fg:w="1"/><text x="34.8905%" y="751.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 2.29%)</title><rect x="32.4463%" y="773" width="2.2876%" height="15" fill="rgb(247,160,36)" fg:x="695" fg:w="49"/><text x="32.6963%" y="783.50">r..</text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (2 samples, 0.09%)</title><rect x="34.6405%" y="757" width="0.0934%" height="15" fill="rgb(234,13,49)" fg:x="742" fg:w="2"/><text x="34.8905%" y="767.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::deregister (1 samples, 0.05%)</title><rect x="34.6872%" y="741" width="0.0467%" height="15" fill="rgb(234,122,0)" fg:x="743" fg:w="1"/><text x="34.9372%" y="751.50"></text></g><g><title>rust_stock_tracker`&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (1 samples, 0.05%)</title><rect x="34.6872%" y="725" width="0.0467%" height="15" fill="rgb(207,146,38)" fg:x="743" fg:w="1"/><text x="34.9372%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.05%)</title><rect x="34.6872%" y="709" width="0.0467%" height="15" fill="rgb(207,177,25)" fg:x="743" fg:w="1"/><text x="34.9372%" y="719.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 2.47%)</title><rect x="32.3063%" y="789" width="2.4743%" height="15" fill="rgb(211,178,42)" fg:x="692" fg:w="53"/><text x="32.5563%" y="799.50">ru..</text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.05%)</title><rect x="34.7339%" y="773" width="0.0467%" height="15" fill="rgb(230,69,54)" fg:x="744" fg:w="1"/><text x="34.9839%" y="783.50"></text></g><g><title>Security`SecTrustSetPolicies (2 samples, 0.09%)</title><rect x="34.9206%" y="741" width="0.0934%" height="15" fill="rgb(214,135,41)" fg:x="748" fg:w="2"/><text x="35.1706%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.09%)</title><rect x="34.9206%" y="725" width="0.0934%" height="15" fill="rgb(237,67,25)" fg:x="748" fg:w="2"/><text x="35.1706%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.09%)</title><rect x="34.9206%" y="709" width="0.0934%" height="15" fill="rgb(222,189,50)" fg:x="748" fg:w="2"/><text x="35.1706%" y="719.50"></text></g><g><title>Security`__SecTrustSetPolicies_block_invoke (2 samples, 0.09%)</title><rect x="34.9206%" y="693" width="0.0934%" height="15" fill="rgb(245,148,34)" fg:x="748" fg:w="2"/><text x="35.1706%" y="703.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (2 samples, 0.09%)</title><rect x="34.9206%" y="677" width="0.0934%" height="15" fill="rgb(222,29,6)" fg:x="748" fg:w="2"/><text x="35.1706%" y="687.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.09%)</title><rect x="34.9206%" y="661" width="0.0934%" height="15" fill="rgb(221,189,43)" fg:x="748" fg:w="2"/><text x="35.1706%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (2 samples, 0.09%)</title><rect x="34.9206%" y="645" width="0.0934%" height="15" fill="rgb(207,36,27)" fg:x="748" fg:w="2"/><text x="35.1706%" y="655.50"></text></g><g><title>CoreFoundation`cow_cleanup (2 samples, 0.09%)</title><rect x="34.9206%" y="629" width="0.0934%" height="15" fill="rgb(217,90,24)" fg:x="748" fg:w="2"/><text x="35.1706%" y="639.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (2 samples, 0.09%)</title><rect x="34.9206%" y="613" width="0.0934%" height="15" fill="rgb(224,66,35)" fg:x="748" fg:w="2"/><text x="35.1706%" y="623.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (2 samples, 0.09%)</title><rect x="34.9206%" y="597" width="0.0934%" height="15" fill="rgb(221,13,50)" fg:x="748" fg:w="2"/><text x="35.1706%" y="607.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.05%)</title><rect x="34.9673%" y="581" width="0.0467%" height="15" fill="rgb(236,68,49)" fg:x="749" fg:w="1"/><text x="35.2173%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_free (1 samples, 0.05%)</title><rect x="34.9673%" y="565" width="0.0467%" height="15" fill="rgb(229,146,28)" fg:x="749" fg:w="1"/><text x="35.2173%" y="575.50"></text></g><g><title>CoreFoundation`-[NSMutableDictionary __addObject:forKey:] (1 samples, 0.05%)</title><rect x="35.0140%" y="709" width="0.0467%" height="15" fill="rgb(225,31,38)" fg:x="750" fg:w="1"/><text x="35.2640%" y="719.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (1 samples, 0.05%)</title><rect x="35.0140%" y="693" width="0.0467%" height="15" fill="rgb(250,208,3)" fg:x="750" fg:w="1"/><text x="35.2640%" y="703.50"></text></g><g><title>CoreFoundation`CFRelease (1 samples, 0.05%)</title><rect x="35.0607%" y="709" width="0.0467%" height="15" fill="rgb(246,54,23)" fg:x="751" fg:w="1"/><text x="35.3107%" y="719.50"></text></g><g><title>Security`SecPolicyAddBasicX509Options (1 samples, 0.05%)</title><rect x="35.1074%" y="709" width="0.0467%" height="15" fill="rgb(243,76,11)" fg:x="752" fg:w="1"/><text x="35.3574%" y="719.50"></text></g><g><title>Security`SecPolicyAddBasicCertOptions (1 samples, 0.05%)</title><rect x="35.1074%" y="693" width="0.0467%" height="15" fill="rgb(245,21,50)" fg:x="752" fg:w="1"/><text x="35.3574%" y="703.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.05%)</title><rect x="35.1074%" y="677" width="0.0467%" height="15" fill="rgb(228,9,43)" fg:x="752" fg:w="1"/><text x="35.3574%" y="687.50"></text></g><g><title>CoreFoundation`mdict_rehashd (1 samples, 0.05%)</title><rect x="35.1074%" y="661" width="0.0467%" height="15" fill="rgb(208,100,47)" fg:x="752" fg:w="1"/><text x="35.3574%" y="671.50"></text></g><g><title>Security`SecPolicyCreate (1 samples, 0.05%)</title><rect x="35.1541%" y="709" width="0.0467%" height="15" fill="rgb(232,26,8)" fg:x="753" fg:w="1"/><text x="35.4041%" y="719.50"></text></g><g><title>rust_stock_tracker`security_framework::policy::SecPolicy::create_ssl (5 samples, 0.23%)</title><rect x="35.0140%" y="741" width="0.2334%" height="15" fill="rgb(216,166,38)" fg:x="750" fg:w="5"/><text x="35.2640%" y="751.50"></text></g><g><title>Security`SecPolicyCreateSSLWithKeyUsage (5 samples, 0.23%)</title><rect x="35.0140%" y="725" width="0.2334%" height="15" fill="rgb(251,202,51)" fg:x="750" fg:w="5"/><text x="35.2640%" y="735.50"></text></g><g><title>Security`set_ssl_ekus (1 samples, 0.05%)</title><rect x="35.2007%" y="709" width="0.0467%" height="15" fill="rgb(254,216,34)" fg:x="754" fg:w="1"/><text x="35.4507%" y="719.50"></text></g><g><title>Security`add_eku (1 samples, 0.05%)</title><rect x="35.2007%" y="693" width="0.0467%" height="15" fill="rgb(251,32,27)" fg:x="754" fg:w="1"/><text x="35.4507%" y="703.50"></text></g><g><title>Security`add_element (1 samples, 0.05%)</title><rect x="35.2007%" y="677" width="0.0467%" height="15" fill="rgb(208,127,28)" fg:x="754" fg:w="1"/><text x="35.4507%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.05%)</title><rect x="35.2007%" y="661" width="0.0467%" height="15" fill="rgb(224,137,22)" fg:x="754" fg:w="1"/><text x="35.4507%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.05%)</title><rect x="35.3408%" y="661" width="0.0467%" height="15" fill="rgb(254,70,32)" fg:x="757" fg:w="1"/><text x="35.5908%" y="671.50"></text></g><g><title>Security`SSLRecordFreeInternal (2 samples, 0.09%)</title><rect x="35.3408%" y="693" width="0.0934%" height="15" fill="rgb(229,75,37)" fg:x="757" fg:w="2"/><text x="35.5908%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="35.3408%" y="677" width="0.0934%" height="15" fill="rgb(252,64,23)" fg:x="757" fg:w="2"/><text x="35.5908%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="35.3875%" y="661" width="0.0467%" height="15" fill="rgb(232,162,48)" fg:x="758" fg:w="1"/><text x="35.6375%" y="671.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="35.5275%" y="677" width="0.0467%" height="15" fill="rgb(246,160,12)" fg:x="761" fg:w="1"/><text x="35.7775%" y="687.50"></text></g><g><title>Security`SSLRecordReadInternal (34 samples, 1.59%)</title><rect x="35.4342%" y="693" width="1.5873%" height="15" fill="rgb(247,166,0)" fg:x="759" fg:w="34"/><text x="35.6842%" y="703.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::read_func (31 samples, 1.45%)</title><rect x="35.5742%" y="677" width="1.4472%" height="15" fill="rgb(249,219,21)" fg:x="762" fg:w="31"/><text x="35.8242%" y="687.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (31 samples, 1.45%)</title><rect x="35.5742%" y="661" width="1.4472%" height="15" fill="rgb(205,209,3)" fg:x="762" fg:w="31"/><text x="35.8242%" y="671.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (31 samples, 1.45%)</title><rect x="35.5742%" y="645" width="1.4472%" height="15" fill="rgb(243,44,1)" fg:x="762" fg:w="31"/><text x="35.8242%" y="655.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_read_io (31 samples, 1.45%)</title><rect x="35.5742%" y="629" width="1.4472%" height="15" fill="rgb(206,159,16)" fg:x="762" fg:w="31"/><text x="35.8242%" y="639.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (31 samples, 1.45%)</title><rect x="35.5742%" y="613" width="1.4472%" height="15" fill="rgb(244,77,30)" fg:x="762" fg:w="31"/><text x="35.8242%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (30 samples, 1.40%)</title><rect x="35.6209%" y="597" width="1.4006%" height="15" fill="rgb(218,69,12)" fg:x="763" fg:w="30"/><text x="35.8709%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="37.0215%" y="677" width="0.0467%" height="15" fill="rgb(212,87,7)" fg:x="793" fg:w="1"/><text x="37.2715%" y="687.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (12 samples, 0.56%)</title><rect x="37.0215%" y="693" width="0.5602%" height="15" fill="rgb(245,114,25)" fg:x="793" fg:w="12"/><text x="37.2715%" y="703.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::write_func (11 samples, 0.51%)</title><rect x="37.0682%" y="677" width="0.5135%" height="15" fill="rgb(210,61,42)" fg:x="794" fg:w="11"/><text x="37.3182%" y="687.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (11 samples, 0.51%)</title><rect x="37.0682%" y="661" width="0.5135%" height="15" fill="rgb(211,52,33)" fg:x="794" fg:w="11"/><text x="37.3182%" y="671.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_write_io (11 samples, 0.51%)</title><rect x="37.0682%" y="645" width="0.5135%" height="15" fill="rgb(234,58,33)" fg:x="794" fg:w="11"/><text x="37.3182%" y="655.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (11 samples, 0.51%)</title><rect x="37.0682%" y="629" width="0.5135%" height="15" fill="rgb(220,115,36)" fg:x="794" fg:w="11"/><text x="37.3182%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (11 samples, 0.51%)</title><rect x="37.0682%" y="613" width="0.5135%" height="15" fill="rgb(243,153,54)" fg:x="794" fg:w="11"/><text x="37.3182%" y="623.50"></text></g><g><title>libcoretls.dylib`tls1GenerateKeyMaterial (1 samples, 0.05%)</title><rect x="37.5817%" y="645" width="0.0467%" height="15" fill="rgb(251,47,18)" fg:x="805" fg:w="1"/><text x="37.8317%" y="655.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.05%)</title><rect x="37.5817%" y="629" width="0.0467%" height="15" fill="rgb(242,102,42)" fg:x="805" fg:w="1"/><text x="37.8317%" y="639.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.05%)</title><rect x="37.5817%" y="613" width="0.0467%" height="15" fill="rgb(234,31,38)" fg:x="805" fg:w="1"/><text x="37.8317%" y="623.50"></text></g><g><title>libcoretls.dylib`HMAC_Hmac (1 samples, 0.05%)</title><rect x="37.5817%" y="597" width="0.0467%" height="15" fill="rgb(221,117,51)" fg:x="805" fg:w="1"/><text x="37.8317%" y="607.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.05%)</title><rect x="37.5817%" y="581" width="0.0467%" height="15" fill="rgb(212,20,18)" fg:x="805" fg:w="1"/><text x="37.8317%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccsha256_di (1 samples, 0.05%)</title><rect x="37.5817%" y="565" width="0.0467%" height="15" fill="rgb(245,133,36)" fg:x="805" fg:w="1"/><text x="37.8317%" y="575.50"></text></g><g><title>libcoretls.dylib`CCGCMSymmInit (3 samples, 0.14%)</title><rect x="37.6284%" y="629" width="0.1401%" height="15" fill="rgb(212,6,19)" fg:x="806" fg:w="3"/><text x="37.8784%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.14%)</title><rect x="37.6284%" y="613" width="0.1401%" height="15" fill="rgb(218,1,36)" fg:x="806" fg:w="3"/><text x="37.8784%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.14%)</title><rect x="37.6284%" y="597" width="0.1401%" height="15" fill="rgb(246,84,54)" fg:x="806" fg:w="3"/><text x="37.8784%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.14%)</title><rect x="37.6284%" y="581" width="0.1401%" height="15" fill="rgb(242,110,6)" fg:x="806" fg:w="3"/><text x="37.8784%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.14%)</title><rect x="37.6284%" y="565" width="0.1401%" height="15" fill="rgb(214,47,5)" fg:x="806" fg:w="3"/><text x="37.8784%" y="575.50"></text></g><g><title>libcoretls.dylib`SSLInitPendingCiphers (5 samples, 0.23%)</title><rect x="37.5817%" y="661" width="0.2334%" height="15" fill="rgb(218,159,25)" fg:x="805" fg:w="5"/><text x="37.8317%" y="671.50"></text></g><g><title>libcoretls.dylib`tls_record_init_pending_ciphers (4 samples, 0.19%)</title><rect x="37.6284%" y="645" width="0.1867%" height="15" fill="rgb(215,211,28)" fg:x="806" fg:w="4"/><text x="37.8784%" y="655.50"></text></g><g><title>libcoretls.dylib`sslCipherSuiteGetDigestInfo (1 samples, 0.05%)</title><rect x="37.7684%" y="629" width="0.0467%" height="15" fill="rgb(238,59,32)" fg:x="809" fg:w="1"/><text x="38.0184%" y="639.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (1 samples, 0.05%)</title><rect x="37.8151%" y="613" width="0.0467%" height="15" fill="rgb(226,82,3)" fg:x="810" fg:w="1"/><text x="38.0651%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (1 samples, 0.05%)</title><rect x="37.8151%" y="597" width="0.0467%" height="15" fill="rgb(240,164,32)" fg:x="810" fg:w="1"/><text x="38.0651%" y="607.50"></text></g><g><title>libcoretls.dylib`SSLEncodeFinishedMessage (2 samples, 0.09%)</title><rect x="37.8151%" y="645" width="0.0934%" height="15" fill="rgb(232,46,7)" fg:x="810" fg:w="2"/><text x="38.0651%" y="655.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (2 samples, 0.09%)</title><rect x="37.8151%" y="629" width="0.0934%" height="15" fill="rgb(229,129,53)" fg:x="810" fg:w="2"/><text x="38.0651%" y="639.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.05%)</title><rect x="37.8618%" y="613" width="0.0467%" height="15" fill="rgb(234,188,29)" fg:x="811" fg:w="1"/><text x="38.1118%" y="623.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.05%)</title><rect x="37.8618%" y="597" width="0.0467%" height="15" fill="rgb(246,141,4)" fg:x="811" fg:w="1"/><text x="38.1118%" y="607.50"></text></g><g><title>libcoretls.dylib`HMAC_Alloc (1 samples, 0.05%)</title><rect x="37.8618%" y="581" width="0.0467%" height="15" fill="rgb(229,23,39)" fg:x="811" fg:w="1"/><text x="38.1118%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccec_cp_256 (1 samples, 0.05%)</title><rect x="37.9085%" y="629" width="0.0467%" height="15" fill="rgb(206,12,3)" fg:x="812" fg:w="1"/><text x="38.1585%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.05%)</title><rect x="37.9552%" y="597" width="0.0467%" height="15" fill="rgb(252,226,20)" fg:x="813" fg:w="1"/><text x="38.2052%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only (2 samples, 0.09%)</title><rect x="37.9552%" y="613" width="0.0934%" height="15" fill="rgb(216,123,35)" fg:x="813" fg:w="2"/><text x="38.2052%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.05%)</title><rect x="38.0019%" y="597" width="0.0467%" height="15" fill="rgb(212,68,40)" fg:x="814" fg:w="1"/><text x="38.2519%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (3 samples, 0.14%)</title><rect x="38.1419%" y="565" width="0.1401%" height="15" fill="rgb(254,125,32)" fg:x="817" fg:w="3"/><text x="38.3919%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (18 samples, 0.84%)</title><rect x="38.2820%" y="565" width="0.8403%" height="15" fill="rgb(253,97,22)" fg:x="820" fg:w="18"/><text x="38.5320%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (11 samples, 0.51%)</title><rect x="39.1223%" y="565" width="0.5135%" height="15" fill="rgb(241,101,14)" fg:x="838" fg:w="11"/><text x="39.3723%" y="575.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (3 samples, 0.14%)</title><rect x="39.6359%" y="565" width="0.1401%" height="15" fill="rgb(238,103,29)" fg:x="849" fg:w="3"/><text x="39.8859%" y="575.50"></text></g><g><title>libcorecrypto.dylib`XYCZaddC_ws (45 samples, 2.10%)</title><rect x="38.0486%" y="581" width="2.1008%" height="15" fill="rgb(233,195,47)" fg:x="815" fg:w="45"/><text x="38.2986%" y="591.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (8 samples, 0.37%)</title><rect x="39.7759%" y="565" width="0.3735%" height="15" fill="rgb(246,218,30)" fg:x="852" fg:w="8"/><text x="40.0259%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (6 samples, 0.28%)</title><rect x="40.2428%" y="565" width="0.2801%" height="15" fill="rgb(219,145,47)" fg:x="862" fg:w="6"/><text x="40.4928%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (14 samples, 0.65%)</title><rect x="40.5229%" y="565" width="0.6536%" height="15" fill="rgb(243,12,26)" fg:x="868" fg:w="14"/><text x="40.7729%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (6 samples, 0.28%)</title><rect x="41.1765%" y="565" width="0.2801%" height="15" fill="rgb(214,87,16)" fg:x="882" fg:w="6"/><text x="41.4265%" y="575.50"></text></g><g><title>libcorecrypto.dylib`XYCZadd_ws (31 samples, 1.45%)</title><rect x="40.1494%" y="581" width="1.4472%" height="15" fill="rgb(208,99,42)" fg:x="860" fg:w="31"/><text x="40.3994%" y="591.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (3 samples, 0.14%)</title><rect x="41.4566%" y="565" width="0.1401%" height="15" fill="rgb(253,99,2)" fg:x="888" fg:w="3"/><text x="41.7066%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (54 samples, 2.52%)</title><rect x="41.5966%" y="581" width="2.5210%" height="15" fill="rgb(220,168,23)" fg:x="891" fg:w="54"/><text x="41.8466%" y="591.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.05%)</title><rect x="44.1176%" y="581" width="0.0467%" height="15" fill="rgb(242,38,24)" fg:x="945" fg:w="1"/><text x="44.3676%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (24 samples, 1.12%)</title><rect x="44.1643%" y="581" width="1.1204%" height="15" fill="rgb(225,182,9)" fg:x="946" fg:w="24"/><text x="44.4143%" y="591.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (1 samples, 0.05%)</title><rect x="45.2848%" y="581" width="0.0467%" height="15" fill="rgb(243,178,37)" fg:x="970" fg:w="1"/><text x="45.5348%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (157 samples, 7.33%)</title><rect x="38.0486%" y="597" width="7.3296%" height="15" fill="rgb(232,139,19)" fg:x="815" fg:w="157"/><text x="38.2986%" y="607.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.05%)</title><rect x="45.3315%" y="581" width="0.0467%" height="15" fill="rgb(225,201,24)" fg:x="971" fg:w="1"/><text x="45.5815%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (5 samples, 0.23%)</title><rect x="45.3782%" y="597" width="0.2334%" height="15" fill="rgb(221,47,46)" fg:x="972" fg:w="5"/><text x="45.6282%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_div_euclid_ws (3 samples, 0.14%)</title><rect x="45.6116%" y="597" width="0.1401%" height="15" fill="rgb(249,23,13)" fg:x="977" fg:w="3"/><text x="45.8616%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_div_use_recip_ws (3 samples, 0.14%)</title><rect x="45.6116%" y="581" width="0.1401%" height="15" fill="rgb(219,9,5)" fg:x="977" fg:w="3"/><text x="45.8616%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul (3 samples, 0.14%)</title><rect x="45.6116%" y="565" width="0.1401%" height="15" fill="rgb(254,171,16)" fg:x="977" fg:w="3"/><text x="45.8616%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.05%)</title><rect x="45.7516%" y="597" width="0.0467%" height="15" fill="rgb(230,171,20)" fg:x="980" fg:w="1"/><text x="46.0016%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.05%)</title><rect x="45.7983%" y="597" width="0.0467%" height="15" fill="rgb(210,71,41)" fg:x="981" fg:w="1"/><text x="46.0483%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded (168 samples, 7.84%)</title><rect x="38.0486%" y="613" width="7.8431%" height="15" fill="rgb(206,173,20)" fg:x="815" fg:w="168"/><text x="38.2986%" y="623.50">libcorecryp..</text></g><g><title>libcorecrypto.dylib`ccn_sub (1 samples, 0.05%)</title><rect x="45.8450%" y="597" width="0.0467%" height="15" fill="rgb(233,88,34)" fg:x="982" fg:w="1"/><text x="46.0950%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret (171 samples, 7.98%)</title><rect x="37.9552%" y="629" width="7.9832%" height="15" fill="rgb(223,209,46)" fg:x="813" fg:w="171"/><text x="38.2052%" y="639.50">libcorecryp..</text></g><g><title>libcorecrypto.dylib`ccec_validate_pub_and_projectify (1 samples, 0.05%)</title><rect x="45.8917%" y="613" width="0.0467%" height="15" fill="rgb(250,43,18)" fg:x="983" fg:w="1"/><text x="46.1417%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_projectify (1 samples, 0.05%)</title><rect x="45.8917%" y="597" width="0.0467%" height="15" fill="rgb(208,13,10)" fg:x="983" fg:w="1"/><text x="46.1417%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits (1 samples, 0.05%)</title><rect x="45.8917%" y="581" width="0.0467%" height="15" fill="rgb(212,200,36)" fg:x="983" fg:w="1"/><text x="46.1417%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccrng_cryptographic_generate (1 samples, 0.05%)</title><rect x="45.8917%" y="565" width="0.0467%" height="15" fill="rgb(225,90,30)" fg:x="983" fg:w="1"/><text x="46.1417%" y="575.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.05%)</title><rect x="45.8917%" y="549" width="0.0467%" height="15" fill="rgb(236,182,39)" fg:x="983" fg:w="1"/><text x="46.1417%" y="559.50"></text></g><g><title>libcorecrypto.dylib`drbg_update (1 samples, 0.05%)</title><rect x="45.8917%" y="533" width="0.0467%" height="15" fill="rgb(212,144,35)" fg:x="983" fg:w="1"/><text x="46.1417%" y="543.50"></text></g><g><title>libcorecrypto.dylib`aes_key_expansion (1 samples, 0.05%)</title><rect x="45.8917%" y="517" width="0.0467%" height="15" fill="rgb(228,63,44)" fg:x="983" fg:w="1"/><text x="46.1417%" y="527.50"></text></g><g><title>libcoretls.dylib`SSLFreeBuffer (1 samples, 0.05%)</title><rect x="45.9384%" y="629" width="0.0467%" height="15" fill="rgb(228,109,6)" fg:x="984" fg:w="1"/><text x="46.1884%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="45.9384%" y="613" width="0.0467%" height="15" fill="rgb(238,117,24)" fg:x="984" fg:w="1"/><text x="46.1884%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="45.9384%" y="597" width="0.0467%" height="15" fill="rgb(242,26,26)" fg:x="984" fg:w="1"/><text x="46.1884%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="45.9384%" y="581" width="0.0467%" height="15" fill="rgb(221,92,48)" fg:x="984" fg:w="1"/><text x="46.1884%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.05%)</title><rect x="45.9851%" y="549" width="0.0467%" height="15" fill="rgb(209,209,32)" fg:x="985" fg:w="1"/><text x="46.2351%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify (4 samples, 0.19%)</title><rect x="45.9851%" y="565" width="0.1867%" height="15" fill="rgb(221,70,22)" fg:x="985" fg:w="4"/><text x="46.2351%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.14%)</title><rect x="46.0317%" y="549" width="0.1401%" height="15" fill="rgb(248,145,5)" fg:x="986" fg:w="3"/><text x="46.2817%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (10 samples, 0.47%)</title><rect x="46.1718%" y="517" width="0.4669%" height="15" fill="rgb(226,116,26)" fg:x="989" fg:w="10"/><text x="46.4218%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (16 samples, 0.75%)</title><rect x="46.6387%" y="517" width="0.7470%" height="15" fill="rgb(244,5,17)" fg:x="999" fg:w="16"/><text x="46.8887%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (15 samples, 0.70%)</title><rect x="47.3856%" y="517" width="0.7003%" height="15" fill="rgb(252,159,33)" fg:x="1015" fg:w="15"/><text x="47.6356%" y="527.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (2 samples, 0.09%)</title><rect x="48.0859%" y="517" width="0.0934%" height="15" fill="rgb(206,71,0)" fg:x="1030" fg:w="2"/><text x="48.3359%" y="527.50"></text></g><g><title>libcorecrypto.dylib`XYCZaddC_ws (47 samples, 2.19%)</title><rect x="46.1718%" y="533" width="2.1942%" height="15" fill="rgb(233,118,54)" fg:x="989" fg:w="47"/><text x="46.4218%" y="543.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (4 samples, 0.19%)</title><rect x="48.1793%" y="517" width="0.1867%" height="15" fill="rgb(234,83,48)" fg:x="1032" fg:w="4"/><text x="48.4293%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (8 samples, 0.37%)</title><rect x="48.5061%" y="517" width="0.3735%" height="15" fill="rgb(228,3,54)" fg:x="1039" fg:w="8"/><text x="48.7561%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (4 samples, 0.19%)</title><rect x="48.8796%" y="517" width="0.1867%" height="15" fill="rgb(226,155,13)" fg:x="1047" fg:w="4"/><text x="49.1296%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (6 samples, 0.28%)</title><rect x="49.0663%" y="517" width="0.2801%" height="15" fill="rgb(241,28,37)" fg:x="1051" fg:w="6"/><text x="49.3163%" y="527.50"></text></g><g><title>libcorecrypto.dylib`XYCZadd_ws (23 samples, 1.07%)</title><rect x="48.3660%" y="533" width="1.0738%" height="15" fill="rgb(233,93,10)" fg:x="1036" fg:w="23"/><text x="48.6160%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (2 samples, 0.09%)</title><rect x="49.3464%" y="517" width="0.0934%" height="15" fill="rgb(225,113,19)" fg:x="1057" fg:w="2"/><text x="49.5964%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (60 samples, 2.80%)</title><rect x="49.4398%" y="533" width="2.8011%" height="15" fill="rgb(241,2,18)" fg:x="1059" fg:w="60"/><text x="49.6898%" y="543.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (23 samples, 1.07%)</title><rect x="52.2409%" y="533" width="1.0738%" height="15" fill="rgb(228,207,21)" fg:x="1119" fg:w="23"/><text x="52.4909%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (154 samples, 7.19%)</title><rect x="46.1718%" y="549" width="7.1895%" height="15" fill="rgb(213,211,35)" fg:x="989" fg:w="154"/><text x="46.4218%" y="559.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.05%)</title><rect x="53.3147%" y="533" width="0.0467%" height="15" fill="rgb(209,83,10)" fg:x="1142" fg:w="1"/><text x="53.5647%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (4 samples, 0.19%)</title><rect x="53.3613%" y="549" width="0.1867%" height="15" fill="rgb(209,164,1)" fg:x="1143" fg:w="4"/><text x="53.6113%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_div_euclid_ws (1 samples, 0.05%)</title><rect x="53.5481%" y="549" width="0.0467%" height="15" fill="rgb(213,184,43)" fg:x="1147" fg:w="1"/><text x="53.7981%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_div_use_recip_ws (1 samples, 0.05%)</title><rect x="53.5481%" y="533" width="0.0467%" height="15" fill="rgb(231,61,34)" fg:x="1147" fg:w="1"/><text x="53.7981%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_shift_right_multi (1 samples, 0.05%)</title><rect x="53.5481%" y="517" width="0.0467%" height="15" fill="rgb(235,75,3)" fg:x="1147" fg:w="1"/><text x="53.7981%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips (164 samples, 7.66%)</title><rect x="45.9851%" y="597" width="7.6564%" height="15" fill="rgb(220,106,47)" fg:x="985" fg:w="164"/><text x="46.2351%" y="607.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_make_pub_from_priv (164 samples, 7.66%)</title><rect x="45.9851%" y="581" width="7.6564%" height="15" fill="rgb(210,196,33)" fg:x="985" fg:w="164"/><text x="46.2351%" y="591.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded (160 samples, 7.47%)</title><rect x="46.1718%" y="565" width="7.4697%" height="15" fill="rgb(229,154,42)" fg:x="989" fg:w="160"/><text x="46.4218%" y="575.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccn_sub (1 samples, 0.05%)</title><rect x="53.5948%" y="549" width="0.0467%" height="15" fill="rgb(228,114,26)" fg:x="1148" fg:w="1"/><text x="53.8448%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.05%)</title><rect x="53.6415%" y="501" width="0.0467%" height="15" fill="rgb(208,144,1)" fg:x="1149" fg:w="1"/><text x="53.8915%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv (2 samples, 0.09%)</title><rect x="53.6881%" y="501" width="0.0934%" height="15" fill="rgb(239,112,37)" fg:x="1150" fg:w="2"/><text x="53.9381%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify (13 samples, 0.61%)</title><rect x="53.6415%" y="517" width="0.6069%" height="15" fill="rgb(210,96,50)" fg:x="1149" fg:w="13"/><text x="53.8915%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (10 samples, 0.47%)</title><rect x="53.7815%" y="501" width="0.4669%" height="15" fill="rgb(222,178,2)" fg:x="1152" fg:w="10"/><text x="54.0315%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (7 samples, 0.33%)</title><rect x="54.3417%" y="469" width="0.3268%" height="15" fill="rgb(226,74,18)" fg:x="1164" fg:w="7"/><text x="54.5917%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (12 samples, 0.56%)</title><rect x="54.6685%" y="469" width="0.5602%" height="15" fill="rgb(225,67,54)" fg:x="1171" fg:w="12"/><text x="54.9185%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (4 samples, 0.19%)</title><rect x="55.2288%" y="469" width="0.1867%" height="15" fill="rgb(251,92,32)" fg:x="1183" fg:w="4"/><text x="55.4788%" y="479.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.05%)</title><rect x="55.4155%" y="469" width="0.0467%" height="15" fill="rgb(228,149,22)" fg:x="1187" fg:w="1"/><text x="55.6655%" y="479.50"></text></g><g><title>libcorecrypto.dylib`XYCZaddC_ws (30 samples, 1.40%)</title><rect x="54.2951%" y="485" width="1.4006%" height="15" fill="rgb(243,54,13)" fg:x="1163" fg:w="30"/><text x="54.5451%" y="495.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (5 samples, 0.23%)</title><rect x="55.4622%" y="469" width="0.2334%" height="15" fill="rgb(243,180,28)" fg:x="1188" fg:w="5"/><text x="55.7122%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (3 samples, 0.14%)</title><rect x="55.6956%" y="469" width="0.1401%" height="15" fill="rgb(208,167,24)" fg:x="1193" fg:w="3"/><text x="55.9456%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (5 samples, 0.23%)</title><rect x="55.8357%" y="469" width="0.2334%" height="15" fill="rgb(245,73,45)" fg:x="1196" fg:w="5"/><text x="56.0857%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (5 samples, 0.23%)</title><rect x="56.0691%" y="469" width="0.2334%" height="15" fill="rgb(237,203,48)" fg:x="1201" fg:w="5"/><text x="56.3191%" y="479.50"></text></g><g><title>libcorecrypto.dylib`XYCZadd_ws (17 samples, 0.79%)</title><rect x="55.6956%" y="485" width="0.7937%" height="15" fill="rgb(211,197,16)" fg:x="1193" fg:w="17"/><text x="55.9456%" y="495.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (4 samples, 0.19%)</title><rect x="56.3025%" y="469" width="0.1867%" height="15" fill="rgb(243,99,51)" fg:x="1206" fg:w="4"/><text x="56.5525%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (52 samples, 2.43%)</title><rect x="56.4893%" y="485" width="2.4276%" height="15" fill="rgb(215,123,29)" fg:x="1210" fg:w="52"/><text x="56.7393%" y="495.50">li..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (24 samples, 1.12%)</title><rect x="58.9169%" y="485" width="1.1204%" height="15" fill="rgb(239,186,37)" fg:x="1262" fg:w="24"/><text x="59.1669%" y="495.50"></text></g><g><title>libcorecrypto.dylib`cczp_sqr_ws (1 samples, 0.05%)</title><rect x="60.0373%" y="485" width="0.0467%" height="15" fill="rgb(252,136,39)" fg:x="1286" fg:w="1"/><text x="60.2873%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (131 samples, 6.12%)</title><rect x="54.2484%" y="501" width="6.1158%" height="15" fill="rgb(223,213,32)" fg:x="1162" fg:w="131"/><text x="54.4984%" y="511.50">libcorec..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (6 samples, 0.28%)</title><rect x="60.0840%" y="485" width="0.2801%" height="15" fill="rgb(233,115,5)" fg:x="1287" fg:w="6"/><text x="60.3340%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (2 samples, 0.09%)</title><rect x="60.3641%" y="501" width="0.0934%" height="15" fill="rgb(207,226,44)" fg:x="1293" fg:w="2"/><text x="60.6141%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_div_use_recip_ws (1 samples, 0.05%)</title><rect x="60.4575%" y="485" width="0.0467%" height="15" fill="rgb(208,126,0)" fg:x="1295" fg:w="1"/><text x="60.7075%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul (1 samples, 0.05%)</title><rect x="60.4575%" y="469" width="0.0467%" height="15" fill="rgb(244,66,21)" fg:x="1295" fg:w="1"/><text x="60.7075%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded (135 samples, 6.30%)</title><rect x="54.2484%" y="517" width="6.3025%" height="15" fill="rgb(222,97,12)" fg:x="1162" fg:w="135"/><text x="54.4984%" y="527.50">libcorec..</text></g><g><title>libcorecrypto.dylib`ccn_div_euclid_ws (2 samples, 0.09%)</title><rect x="60.4575%" y="501" width="0.0934%" height="15" fill="rgb(219,213,19)" fg:x="1295" fg:w="2"/><text x="60.7075%" y="511.50"></text></g><g><title>libsystem_c.dylib`memset_s (1 samples, 0.05%)</title><rect x="60.5042%" y="485" width="0.0467%" height="15" fill="rgb(252,169,30)" fg:x="1296" fg:w="1"/><text x="60.7542%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits (1 samples, 0.05%)</title><rect x="60.5509%" y="501" width="0.0467%" height="15" fill="rgb(206,32,51)" fg:x="1297" fg:w="1"/><text x="60.8009%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccrng_cryptographic_generate (1 samples, 0.05%)</title><rect x="60.5509%" y="485" width="0.0467%" height="15" fill="rgb(250,172,42)" fg:x="1297" fg:w="1"/><text x="60.8009%" y="495.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.05%)</title><rect x="60.5509%" y="469" width="0.0467%" height="15" fill="rgb(209,34,43)" fg:x="1297" fg:w="1"/><text x="60.8009%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_ecb (1 samples, 0.05%)</title><rect x="60.5509%" y="453" width="0.0467%" height="15" fill="rgb(223,11,35)" fg:x="1297" fg:w="1"/><text x="60.8009%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips (150 samples, 7.00%)</title><rect x="53.6415%" y="549" width="7.0028%" height="15" fill="rgb(251,219,26)" fg:x="1149" fg:w="150"/><text x="53.8915%" y="559.50">libcorecr..</text></g><g><title>libcorecrypto.dylib`ccec_make_pub_from_priv (150 samples, 7.00%)</title><rect x="53.6415%" y="533" width="7.0028%" height="15" fill="rgb(231,119,3)" fg:x="1149" fg:w="150"/><text x="53.8915%" y="543.50">libcorecr..</text></g><g><title>libcorecrypto.dylib`ccec_projectify (2 samples, 0.09%)</title><rect x="60.5509%" y="517" width="0.0934%" height="15" fill="rgb(216,97,11)" fg:x="1297" fg:w="2"/><text x="60.8009%" y="527.50"></text></g><g><title>libcorecrypto.dylib`cczp_to (1 samples, 0.05%)</title><rect x="60.5976%" y="501" width="0.0467%" height="15" fill="rgb(223,59,9)" fg:x="1298" fg:w="1"/><text x="60.8476%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="60.5976%" y="485" width="0.0467%" height="15" fill="rgb(233,93,31)" fg:x="1298" fg:w="1"/><text x="60.8476%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="60.5976%" y="469" width="0.0467%" height="15" fill="rgb(239,81,33)" fg:x="1298" fg:w="1"/><text x="60.8476%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="60.5976%" y="453" width="0.0467%" height="15" fill="rgb(213,120,34)" fg:x="1298" fg:w="1"/><text x="60.8476%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="60.5976%" y="437" width="0.0467%" height="15" fill="rgb(243,49,53)" fg:x="1298" fg:w="1"/><text x="60.8476%" y="447.50"></text></g><g><title>libcorecrypto.dylib`DYLD-STUB$$memmove (1 samples, 0.05%)</title><rect x="60.8777%" y="517" width="0.0467%" height="15" fill="rgb(247,216,33)" fg:x="1304" fg:w="1"/><text x="61.1277%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign (157 samples, 7.33%)</title><rect x="53.6415%" y="581" width="7.3296%" height="15" fill="rgb(226,26,14)" fg:x="1149" fg:w="157"/><text x="53.8915%" y="591.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_sign_internal (157 samples, 7.33%)</title><rect x="53.6415%" y="565" width="7.3296%" height="15" fill="rgb(215,49,53)" fg:x="1149" fg:w="157"/><text x="53.8915%" y="575.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`cczp_inv (7 samples, 0.33%)</title><rect x="60.6443%" y="549" width="0.3268%" height="15" fill="rgb(245,162,40)" fg:x="1299" fg:w="7"/><text x="60.8943%" y="559.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (7 samples, 0.33%)</title><rect x="60.6443%" y="533" width="0.3268%" height="15" fill="rgb(229,68,17)" fg:x="1299" fg:w="7"/><text x="60.8943%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.05%)</title><rect x="60.9244%" y="517" width="0.0467%" height="15" fill="rgb(213,182,10)" fg:x="1305" fg:w="1"/><text x="61.1744%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (8 samples, 0.37%)</title><rect x="60.9711%" y="517" width="0.3735%" height="15" fill="rgb(245,125,30)" fg:x="1306" fg:w="8"/><text x="61.2211%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only (9 samples, 0.42%)</title><rect x="60.9711%" y="533" width="0.4202%" height="15" fill="rgb(232,202,2)" fg:x="1306" fg:w="9"/><text x="61.2211%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="61.3445%" y="517" width="0.0467%" height="15" fill="rgb(237,140,51)" fg:x="1314" fg:w="1"/><text x="61.5945%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccec_is_point_projective (1 samples, 0.05%)</title><rect x="61.3912%" y="533" width="0.0467%" height="15" fill="rgb(236,157,25)" fg:x="1315" fg:w="1"/><text x="61.6412%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.05%)</title><rect x="61.3912%" y="517" width="0.0467%" height="15" fill="rgb(219,209,0)" fg:x="1315" fg:w="1"/><text x="61.6412%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (7 samples, 0.33%)</title><rect x="61.5313%" y="501" width="0.3268%" height="15" fill="rgb(240,116,54)" fg:x="1318" fg:w="7"/><text x="61.7813%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (3 samples, 0.14%)</title><rect x="61.8581%" y="501" width="0.1401%" height="15" fill="rgb(216,10,36)" fg:x="1325" fg:w="3"/><text x="62.1081%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (2 samples, 0.09%)</title><rect x="61.9981%" y="501" width="0.0934%" height="15" fill="rgb(222,72,44)" fg:x="1328" fg:w="2"/><text x="62.2481%" y="511.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.05%)</title><rect x="62.0915%" y="501" width="0.0467%" height="15" fill="rgb(232,159,9)" fg:x="1330" fg:w="1"/><text x="62.3415%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (17 samples, 0.79%)</title><rect x="61.4846%" y="517" width="0.7937%" height="15" fill="rgb(210,39,32)" fg:x="1317" fg:w="17"/><text x="61.7346%" y="527.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (3 samples, 0.14%)</title><rect x="62.1382%" y="501" width="0.1401%" height="15" fill="rgb(216,194,45)" fg:x="1331" fg:w="3"/><text x="62.3882%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (9 samples, 0.42%)</title><rect x="62.2782%" y="501" width="0.4202%" height="15" fill="rgb(218,18,35)" fg:x="1334" fg:w="9"/><text x="62.5282%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (5 samples, 0.23%)</title><rect x="62.6984%" y="501" width="0.2334%" height="15" fill="rgb(207,83,51)" fg:x="1343" fg:w="5"/><text x="62.9484%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (7 samples, 0.33%)</title><rect x="62.9318%" y="501" width="0.3268%" height="15" fill="rgb(225,63,43)" fg:x="1348" fg:w="7"/><text x="63.1818%" y="511.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (2 samples, 0.09%)</title><rect x="63.2586%" y="501" width="0.0934%" height="15" fill="rgb(207,57,36)" fg:x="1355" fg:w="2"/><text x="63.5086%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (28 samples, 1.31%)</title><rect x="62.2782%" y="517" width="1.3072%" height="15" fill="rgb(216,99,33)" fg:x="1334" fg:w="28"/><text x="62.5282%" y="527.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (5 samples, 0.23%)</title><rect x="63.3520%" y="501" width="0.2334%" height="15" fill="rgb(225,42,16)" fg:x="1357" fg:w="5"/><text x="63.6020%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (47 samples, 2.19%)</title><rect x="63.5854%" y="517" width="2.1942%" height="15" fill="rgb(220,201,45)" fg:x="1362" fg:w="47"/><text x="63.8354%" y="527.50">l..</text></g><g><title>libcorecrypto.dylib`ccn_n (1 samples, 0.05%)</title><rect x="65.7796%" y="517" width="0.0467%" height="15" fill="rgb(225,33,4)" fg:x="1409" fg:w="1"/><text x="66.0296%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (18 samples, 0.84%)</title><rect x="65.8263%" y="517" width="0.8403%" height="15" fill="rgb(224,33,50)" fg:x="1410" fg:w="18"/><text x="66.0763%" y="527.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.05%)</title><rect x="66.6667%" y="517" width="0.0467%" height="15" fill="rgb(246,198,51)" fg:x="1428" fg:w="1"/><text x="66.9167%" y="527.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv (8 samples, 0.37%)</title><rect x="66.7134%" y="517" width="0.3735%" height="15" fill="rgb(205,22,4)" fg:x="1429" fg:w="8"/><text x="66.9634%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (8 samples, 0.37%)</title><rect x="66.7134%" y="501" width="0.3735%" height="15" fill="rgb(206,3,8)" fg:x="1429" fg:w="8"/><text x="66.9634%" y="511.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (1 samples, 0.05%)</title><rect x="67.0868%" y="517" width="0.0467%" height="15" fill="rgb(251,23,15)" fg:x="1437" fg:w="1"/><text x="67.3368%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult (124 samples, 5.79%)</title><rect x="61.4379%" y="533" width="5.7890%" height="15" fill="rgb(252,88,28)" fg:x="1316" fg:w="124"/><text x="61.6879%" y="543.50">libcore..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (2 samples, 0.09%)</title><rect x="67.1335%" y="517" width="0.0934%" height="15" fill="rgb(212,127,14)" fg:x="1438" fg:w="2"/><text x="67.3835%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_neg (1 samples, 0.05%)</title><rect x="67.3669%" y="501" width="0.0467%" height="15" fill="rgb(247,145,37)" fg:x="1443" fg:w="1"/><text x="67.6169%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="67.4136%" y="485" width="0.0467%" height="15" fill="rgb(209,117,53)" fg:x="1444" fg:w="1"/><text x="67.6636%" y="495.50"></text></g><g><title>libcorecrypto.dylib`update (2 samples, 0.09%)</title><rect x="67.4136%" y="501" width="0.0934%" height="15" fill="rgb(212,90,42)" fg:x="1444" fg:w="2"/><text x="67.6636%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="67.4603%" y="485" width="0.0467%" height="15" fill="rgb(218,164,37)" fg:x="1445" fg:w="1"/><text x="67.7103%" y="495.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (637 samples, 29.74%)</title><rect x="37.8151%" y="661" width="29.7386%" height="15" fill="rgb(246,65,34)" fg:x="810" fg:w="637"/><text x="38.0651%" y="671.50">libcoretls.dylib`SSLPrepareAndQueueMessage</text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (635 samples, 29.65%)</title><rect x="37.9085%" y="645" width="29.6452%" height="15" fill="rgb(231,100,33)" fg:x="812" fg:w="635"/><text x="38.1585%" y="655.50">libcoretls.dylib`SSLEncodeKeyExchange</text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (462 samples, 21.57%)</title><rect x="45.9851%" y="629" width="21.5686%" height="15" fill="rgb(228,126,14)" fg:x="985" fg:w="462"/><text x="46.2351%" y="639.50">libcoretls.dylib`sslEcdhCreateKey</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (462 samples, 21.57%)</title><rect x="45.9851%" y="613" width="21.5686%" height="15" fill="rgb(215,173,21)" fg:x="985" fg:w="462"/><text x="46.2351%" y="623.50">libcorecrypto.dylib`ccec_generate_..</text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check (298 samples, 13.91%)</title><rect x="53.6415%" y="597" width="13.9122%" height="15" fill="rgb(210,6,40)" fg:x="1149" fg:w="298"/><text x="53.8915%" y="607.50">libcorecrypto.dylib`c..</text></g><g><title>libcorecrypto.dylib`ccec_verify (141 samples, 6.58%)</title><rect x="60.9711%" y="581" width="6.5826%" height="15" fill="rgb(212,48,18)" fg:x="1306" fg:w="141"/><text x="61.2211%" y="591.50">libcorecr..</text></g><g><title>libcorecrypto.dylib`ccec_verify_digest (141 samples, 6.58%)</title><rect x="60.9711%" y="565" width="6.5826%" height="15" fill="rgb(230,214,11)" fg:x="1306" fg:w="141"/><text x="61.2211%" y="575.50">libcorecr..</text></g><g><title>libcorecrypto.dylib`ccec_verify_internal (141 samples, 6.58%)</title><rect x="60.9711%" y="549" width="6.5826%" height="15" fill="rgb(254,105,39)" fg:x="1306" fg:w="141"/><text x="61.2211%" y="559.50">libcorecr..</text></g><g><title>libcorecrypto.dylib`cczp_inv (7 samples, 0.33%)</title><rect x="67.2269%" y="533" width="0.3268%" height="15" fill="rgb(245,158,5)" fg:x="1440" fg:w="7"/><text x="67.4769%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (7 samples, 0.33%)</title><rect x="67.2269%" y="517" width="0.3268%" height="15" fill="rgb(249,208,11)" fg:x="1440" fg:w="7"/><text x="67.4769%" y="527.50"></text></g><g><title>libcorecrypto.dylib`update_redc (1 samples, 0.05%)</title><rect x="67.5070%" y="501" width="0.0467%" height="15" fill="rgb(210,39,28)" fg:x="1446" fg:w="1"/><text x="67.7570%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.05%)</title><rect x="67.5537%" y="597" width="0.0467%" height="15" fill="rgb(211,56,53)" fg:x="1447" fg:w="1"/><text x="67.8037%" y="607.50"></text></g><g><title>libsystem_featureflags.dylib`_os_feature_enabled_impl (1 samples, 0.05%)</title><rect x="67.5537%" y="581" width="0.0467%" height="15" fill="rgb(226,201,30)" fg:x="1447" fg:w="1"/><text x="67.8037%" y="591.50"></text></g><g><title>libcoretls.dylib`SSLSendFlight (2 samples, 0.09%)</title><rect x="67.5537%" y="661" width="0.0934%" height="15" fill="rgb(239,101,34)" fg:x="1447" fg:w="2"/><text x="67.8037%" y="671.50"></text></g><g><title>Security`tls_handshake_write_callback (2 samples, 0.09%)</title><rect x="67.5537%" y="645" width="0.0934%" height="15" fill="rgb(226,209,5)" fg:x="1447" fg:w="2"/><text x="67.8037%" y="655.50"></text></g><g><title>Security`SSLRecordWriteInternal (2 samples, 0.09%)</title><rect x="67.5537%" y="629" width="0.0934%" height="15" fill="rgb(250,105,47)" fg:x="1447" fg:w="2"/><text x="67.8037%" y="639.50"></text></g><g><title>libcoretls.dylib`tls_record_encrypt (2 samples, 0.09%)</title><rect x="67.5537%" y="613" width="0.0934%" height="15" fill="rgb(230,72,3)" fg:x="1447" fg:w="2"/><text x="67.8037%" y="623.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADEncrypt (1 samples, 0.05%)</title><rect x="67.6004%" y="597" width="0.0467%" height="15" fill="rgb(232,218,39)" fg:x="1448" fg:w="1"/><text x="67.8504%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_ecb (1 samples, 0.05%)</title><rect x="67.6004%" y="581" width="0.0467%" height="15" fill="rgb(248,166,6)" fg:x="1448" fg:w="1"/><text x="67.8504%" y="591.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (646 samples, 30.16%)</title><rect x="37.5817%" y="693" width="30.1587%" height="15" fill="rgb(247,89,20)" fg:x="805" fg:w="646"/><text x="37.8317%" y="703.50">libcoretls.dylib`tls_handshake_continue</text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (646 samples, 30.16%)</title><rect x="37.5817%" y="677" width="30.1587%" height="15" fill="rgb(248,130,54)" fg:x="805" fg:w="646"/><text x="37.8317%" y="687.50">libcoretls.dylib`SSLAdvanceHandshake</text></g><g><title>libcoretls.dylib`tls12GenerateMasterSecret (2 samples, 0.09%)</title><rect x="67.6471%" y="661" width="0.0934%" height="15" fill="rgb(234,196,4)" fg:x="1449" fg:w="2"/><text x="67.8971%" y="671.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (2 samples, 0.09%)</title><rect x="67.6471%" y="645" width="0.0934%" height="15" fill="rgb(250,143,31)" fg:x="1449" fg:w="2"/><text x="67.8971%" y="655.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.05%)</title><rect x="67.6937%" y="629" width="0.0467%" height="15" fill="rgb(211,110,34)" fg:x="1450" fg:w="1"/><text x="67.9437%" y="639.50"></text></g><g><title>libcoretls.dylib`HMAC_Hmac (1 samples, 0.05%)</title><rect x="67.6937%" y="613" width="0.0467%" height="15" fill="rgb(215,124,48)" fg:x="1450" fg:w="1"/><text x="67.9437%" y="623.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.05%)</title><rect x="67.6937%" y="597" width="0.0467%" height="15" fill="rgb(216,46,13)" fg:x="1450" fg:w="1"/><text x="67.9437%" y="607.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (1 samples, 0.05%)</title><rect x="67.6937%" y="581" width="0.0467%" height="15" fill="rgb(205,184,25)" fg:x="1450" fg:w="1"/><text x="67.9437%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (1 samples, 0.05%)</title><rect x="67.6937%" y="565" width="0.0467%" height="15" fill="rgb(228,1,10)" fg:x="1450" fg:w="1"/><text x="67.9437%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.05%)</title><rect x="67.7871%" y="565" width="0.0467%" height="15" fill="rgb(213,116,27)" fg:x="1452" fg:w="1"/><text x="68.0371%" y="575.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.05%)</title><rect x="67.7871%" y="549" width="0.0467%" height="15" fill="rgb(241,95,50)" fg:x="1452" fg:w="1"/><text x="68.0371%" y="559.50"></text></g><g><title>Foundation`DYLD-STUB$$object_getClass (1 samples, 0.05%)</title><rect x="67.7871%" y="533" width="0.0467%" height="15" fill="rgb(238,48,32)" fg:x="1452" fg:w="1"/><text x="68.0371%" y="543.50"></text></g><g><title>Security`DecodedExtensions::~DecodedExtensions (1 samples, 0.05%)</title><rect x="67.8338%" y="421" width="0.0467%" height="15" fill="rgb(235,113,49)" fg:x="1453" fg:w="1"/><text x="68.0838%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="67.8338%" y="405" width="0.0467%" height="15" fill="rgb(205,127,43)" fg:x="1453" fg:w="1"/><text x="68.0838%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="67.8338%" y="389" width="0.0467%" height="15" fill="rgb(250,162,2)" fg:x="1453" fg:w="1"/><text x="68.0838%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="67.8338%" y="373" width="0.0467%" height="15" fill="rgb(220,13,41)" fg:x="1453" fg:w="1"/><text x="68.0838%" y="383.50"></text></g><g><title>Security`CLCachedCert::~CLCachedCert (2 samples, 0.09%)</title><rect x="67.8338%" y="469" width="0.0934%" height="15" fill="rgb(249,221,25)" fg:x="1453" fg:w="2"/><text x="68.0838%" y="479.50"></text></g><g><title>Security`DecodedCert::~DecodedCert (2 samples, 0.09%)</title><rect x="67.8338%" y="453" width="0.0934%" height="15" fill="rgb(215,208,19)" fg:x="1453" fg:w="2"/><text x="68.0838%" y="463.50"></text></g><g><title>Security`DecodedItem::~DecodedItem (2 samples, 0.09%)</title><rect x="67.8338%" y="437" width="0.0934%" height="15" fill="rgb(236,175,2)" fg:x="1453" fg:w="2"/><text x="68.0838%" y="447.50"></text></g><g><title>Security`PORT_FreeArena (1 samples, 0.05%)</title><rect x="67.8805%" y="421" width="0.0467%" height="15" fill="rgb(241,52,2)" fg:x="1454" fg:w="1"/><text x="68.1305%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="67.8805%" y="405" width="0.0467%" height="15" fill="rgb(248,140,14)" fg:x="1454" fg:w="1"/><text x="68.1305%" y="415.50"></text></g><g><title>Security`CSSM_CL_CertAbortCache (3 samples, 0.14%)</title><rect x="67.8338%" y="501" width="0.1401%" height="15" fill="rgb(253,22,42)" fg:x="1453" fg:w="3"/><text x="68.0838%" y="511.50"></text></g><g><title>Security`cssm_CertAbortCache(long, long) (3 samples, 0.14%)</title><rect x="67.8338%" y="485" width="0.1401%" height="15" fill="rgb(234,61,47)" fg:x="1453" fg:w="3"/><text x="68.0838%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="67.9272%" y="469" width="0.0467%" height="15" fill="rgb(208,226,15)" fg:x="1455" fg:w="1"/><text x="68.1772%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="67.9272%" y="453" width="0.0467%" height="15" fill="rgb(217,221,4)" fg:x="1455" fg:w="1"/><text x="68.1772%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="67.9272%" y="437" width="0.0467%" height="15" fill="rgb(212,174,34)" fg:x="1455" fg:w="1"/><text x="68.1772%" y="447.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::deactivate (1 samples, 0.05%)</title><rect x="67.9739%" y="421" width="0.0467%" height="15" fill="rgb(253,83,4)" fg:x="1456" fg:w="1"/><text x="68.2239%" y="431.50"></text></g><g><title>Security`CSSM_ModuleDetach (1 samples, 0.05%)</title><rect x="67.9739%" y="405" width="0.0467%" height="15" fill="rgb(250,195,49)" fg:x="1456" fg:w="1"/><text x="68.2239%" y="415.50"></text></g><g><title>Security`CSSM_SPI_ModuleDetach__apple_x509_cl (1 samples, 0.05%)</title><rect x="67.9739%" y="389" width="0.0467%" height="15" fill="rgb(241,192,25)" fg:x="1456" fg:w="1"/><text x="68.2239%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (6 samples, 0.28%)</title><rect x="67.7871%" y="629" width="0.2801%" height="15" fill="rgb(208,124,10)" fg:x="1452" fg:w="6"/><text x="68.0371%" y="639.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (6 samples, 0.28%)</title><rect x="67.7871%" y="613" width="0.2801%" height="15" fill="rgb(222,33,0)" fg:x="1452" fg:w="6"/><text x="68.0371%" y="623.50"></text></g><g><title>CoreFoundation`_CFRelease (6 samples, 0.28%)</title><rect x="67.7871%" y="597" width="0.2801%" height="15" fill="rgb(234,209,28)" fg:x="1452" fg:w="6"/><text x="68.0371%" y="607.50"></text></g><g><title>Security`SecCertificateDestroy (6 samples, 0.28%)</title><rect x="67.7871%" y="581" width="0.2801%" height="15" fill="rgb(224,11,23)" fg:x="1452" fg:w="6"/><text x="68.0371%" y="591.50"></text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.23%)</title><rect x="67.8338%" y="565" width="0.2334%" height="15" fill="rgb(232,99,1)" fg:x="1453" fg:w="5"/><text x="68.0838%" y="575.50"></text></g><g><title>Security`Security::CFClass::refCountForType (5 samples, 0.23%)</title><rect x="67.8338%" y="549" width="0.2334%" height="15" fill="rgb(237,95,45)" fg:x="1453" fg:w="5"/><text x="68.0838%" y="559.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::~Certificate (5 samples, 0.23%)</title><rect x="67.8338%" y="533" width="0.2334%" height="15" fill="rgb(208,109,11)" fg:x="1453" fg:w="5"/><text x="68.0838%" y="543.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::~Certificate (5 samples, 0.23%)</title><rect x="67.8338%" y="517" width="0.2334%" height="15" fill="rgb(216,190,48)" fg:x="1453" fg:w="5"/><text x="68.0838%" y="527.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (2 samples, 0.09%)</title><rect x="67.9739%" y="501" width="0.0934%" height="15" fill="rgb(251,171,36)" fg:x="1456" fg:w="2"/><text x="68.2239%" y="511.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release (2 samples, 0.09%)</title><rect x="67.9739%" y="485" width="0.0934%" height="15" fill="rgb(230,62,22)" fg:x="1456" fg:w="2"/><text x="68.2239%" y="495.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (2 samples, 0.09%)</title><rect x="67.9739%" y="469" width="0.0934%" height="15" fill="rgb(225,114,35)" fg:x="1456" fg:w="2"/><text x="68.2239%" y="479.50"></text></g><g><title>Security`Security::CssmClient::CLImpl::~CLImpl (2 samples, 0.09%)</title><rect x="67.9739%" y="453" width="0.0934%" height="15" fill="rgb(215,118,42)" fg:x="1456" fg:w="2"/><text x="68.2239%" y="463.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::~AttachmentImpl (2 samples, 0.09%)</title><rect x="67.9739%" y="437" width="0.0934%" height="15" fill="rgb(243,119,21)" fg:x="1456" fg:w="2"/><text x="68.2239%" y="447.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::~ObjectImpl (1 samples, 0.05%)</title><rect x="68.0205%" y="421" width="0.0467%" height="15" fill="rgb(252,177,53)" fg:x="1457" fg:w="1"/><text x="68.2705%" y="431.50"></text></g><g><title>Security`Security::Mutex::~Mutex (1 samples, 0.05%)</title><rect x="68.0205%" y="405" width="0.0467%" height="15" fill="rgb(237,209,29)" fg:x="1457" fg:w="1"/><text x="68.2705%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.05%)</title><rect x="68.0205%" y="389" width="0.0467%" height="15" fill="rgb(212,65,23)" fg:x="1457" fg:w="1"/><text x="68.2705%" y="399.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (1 samples, 0.05%)</title><rect x="68.0672%" y="629" width="0.0467%" height="15" fill="rgb(230,222,46)" fg:x="1458" fg:w="1"/><text x="68.3172%" y="639.50"></text></g><g><title>CoreFoundation`CFArrayGetTypeID (1 samples, 0.05%)</title><rect x="68.1139%" y="629" width="0.0467%" height="15" fill="rgb(215,135,32)" fg:x="1459" fg:w="1"/><text x="68.3639%" y="639.50"></text></g><g><title>Security`Security::KeychainCore::ItemImpl::~ItemImpl (1 samples, 0.05%)</title><rect x="68.1606%" y="581" width="0.0467%" height="15" fill="rgb(246,101,22)" fg:x="1460" fg:w="1"/><text x="68.4106%" y="591.50"></text></g><g><title>Security`std::__1::unique_ptr&lt;Security::CssmClient::DbAttributes, std::__1::default_delete&lt;Security::CssmClient::DbAttributes&gt; &gt;::reset (1 samples, 0.05%)</title><rect x="68.1606%" y="565" width="0.0467%" height="15" fill="rgb(206,107,13)" fg:x="1460" fg:w="1"/><text x="68.4106%" y="575.50"></text></g><g><title>Security`Security::CssmAutoDbRecordAttributeData::~CssmAutoDbRecordAttributeData (1 samples, 0.05%)</title><rect x="68.1606%" y="549" width="0.0467%" height="15" fill="rgb(250,100,44)" fg:x="1460" fg:w="1"/><text x="68.4106%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="68.1606%" y="533" width="0.0467%" height="15" fill="rgb(231,147,38)" fg:x="1460" fg:w="1"/><text x="68.4106%" y="543.50"></text></g><g><title>Security`SecCDSAKeyDestroy(__SecKey*) (2 samples, 0.09%)</title><rect x="68.1606%" y="613" width="0.0934%" height="15" fill="rgb(229,8,40)" fg:x="1460" fg:w="2"/><text x="68.4106%" y="623.50"></text></g><g><title>Security`Security::KeychainCore::KeyItem::~KeyItem (2 samples, 0.09%)</title><rect x="68.1606%" y="597" width="0.0934%" height="15" fill="rgb(221,135,30)" fg:x="1460" fg:w="2"/><text x="68.4106%" y="607.50"></text></g><g><title>Security`Security::KeychainCore::KeyItem::~KeyItem (1 samples, 0.05%)</title><rect x="68.2073%" y="581" width="0.0467%" height="15" fill="rgb(249,193,18)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="591.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (1 samples, 0.05%)</title><rect x="68.2073%" y="565" width="0.0467%" height="15" fill="rgb(209,133,39)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="575.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release (1 samples, 0.05%)</title><rect x="68.2073%" y="549" width="0.0467%" height="15" fill="rgb(232,100,14)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="559.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (1 samples, 0.05%)</title><rect x="68.2073%" y="533" width="0.0467%" height="15" fill="rgb(224,185,1)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="543.50"></text></g><g><title>Security`Security::CssmClient::KeyImpl::~KeyImpl (1 samples, 0.05%)</title><rect x="68.2073%" y="517" width="0.0467%" height="15" fill="rgb(223,139,8)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="527.50"></text></g><g><title>Security`Security::CssmClient::KeyImpl::~KeyImpl (1 samples, 0.05%)</title><rect x="68.2073%" y="501" width="0.0467%" height="15" fill="rgb(232,213,38)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="511.50"></text></g><g><title>Security`Security::CssmClient::KeyImpl::deactivate (1 samples, 0.05%)</title><rect x="68.2073%" y="485" width="0.0467%" height="15" fill="rgb(207,94,22)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="495.50"></text></g><g><title>Security`CSSM_FreeKey (1 samples, 0.05%)</title><rect x="68.2073%" y="469" width="0.0467%" height="15" fill="rgb(219,183,54)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="479.50"></text></g><g><title>Security`cssm_FreeKey(long, cssm_access_credentials const*, cssm_key*, int) (1 samples, 0.05%)</title><rect x="68.2073%" y="453" width="0.0467%" height="15" fill="rgb(216,185,54)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="463.50"></text></g><g><title>Security`Security::CssmPlugin::find (1 samples, 0.05%)</title><rect x="68.2073%" y="437" width="0.0467%" height="15" fill="rgb(254,217,39)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="447.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (1 samples, 0.05%)</title><rect x="68.2073%" y="421" width="0.0467%" height="15" fill="rgb(240,178,23)" fg:x="1461" fg:w="1"/><text x="68.4573%" y="431.50"></text></g><g><title>Security`SecTrustDestroy (1 samples, 0.05%)</title><rect x="68.2540%" y="613" width="0.0467%" height="15" fill="rgb(218,11,47)" fg:x="1462" fg:w="1"/><text x="68.5040%" y="623.50"></text></g><g><title>libobjc.A.dylib`-[NSObject dealloc] (1 samples, 0.05%)</title><rect x="68.2540%" y="597" width="0.0467%" height="15" fill="rgb(218,51,51)" fg:x="1462" fg:w="1"/><text x="68.5040%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="68.3007%" y="613" width="0.0934%" height="15" fill="rgb(238,126,27)" fg:x="1463" fg:w="2"/><text x="68.5507%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="68.3007%" y="597" width="0.0934%" height="15" fill="rgb(249,202,22)" fg:x="1463" fg:w="2"/><text x="68.5507%" y="607.50"></text></g><g><title>CoreFoundation`_CFRelease (6 samples, 0.28%)</title><rect x="68.1606%" y="629" width="0.2801%" height="15" fill="rgb(254,195,49)" fg:x="1460" fg:w="6"/><text x="68.4106%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.05%)</title><rect x="68.3940%" y="613" width="0.0467%" height="15" fill="rgb(208,123,14)" fg:x="1465" fg:w="1"/><text x="68.6440%" y="623.50"></text></g><g><title>CoreFoundation`__CFArrayCreateInit (1 samples, 0.05%)</title><rect x="68.4407%" y="581" width="0.0467%" height="15" fill="rgb(224,200,8)" fg:x="1466" fg:w="1"/><text x="68.6907%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (1 samples, 0.05%)</title><rect x="68.4407%" y="565" width="0.0467%" height="15" fill="rgb(217,61,36)" fg:x="1466" fg:w="1"/><text x="68.6907%" y="575.50"></text></g><g><title>Security`SecExport::Key::exportRep (1 samples, 0.05%)</title><rect x="68.4874%" y="581" width="0.0467%" height="15" fill="rgb(206,35,45)" fg:x="1467" fg:w="1"/><text x="68.7374%" y="591.50"></text></g><g><title>Security`impExpExportKeyCommon (1 samples, 0.05%)</title><rect x="68.4874%" y="565" width="0.0467%" height="15" fill="rgb(217,65,33)" fg:x="1467" fg:w="1"/><text x="68.7374%" y="575.50"></text></g><g><title>Security`CSSM_CSP_CreateSymmetricContext (1 samples, 0.05%)</title><rect x="68.4874%" y="549" width="0.0467%" height="15" fill="rgb(222,158,48)" fg:x="1467" fg:w="1"/><text x="68.7374%" y="559.50"></text></g><g><title>Security`HandleContext::Maker::operator() (1 samples, 0.05%)</title><rect x="68.4874%" y="533" width="0.0467%" height="15" fill="rgb(254,2,54)" fg:x="1467" fg:w="1"/><text x="68.7374%" y="543.50"></text></g><g><title>Security`std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt; &gt; &gt;::find&lt;long&gt; (1 samples, 0.05%)</title><rect x="68.4874%" y="517" width="0.0467%" height="15" fill="rgb(250,143,38)" fg:x="1467" fg:w="1"/><text x="68.7374%" y="527.50"></text></g><g><title>Security`SecECKeyCopyPublicBits (3 samples, 0.14%)</title><rect x="68.4407%" y="629" width="0.1401%" height="15" fill="rgb(248,25,0)" fg:x="1466" fg:w="3"/><text x="68.6907%" y="639.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicBytes(__SecKey*, __CFData const**) (3 samples, 0.14%)</title><rect x="68.4407%" y="613" width="0.1401%" height="15" fill="rgb(206,152,27)" fg:x="1466" fg:w="3"/><text x="68.6907%" y="623.50"></text></g><g><title>Security`SecKeychainItemExport (3 samples, 0.14%)</title><rect x="68.4407%" y="597" width="0.1401%" height="15" fill="rgb(240,77,30)" fg:x="1466" fg:w="3"/><text x="68.6907%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="68.5341%" y="581" width="0.0467%" height="15" fill="rgb(231,5,3)" fg:x="1468" fg:w="1"/><text x="68.7841%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="68.5341%" y="565" width="0.0467%" height="15" fill="rgb(207,226,32)" fg:x="1468" fg:w="1"/><text x="68.7841%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="68.5341%" y="549" width="0.0467%" height="15" fill="rgb(222,207,47)" fg:x="1468" fg:w="1"/><text x="68.7841%" y="559.50"></text></g><g><title>CoreFoundation`CFNumberCreate (1 samples, 0.05%)</title><rect x="68.5808%" y="613" width="0.0467%" height="15" fill="rgb(229,115,45)" fg:x="1469" fg:w="1"/><text x="68.8308%" y="623.50"></text></g><g><title>Security`DYLD-STUB$$CFDictionarySetValue (1 samples, 0.05%)</title><rect x="68.6275%" y="613" width="0.0467%" height="15" fill="rgb(224,191,6)" fg:x="1470" fg:w="1"/><text x="68.8775%" y="623.50"></text></g><g><title>CoreFoundation`-[__NSCFConstantString retain] (1 samples, 0.05%)</title><rect x="68.6741%" y="597" width="0.0467%" height="15" fill="rgb(230,227,24)" fg:x="1471" fg:w="1"/><text x="68.9241%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (2 samples, 0.09%)</title><rect x="68.7208%" y="581" width="0.0934%" height="15" fill="rgb(228,80,19)" fg:x="1472" fg:w="2"/><text x="68.9708%" y="591.50"></text></g><g><title>CoreFoundation`__CFStringEqual (2 samples, 0.09%)</title><rect x="68.7208%" y="565" width="0.0934%" height="15" fill="rgb(247,229,0)" fg:x="1472" fg:w="2"/><text x="68.9708%" y="575.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.05%)</title><rect x="68.8142%" y="581" width="0.0467%" height="15" fill="rgb(237,194,15)" fg:x="1474" fg:w="1"/><text x="69.0642%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (4 samples, 0.19%)</title><rect x="68.7208%" y="597" width="0.1867%" height="15" fill="rgb(219,203,20)" fg:x="1472" fg:w="4"/><text x="68.9708%" y="607.50"></text></g><g><title>CoreFoundation`mdict_rehashd (1 samples, 0.05%)</title><rect x="68.8609%" y="581" width="0.0467%" height="15" fill="rgb(234,128,8)" fg:x="1475" fg:w="1"/><text x="69.1109%" y="591.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicKeyDataFromSubjectInfo(__CFData const*) (1 samples, 0.05%)</title><rect x="68.9076%" y="581" width="0.0467%" height="15" fill="rgb(248,202,8)" fg:x="1476" fg:w="1"/><text x="69.1576%" y="591.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.05%)</title><rect x="68.9076%" y="565" width="0.0467%" height="15" fill="rgb(206,104,37)" fg:x="1476" fg:w="1"/><text x="69.1576%" y="575.50"></text></g><g><title>CoreFoundation`CFDataReplaceBytes (2 samples, 0.09%)</title><rect x="69.0009%" y="549" width="0.0934%" height="15" fill="rgb(223,8,27)" fg:x="1478" fg:w="2"/><text x="69.2509%" y="559.50"></text></g><g><title>libsystem_platform.dylib`flsl (1 samples, 0.05%)</title><rect x="69.0476%" y="533" width="0.0467%" height="15" fill="rgb(216,217,28)" fg:x="1479" fg:w="1"/><text x="69.2976%" y="543.50"></text></g><g><title>Security`CSSM_ModuleAttach (1 samples, 0.05%)</title><rect x="69.0943%" y="517" width="0.0467%" height="15" fill="rgb(249,199,1)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="527.50"></text></g><g><title>Security`StandardAttachmentMaker&lt;2u, cssm_spi_csp_funcs, &amp;(CSPNameTable)&gt;::make (1 samples, 0.05%)</title><rect x="69.0943%" y="501" width="0.0467%" height="15" fill="rgb(240,85,17)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="511.50"></text></g><g><title>Security`Attachment::Attachment (1 samples, 0.05%)</title><rect x="69.0943%" y="485" width="0.0467%" height="15" fill="rgb(206,108,45)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="495.50"></text></g><g><title>Security`CSSM_SPI_ModuleAttach__apple_csp (1 samples, 0.05%)</title><rect x="69.0943%" y="469" width="0.0467%" height="15" fill="rgb(245,210,41)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="479.50"></text></g><g><title>Security`Security::CssmPlugin::moduleAttach (1 samples, 0.05%)</title><rect x="69.0943%" y="453" width="0.0467%" height="15" fill="rgb(206,13,37)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="463.50"></text></g><g><title>Security`AppleCSPPlugin::makeSession (1 samples, 0.05%)</title><rect x="69.0943%" y="437" width="0.0467%" height="15" fill="rgb(250,61,18)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="447.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 0.05%)</title><rect x="69.0943%" y="421" width="0.0467%" height="15" fill="rgb(235,172,48)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="431.50"></text></g><g><title>libc++abi.dylib`std::type_info::operator== (1 samples, 0.05%)</title><rect x="69.0943%" y="405" width="0.0467%" height="15" fill="rgb(249,201,17)" fg:x="1480" fg:w="1"/><text x="69.3443%" y="415.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::allocator (1 samples, 0.05%)</title><rect x="69.1410%" y="517" width="0.0467%" height="15" fill="rgb(219,208,6)" fg:x="1481" fg:w="1"/><text x="69.3910%" y="527.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::allocator (1 samples, 0.05%)</title><rect x="69.1410%" y="501" width="0.0467%" height="15" fill="rgb(248,31,23)" fg:x="1481" fg:w="1"/><text x="69.3910%" y="511.50"></text></g><g><title>Security`Security::StLock&lt;Security::Mutex, &amp;(Security::Mutex::lock()), &amp;(Security::Mutex::unlock())&gt;::~StLock (1 samples, 0.05%)</title><rect x="69.1410%" y="485" width="0.0467%" height="15" fill="rgb(245,15,42)" fg:x="1481" fg:w="1"/><text x="69.3910%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.05%)</title><rect x="69.1410%" y="469" width="0.0467%" height="15" fill="rgb(222,217,39)" fg:x="1481" fg:w="1"/><text x="69.3910%" y="479.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (3 samples, 0.14%)</title><rect x="69.0943%" y="533" width="0.1401%" height="15" fill="rgb(210,219,27)" fg:x="1480" fg:w="3"/><text x="69.3443%" y="543.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (1 samples, 0.05%)</title><rect x="69.1877%" y="517" width="0.0467%" height="15" fill="rgb(252,166,36)" fg:x="1482" fg:w="1"/><text x="69.4377%" y="527.50"></text></g><g><title>Security`Security::Mutex::~Mutex (1 samples, 0.05%)</title><rect x="69.1877%" y="501" width="0.0467%" height="15" fill="rgb(245,132,34)" fg:x="1482" fg:w="1"/><text x="69.4377%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.05%)</title><rect x="69.1877%" y="485" width="0.0467%" height="15" fill="rgb(236,54,3)" fg:x="1482" fg:w="1"/><text x="69.4377%" y="495.50"></text></g><g><title>Security`SecKeyGetCSPHandle (4 samples, 0.19%)</title><rect x="69.0943%" y="549" width="0.1867%" height="15" fill="rgb(241,173,43)" fg:x="1480" fg:w="4"/><text x="69.3443%" y="559.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__tree_iterator&lt;Security::CssmClient::CSP, std::__1::__tree_node&lt;Security::CssmClient::CSP, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;Security::CssmClient::CSP, std::__1::less&lt;Security::CssmClient::CSP&gt;, std::__1::allocator&lt;Security::CssmClient::CSP&gt; &gt;::__emplace_unique_key_args&lt;Security::CssmClient::CSP, Security::CssmClient::CSP const&amp;&gt; (1 samples, 0.05%)</title><rect x="69.2344%" y="533" width="0.0467%" height="15" fill="rgb(215,190,9)" fg:x="1483" fg:w="1"/><text x="69.4844%" y="543.50"></text></g><g><title>Security`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;Security::CssmClient::CSP, std::__1::less&lt;Security::CssmClient::CSP&gt;, std::__1::allocator&lt;Security::CssmClient::CSP&gt; &gt;::__find_equal&lt;Security::CssmClient::CSP&gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base (1 samples, 0.05%)</title><rect x="69.2344%" y="517" width="0.0467%" height="15" fill="rgb(242,101,16)" fg:x="1483" fg:w="1"/><text x="69.4844%" y="527.50"></text></g><g><title>Security`secLogObjForScope (1 samples, 0.05%)</title><rect x="69.3277%" y="485" width="0.0467%" height="15" fill="rgb(223,190,21)" fg:x="1485" fg:w="1"/><text x="69.5777%" y="495.50"></text></g><g><title>Security`secLogObjForCFScope (1 samples, 0.05%)</title><rect x="69.3277%" y="469" width="0.0467%" height="15" fill="rgb(215,228,25)" fg:x="1485" fg:w="1"/><text x="69.5777%" y="479.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (1 samples, 0.05%)</title><rect x="69.3277%" y="453" width="0.0467%" height="15" fill="rgb(225,36,22)" fg:x="1485" fg:w="1"/><text x="69.5777%" y="463.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (1 samples, 0.05%)</title><rect x="69.3277%" y="437" width="0.0467%" height="15" fill="rgb(251,106,46)" fg:x="1485" fg:w="1"/><text x="69.5777%" y="447.50"></text></g><g><title>CoreFoundation`-[NSTaggedPointerString hash] (1 samples, 0.05%)</title><rect x="69.3277%" y="421" width="0.0467%" height="15" fill="rgb(208,90,1)" fg:x="1485" fg:w="1"/><text x="69.5777%" y="431.50"></text></g><g><title>Security`CSSM_CSP_CreateSymmetricContext (2 samples, 0.09%)</title><rect x="69.3277%" y="533" width="0.0934%" height="15" fill="rgb(243,10,4)" fg:x="1485" fg:w="2"/><text x="69.5777%" y="543.50"></text></g><g><title>Security`HandleContext::Maker::operator() (2 samples, 0.09%)</title><rect x="69.3277%" y="517" width="0.0934%" height="15" fill="rgb(212,137,27)" fg:x="1485" fg:w="2"/><text x="69.5777%" y="527.50"></text></g><g><title>Security`Security::MappingHandle&lt;long&gt;::MappingHandle (2 samples, 0.09%)</title><rect x="69.3277%" y="501" width="0.0934%" height="15" fill="rgb(231,220,49)" fg:x="1485" fg:w="2"/><text x="69.5777%" y="511.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.05%)</title><rect x="69.3744%" y="485" width="0.0467%" height="15" fill="rgb(237,96,20)" fg:x="1486" fg:w="1"/><text x="69.6244%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="69.3744%" y="469" width="0.0467%" height="15" fill="rgb(239,229,30)" fg:x="1486" fg:w="1"/><text x="69.6244%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="69.3744%" y="453" width="0.0467%" height="15" fill="rgb(219,65,33)" fg:x="1486" fg:w="1"/><text x="69.6244%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="69.3744%" y="437" width="0.0467%" height="15" fill="rgb(243,134,7)" fg:x="1486" fg:w="1"/><text x="69.6244%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="69.3744%" y="421" width="0.0467%" height="15" fill="rgb(216,177,54)" fg:x="1486" fg:w="1"/><text x="69.6244%" y="431.50"></text></g><g><title>Security`CSSM_DeleteContext (1 samples, 0.05%)</title><rect x="69.4211%" y="533" width="0.0467%" height="15" fill="rgb(211,160,20)" fg:x="1487" fg:w="1"/><text x="69.6711%" y="543.50"></text></g><g><title>Security`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt; &gt; &gt;::erase(std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle (1 samples, 0.05%)</title><rect x="69.4211%" y="517" width="0.0467%" height="15" fill="rgb(239,85,39)" fg:x="1487" fg:w="1"/><text x="69.6711%" y="527.50"></text></g><g><title>Security`AppleCSPSession::WrapKey (1 samples, 0.05%)</title><rect x="69.4678%" y="501" width="0.0467%" height="15" fill="rgb(232,125,22)" fg:x="1488" fg:w="1"/><text x="69.7178%" y="511.50"></text></g><g><title>Security`setUpCssmData (1 samples, 0.05%)</title><rect x="69.4678%" y="485" width="0.0467%" height="15" fill="rgb(244,57,34)" fg:x="1488" fg:w="1"/><text x="69.7178%" y="495.50"></text></g><g><title>Security`Security::PluginSession::malloc (1 samples, 0.05%)</title><rect x="69.4678%" y="469" width="0.0467%" height="15" fill="rgb(214,203,32)" fg:x="1488" fg:w="1"/><text x="69.7178%" y="479.50"></text></g><g><title>Security`Security::CssmMemoryFunctionsAllocator::malloc (1 samples, 0.05%)</title><rect x="69.4678%" y="453" width="0.0467%" height="15" fill="rgb(207,58,43)" fg:x="1488" fg:w="1"/><text x="69.7178%" y="463.50"></text></g><g><title>Security`SecExport::Key::exportRep (13 samples, 0.61%)</title><rect x="68.9542%" y="565" width="0.6069%" height="15" fill="rgb(215,193,15)" fg:x="1477" fg:w="13"/><text x="69.2042%" y="575.50"></text></g><g><title>Security`impExpExportKeyCommon (6 samples, 0.28%)</title><rect x="69.2810%" y="549" width="0.2801%" height="15" fill="rgb(232,15,44)" fg:x="1484" fg:w="6"/><text x="69.5310%" y="559.50"></text></g><g><title>Security`CSSM_WrapKey (2 samples, 0.09%)</title><rect x="69.4678%" y="533" width="0.0934%" height="15" fill="rgb(212,3,48)" fg:x="1488" fg:w="2"/><text x="69.7178%" y="543.50"></text></g><g><title>Security`cssm_WrapKey(long, unsigned long long, cssm_context const*, cssm_access_credentials const*, cssm_key const*, cssm_data const*, cssm_key*, unsigned long long) (2 samples, 0.09%)</title><rect x="69.4678%" y="517" width="0.0934%" height="15" fill="rgb(218,128,7)" fg:x="1488" fg:w="2"/><text x="69.7178%" y="527.50"></text></g><g><title>Security`setUpCssmData (1 samples, 0.05%)</title><rect x="69.5145%" y="501" width="0.0467%" height="15" fill="rgb(226,216,39)" fg:x="1489" fg:w="1"/><text x="69.7645%" y="511.50"></text></g><g><title>Security`impExpAddToExportReps(void const*, __CFArray*, unsigned int&amp;, unsigned int&amp;) (1 samples, 0.05%)</title><rect x="69.5612%" y="565" width="0.0467%" height="15" fill="rgb(243,47,51)" fg:x="1490" fg:w="1"/><text x="69.8112%" y="575.50"></text></g><g><title>Security`Security::KeychainCore::SecExportRep::vend (1 samples, 0.05%)</title><rect x="69.5612%" y="549" width="0.0467%" height="15" fill="rgb(241,183,40)" fg:x="1490" fg:w="1"/><text x="69.8112%" y="559.50"></text></g><g><title>Security`SecKeyGetCSSMKey (1 samples, 0.05%)</title><rect x="69.5612%" y="533" width="0.0467%" height="15" fill="rgb(231,217,32)" fg:x="1490" fg:w="1"/><text x="69.8112%" y="543.50"></text></g><g><title>Security`Security::KeychainCore::KeyItem::optional (1 samples, 0.05%)</title><rect x="69.5612%" y="517" width="0.0467%" height="15" fill="rgb(229,61,38)" fg:x="1490" fg:w="1"/><text x="69.8112%" y="527.50"></text></g><g><title>Security`Security::KeychainCore::KeyItem::fromSecKeyRef (1 samples, 0.05%)</title><rect x="69.5612%" y="501" width="0.0467%" height="15" fill="rgb(225,210,5)" fg:x="1490" fg:w="1"/><text x="69.8112%" y="511.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicBytes(__SecKey*, __CFData const**) (16 samples, 0.75%)</title><rect x="68.9076%" y="597" width="0.7470%" height="15" fill="rgb(231,79,45)" fg:x="1476" fg:w="16"/><text x="69.1576%" y="607.50"></text></g><g><title>Security`SecKeychainItemExport (15 samples, 0.70%)</title><rect x="68.9542%" y="581" width="0.7003%" height="15" fill="rgb(224,100,7)" fg:x="1477" fg:w="15"/><text x="69.2042%" y="591.50"></text></g><g><title>Security`impExpKeyForm (1 samples, 0.05%)</title><rect x="69.6078%" y="565" width="0.0467%" height="15" fill="rgb(241,198,18)" fg:x="1491" fg:w="1"/><text x="69.8578%" y="575.50"></text></g><g><title>Security`CSSM_CSP_CreateSymmetricContext (1 samples, 0.05%)</title><rect x="69.7012%" y="549" width="0.0467%" height="15" fill="rgb(252,97,53)" fg:x="1493" fg:w="1"/><text x="69.9512%" y="559.50"></text></g><g><title>Security`Security::StLock&lt;Security::CountingMutex, &amp;(Security::CountingMutex::enter()), &amp;(Security::CountingMutex::exit())&gt;::~StLock (1 samples, 0.05%)</title><rect x="69.7012%" y="533" width="0.0467%" height="15" fill="rgb(220,88,7)" fg:x="1493" fg:w="1"/><text x="69.9512%" y="543.50"></text></g><g><title>Security`Security::CountingMutex::exit (1 samples, 0.05%)</title><rect x="69.7012%" y="517" width="0.0467%" height="15" fill="rgb(213,176,14)" fg:x="1493" fg:w="1"/><text x="69.9512%" y="527.50"></text></g><g><title>Foundation`+[NSThread currentThread] (1 samples, 0.05%)</title><rect x="69.7479%" y="533" width="0.0467%" height="15" fill="rgb(246,73,7)" fg:x="1494" fg:w="1"/><text x="69.9979%" y="543.50"></text></g><g><title>Security`CSSM_UpdateContextAttributes (2 samples, 0.09%)</title><rect x="69.7479%" y="549" width="0.0934%" height="15" fill="rgb(245,64,36)" fg:x="1494" fg:w="2"/><text x="69.9979%" y="559.50"></text></g><g><title>Security`HandleContext::mergeAttributes (1 samples, 0.05%)</title><rect x="69.7946%" y="533" width="0.0467%" height="15" fill="rgb(245,80,10)" fg:x="1495" fg:w="1"/><text x="70.0446%" y="543.50"></text></g><g><title>Security`HandleContext::validateChange (1 samples, 0.05%)</title><rect x="69.7946%" y="517" width="0.0467%" height="15" fill="rgb(232,107,50)" fg:x="1495" fg:w="1"/><text x="70.0446%" y="527.50"></text></g><g><title>Security`cssm_EventNotify(long, unsigned int, unsigned long long, cssm_context const*) (1 samples, 0.05%)</title><rect x="69.7946%" y="501" width="0.0467%" height="15" fill="rgb(253,3,0)" fg:x="1495" fg:w="1"/><text x="70.0446%" y="511.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 0.05%)</title><rect x="69.7946%" y="485" width="0.0467%" height="15" fill="rgb(212,99,53)" fg:x="1495" fg:w="1"/><text x="70.0446%" y="495.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__si_class_type_info::search_below_dst (1 samples, 0.05%)</title><rect x="69.7946%" y="469" width="0.0467%" height="15" fill="rgb(249,111,54)" fg:x="1495" fg:w="1"/><text x="70.0446%" y="479.50"></text></g><g><title>libc++abi.dylib`std::type_info::operator== (1 samples, 0.05%)</title><rect x="69.7946%" y="453" width="0.0467%" height="15" fill="rgb(249,55,30)" fg:x="1495" fg:w="1"/><text x="70.0446%" y="463.50"></text></g><g><title>Security`SecKeychainItemExport (5 samples, 0.23%)</title><rect x="69.6545%" y="597" width="0.2334%" height="15" fill="rgb(237,47,42)" fg:x="1492" fg:w="5"/><text x="69.9045%" y="607.50"></text></g><g><title>Security`SecExport::Key::exportRep (4 samples, 0.19%)</title><rect x="69.7012%" y="581" width="0.1867%" height="15" fill="rgb(211,20,18)" fg:x="1493" fg:w="4"/><text x="69.9512%" y="591.50"></text></g><g><title>Security`impExpExportKeyCommon (4 samples, 0.19%)</title><rect x="69.7012%" y="565" width="0.1867%" height="15" fill="rgb(231,203,46)" fg:x="1493" fg:w="4"/><text x="69.9512%" y="575.50"></text></g><g><title>Security`CSSM_WrapKey (1 samples, 0.05%)</title><rect x="69.8413%" y="549" width="0.0467%" height="15" fill="rgb(237,142,3)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="559.50"></text></g><g><title>Security`cssm_WrapKey(long, unsigned long long, cssm_context const*, cssm_access_credentials const*, cssm_key const*, cssm_data const*, cssm_key*, unsigned long long) (1 samples, 0.05%)</title><rect x="69.8413%" y="533" width="0.0467%" height="15" fill="rgb(241,107,1)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="543.50"></text></g><g><title>Security`AppleCSPSession::WrapKey (1 samples, 0.05%)</title><rect x="69.8413%" y="517" width="0.0467%" height="15" fill="rgb(229,83,13)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="527.50"></text></g><g><title>Security`setUpCssmData (1 samples, 0.05%)</title><rect x="69.8413%" y="501" width="0.0467%" height="15" fill="rgb(241,91,40)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="511.50"></text></g><g><title>Security`Security::PluginSession::malloc (1 samples, 0.05%)</title><rect x="69.8413%" y="485" width="0.0467%" height="15" fill="rgb(225,3,45)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="495.50"></text></g><g><title>Security`Attachment::upcallMalloc (1 samples, 0.05%)</title><rect x="69.8413%" y="469" width="0.0467%" height="15" fill="rgb(244,223,14)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="479.50"></text></g><g><title>Security`Security::CssmMemoryFunctionsAllocator::malloc (1 samples, 0.05%)</title><rect x="69.8413%" y="453" width="0.0467%" height="15" fill="rgb(224,124,37)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="463.50"></text></g><g><title>Security`DefaultAllocator::malloc (1 samples, 0.05%)</title><rect x="69.8413%" y="437" width="0.0467%" height="15" fill="rgb(251,171,30)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="69.8413%" y="421" width="0.0467%" height="15" fill="rgb(236,46,54)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="69.8413%" y="405" width="0.0467%" height="15" fill="rgb(245,213,5)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="69.8413%" y="389" width="0.0467%" height="15" fill="rgb(230,144,27)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="69.8413%" y="373" width="0.0467%" height="15" fill="rgb(220,86,6)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="69.8413%" y="357" width="0.0467%" height="15" fill="rgb(240,20,13)" fg:x="1496" fg:w="1"/><text x="70.0913%" y="367.50"></text></g><g><title>Security`SecECKeyGetNamedCurve (30 samples, 1.40%)</title><rect x="68.5808%" y="629" width="1.4006%" height="15" fill="rgb(217,89,34)" fg:x="1469" fg:w="30"/><text x="68.8308%" y="639.50"></text></g><g><title>Security`SecCDSAKeyCopyAttributeDictionary(__SecKey*) (28 samples, 1.31%)</title><rect x="68.6741%" y="613" width="1.3072%" height="15" fill="rgb(229,13,5)" fg:x="1471" fg:w="28"/><text x="68.9241%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.09%)</title><rect x="69.8880%" y="597" width="0.0934%" height="15" fill="rgb(244,67,35)" fg:x="1497" fg:w="2"/><text x="70.1380%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (1 samples, 0.05%)</title><rect x="70.0280%" y="597" width="0.0467%" height="15" fill="rgb(221,40,2)" fg:x="1500" fg:w="1"/><text x="70.2780%" y="607.50"></text></g><g><title>Security`Security::SecCFObject::allocate (2 samples, 0.09%)</title><rect x="70.0747%" y="581" width="0.0934%" height="15" fill="rgb(237,157,21)" fg:x="1501" fg:w="2"/><text x="70.3247%" y="591.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (2 samples, 0.09%)</title><rect x="70.0747%" y="565" width="0.0934%" height="15" fill="rgb(222,94,11)" fg:x="1501" fg:w="2"/><text x="70.3247%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="70.0747%" y="549" width="0.0934%" height="15" fill="rgb(249,113,6)" fg:x="1501" fg:w="2"/><text x="70.3247%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="70.1214%" y="533" width="0.0467%" height="15" fill="rgb(238,137,36)" fg:x="1502" fg:w="1"/><text x="70.3714%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="70.1214%" y="517" width="0.0467%" height="15" fill="rgb(210,102,26)" fg:x="1502" fg:w="1"/><text x="70.3714%" y="527.50"></text></g><g><title>CoreFoundation`CFRetain (1 samples, 0.05%)</title><rect x="70.1681%" y="565" width="0.0467%" height="15" fill="rgb(218,30,30)" fg:x="1503" fg:w="1"/><text x="70.4181%" y="575.50"></text></g><g><title>Security`SecCertificateCreateItemImplInstance (4 samples, 0.19%)</title><rect x="70.0747%" y="597" width="0.1867%" height="15" fill="rgb(214,67,26)" fg:x="1501" fg:w="4"/><text x="70.3247%" y="607.50"></text></g><g><title>Security`Security::SecCFObject::handle (2 samples, 0.09%)</title><rect x="70.1681%" y="581" width="0.0934%" height="15" fill="rgb(251,9,53)" fg:x="1503" fg:w="2"/><text x="70.4181%" y="591.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.05%)</title><rect x="70.2148%" y="565" width="0.0467%" height="15" fill="rgb(228,204,25)" fg:x="1504" fg:w="1"/><text x="70.4648%" y="575.50"></text></g><g><title>Security`Security::CFClass::refCountForType (1 samples, 0.05%)</title><rect x="70.2148%" y="549" width="0.0467%" height="15" fill="rgb(207,153,8)" fg:x="1504" fg:w="1"/><text x="70.4648%" y="559.50"></text></g><g><title>Security`DYLD-STUB$$os_unfair_lock_unlock (1 samples, 0.05%)</title><rect x="70.2148%" y="533" width="0.0467%" height="15" fill="rgb(242,9,16)" fg:x="1504" fg:w="1"/><text x="70.4648%" y="543.50"></text></g><g><title>Security`Security::CssmClient::CSP::CSP (1 samples, 0.05%)</title><rect x="70.2614%" y="581" width="0.0467%" height="15" fill="rgb(217,211,10)" fg:x="1505" fg:w="1"/><text x="70.5114%" y="591.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::AttachmentImpl (1 samples, 0.05%)</title><rect x="70.2614%" y="565" width="0.0467%" height="15" fill="rgb(219,228,52)" fg:x="1505" fg:w="1"/><text x="70.5114%" y="575.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::ObjectImpl (1 samples, 0.05%)</title><rect x="70.2614%" y="549" width="0.0467%" height="15" fill="rgb(231,92,29)" fg:x="1505" fg:w="1"/><text x="70.5114%" y="559.50"></text></g><g><title>Security`CL_oidToAlg(cssm_data const&amp;) (1 samples, 0.05%)</title><rect x="70.3548%" y="485" width="0.0467%" height="15" fill="rgb(232,8,23)" fg:x="1507" fg:w="1"/><text x="70.6048%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="70.3548%" y="469" width="0.0467%" height="15" fill="rgb(216,211,34)" fg:x="1507" fg:w="1"/><text x="70.6048%" y="479.50"></text></g><g><title>Security`Attachment::tryLock (1 samples, 0.05%)</title><rect x="70.4015%" y="469" width="0.0467%" height="15" fill="rgb(236,151,0)" fg:x="1508" fg:w="1"/><text x="70.6515%" y="479.50"></text></g><g><title>Security`SEC_ASN1DecoderStart (1 samples, 0.05%)</title><rect x="70.4482%" y="389" width="0.0467%" height="15" fill="rgb(209,168,3)" fg:x="1509" fg:w="1"/><text x="70.6982%" y="399.50"></text></g><g><title>Security`PORT_NewArena (1 samples, 0.05%)</title><rect x="70.4482%" y="373" width="0.0467%" height="15" fill="rgb(208,129,28)" fg:x="1509" fg:w="1"/><text x="70.6982%" y="383.50"></text></g><g><title>Security`PORT_ZAlloc (1 samples, 0.05%)</title><rect x="70.4482%" y="357" width="0.0467%" height="15" fill="rgb(229,78,22)" fg:x="1509" fg:w="1"/><text x="70.6982%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="70.4482%" y="341" width="0.0467%" height="15" fill="rgb(228,187,13)" fg:x="1509" fg:w="1"/><text x="70.6982%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="70.4482%" y="325" width="0.0467%" height="15" fill="rgb(240,119,24)" fg:x="1509" fg:w="1"/><text x="70.6982%" y="335.50"></text></g><g><title>Security`SEC_ASN1Decode (2 samples, 0.09%)</title><rect x="70.4482%" y="405" width="0.0934%" height="15" fill="rgb(209,194,42)" fg:x="1509" fg:w="2"/><text x="70.6982%" y="415.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (1 samples, 0.05%)</title><rect x="70.4949%" y="389" width="0.0467%" height="15" fill="rgb(247,200,46)" fg:x="1510" fg:w="1"/><text x="70.7449%" y="399.50"></text></g><g><title>Security`feeAlgIdToDepth(SecAsn1AlgId const*, unsigned int*) (1 samples, 0.05%)</title><rect x="70.5415%" y="405" width="0.0467%" height="15" fill="rgb(218,76,16)" fg:x="1511" fg:w="1"/><text x="70.7915%" y="415.50"></text></g><g><title>Security`curveOidToFeeDepth(cssm_data const*, unsigned int*) (1 samples, 0.05%)</title><rect x="70.5415%" y="389" width="0.0467%" height="15" fill="rgb(225,21,48)" fg:x="1511" fg:w="1"/><text x="70.7915%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="70.5415%" y="373" width="0.0467%" height="15" fill="rgb(239,223,50)" fg:x="1511" fg:w="1"/><text x="70.7915%" y="383.50"></text></g><g><title>Security`arrayToGiant (1 samples, 0.05%)</title><rect x="70.5882%" y="373" width="0.0467%" height="15" fill="rgb(244,45,21)" fg:x="1512" fg:w="1"/><text x="70.8382%" y="383.50"></text></g><g><title>Security`gcompg (1 samples, 0.05%)</title><rect x="70.6349%" y="357" width="0.0467%" height="15" fill="rgb(232,33,43)" fg:x="1513" fg:w="1"/><text x="70.8849%" y="367.50"></text></g><g><title>Security`grammarSquare (2 samples, 0.09%)</title><rect x="70.6816%" y="341" width="0.0934%" height="15" fill="rgb(209,8,3)" fg:x="1514" fg:w="2"/><text x="70.9316%" y="351.50"></text></g><g><title>Security`gshiftleft (1 samples, 0.05%)</title><rect x="70.7750%" y="341" width="0.0467%" height="15" fill="rgb(214,25,53)" fg:x="1516" fg:w="1"/><text x="71.0250%" y="351.50"></text></g><g><title>Security`mulg (2 samples, 0.09%)</title><rect x="70.8217%" y="341" width="0.0934%" height="15" fill="rgb(254,186,54)" fg:x="1517" fg:w="2"/><text x="71.0717%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.05%)</title><rect x="70.9150%" y="341" width="0.0467%" height="15" fill="rgb(208,174,49)" fg:x="1519" fg:w="1"/><text x="71.1650%" y="351.50"></text></g><g><title>Security`CryptKit::rawCssmKeyToFee (12 samples, 0.56%)</title><rect x="70.4482%" y="421" width="0.5602%" height="15" fill="rgb(233,191,51)" fg:x="1509" fg:w="12"/><text x="70.6982%" y="431.50"></text></g><g><title>Security`feePubKeyInitFromECDSAPubBlob (9 samples, 0.42%)</title><rect x="70.5882%" y="405" width="0.4202%" height="15" fill="rgb(222,134,10)" fg:x="1512" fg:w="9"/><text x="70.8382%" y="415.50"></text></g><g><title>Security`curveParamsForDepth (9 samples, 0.42%)</title><rect x="70.5882%" y="389" width="0.4202%" height="15" fill="rgb(230,226,20)" fg:x="1512" fg:w="9"/><text x="70.8382%" y="399.50"></text></g><g><title>Security`curveParamsInferFields (8 samples, 0.37%)</title><rect x="70.6349%" y="373" width="0.3735%" height="15" fill="rgb(251,111,25)" fg:x="1513" fg:w="8"/><text x="70.8849%" y="383.50"></text></g><g><title>Security`make_recip (7 samples, 0.33%)</title><rect x="70.6816%" y="357" width="0.3268%" height="15" fill="rgb(224,40,46)" fg:x="1514" fg:w="7"/><text x="70.9316%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="70.9617%" y="341" width="0.0467%" height="15" fill="rgb(236,108,47)" fg:x="1520" fg:w="1"/><text x="71.2117%" y="351.50"></text></g><g><title>Security`CryptKit::FEEKeyInfoProvider::QueryKeySizeInBits (13 samples, 0.61%)</title><rect x="70.4482%" y="437" width="0.6069%" height="15" fill="rgb(234,93,0)" fg:x="1509" fg:w="13"/><text x="70.6982%" y="447.50"></text></g><g><title>Security`fmalloc (1 samples, 0.05%)</title><rect x="71.0084%" y="421" width="0.0467%" height="15" fill="rgb(224,213,32)" fg:x="1521" fg:w="1"/><text x="71.2584%" y="431.50"></text></g><g><title>Security`AppleCSPSession::getKeySize (15 samples, 0.70%)</title><rect x="70.4482%" y="453" width="0.7003%" height="15" fill="rgb(251,11,48)" fg:x="1509" fg:w="15"/><text x="70.6982%" y="463.50"></text></g><g><title>Security`feePubKeyFree (2 samples, 0.09%)</title><rect x="71.0551%" y="437" width="0.0934%" height="15" fill="rgb(236,173,5)" fg:x="1522" fg:w="2"/><text x="71.3051%" y="447.50"></text></g><g><title>Security`freeCurveParams (2 samples, 0.09%)</title><rect x="71.0551%" y="421" width="0.0934%" height="15" fill="rgb(230,95,12)" fg:x="1522" fg:w="2"/><text x="71.3051%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="71.1018%" y="405" width="0.0467%" height="15" fill="rgb(232,209,1)" fg:x="1523" fg:w="1"/><text x="71.3518%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="71.1018%" y="389" width="0.0467%" height="15" fill="rgb(232,6,1)" fg:x="1523" fg:w="1"/><text x="71.3518%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="71.1018%" y="373" width="0.0467%" height="15" fill="rgb(210,224,50)" fg:x="1523" fg:w="1"/><text x="71.3518%" y="383.50"></text></g><g><title>Security`CSSM_QueryKeySizeInBits (17 samples, 0.79%)</title><rect x="70.4015%" y="485" width="0.7937%" height="15" fill="rgb(228,127,35)" fg:x="1508" fg:w="17"/><text x="70.6515%" y="495.50"></text></g><g><title>Security`cssm_QueryKeySizeInBits(long, unsigned long long, cssm_context const*, cssm_key const*, cssm_key_size*) (16 samples, 0.75%)</title><rect x="70.4482%" y="469" width="0.7470%" height="15" fill="rgb(245,102,45)" fg:x="1509" fg:w="16"/><text x="70.6982%" y="479.50"></text></g><g><title>Security`CryptKit::FEEKeyInfoProvider::QueryKeySizeInBits (1 samples, 0.05%)</title><rect x="71.1485%" y="453" width="0.0467%" height="15" fill="rgb(214,1,49)" fg:x="1524" fg:w="1"/><text x="71.3985%" y="463.50"></text></g><g><title>Security`PORT_NewArena (1 samples, 0.05%)</title><rect x="71.1951%" y="453" width="0.0467%" height="15" fill="rgb(226,163,40)" fg:x="1525" fg:w="1"/><text x="71.4451%" y="463.50"></text></g><g><title>Security`SEC_ASN1EncoderUpdate (1 samples, 0.05%)</title><rect x="71.2418%" y="453" width="0.0467%" height="15" fill="rgb(239,212,28)" fg:x="1526" fg:w="1"/><text x="71.4918%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="71.2418%" y="437" width="0.0467%" height="15" fill="rgb(220,20,13)" fg:x="1526" fg:w="1"/><text x="71.4918%" y="447.50"></text></g><g><title>Security`SecNssEncodeItemOdata(void const*, SecAsn1Template_struct const*, Security::CssmOwnedData&amp;) (3 samples, 0.14%)</title><rect x="71.1951%" y="485" width="0.1401%" height="15" fill="rgb(210,164,35)" fg:x="1525" fg:w="3"/><text x="71.4451%" y="495.50"></text></g><g><title>Security`SEC_ASN1Encode (3 samples, 0.14%)</title><rect x="71.1951%" y="469" width="0.1401%" height="15" fill="rgb(248,109,41)" fg:x="1525" fg:w="3"/><text x="71.4451%" y="479.50"></text></g><g><title>Security`sec_asn1e_encode_item_count (1 samples, 0.05%)</title><rect x="71.2885%" y="453" width="0.0467%" height="15" fill="rgb(238,23,50)" fg:x="1527" fg:w="1"/><text x="71.5385%" y="463.50"></text></g><g><title>Security`AppleX509CLSession::CertGetFirstCachedFieldValue (22 samples, 1.03%)</title><rect x="70.3548%" y="533" width="1.0271%" height="15" fill="rgb(211,48,49)" fg:x="1507" fg:w="22"/><text x="70.6048%" y="543.50"></text></g><g><title>Security`getField_PublicKeyStruct(DecodedItem&amp;, unsigned int, unsigned int&amp;, Security::CssmOwnedData&amp;) (22 samples, 1.03%)</title><rect x="70.3548%" y="517" width="1.0271%" height="15" fill="rgb(223,36,21)" fg:x="1507" fg:w="22"/><text x="70.6048%" y="527.50"></text></g><g><title>Security`CL_extractCSSMKeyNSS(SecAsn1PubKeyInfo const&amp;, Security::Allocator&amp;, DecodedCert const*) (22 samples, 1.03%)</title><rect x="70.3548%" y="501" width="1.0271%" height="15" fill="rgb(207,123,46)" fg:x="1507" fg:w="22"/><text x="70.6048%" y="511.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.05%)</title><rect x="71.3352%" y="485" width="0.0467%" height="15" fill="rgb(240,218,32)" fg:x="1528" fg:w="1"/><text x="71.5852%" y="495.50"></text></g><g><title>Security`CSSM_CL_CertGetFirstCachedFieldValue (24 samples, 1.12%)</title><rect x="70.3081%" y="565" width="1.1204%" height="15" fill="rgb(252,5,43)" fg:x="1506" fg:w="24"/><text x="70.5581%" y="575.50"></text></g><g><title>Security`cssm_CertGetFirstCachedFieldValue(long, long, cssm_data const*, long*, unsigned int*, cssm_data**) (24 samples, 1.12%)</title><rect x="70.3081%" y="549" width="1.1204%" height="15" fill="rgb(252,84,19)" fg:x="1506" fg:w="24"/><text x="70.5581%" y="559.50"></text></g><g><title>libc+ (1 samples, 0.05%)</title><rect x="71.3819%" y="533" width="0.0467%" height="15" fill="rgb(243,152,39)" fg:x="1529" fg:w="1"/><text x="71.6319%" y="543.50"></text></g><g><title>Security`Security::CssmMemoryFunctionsAllocator::realloc (1 samples, 0.05%)</title><rect x="71.4286%" y="421" width="0.0467%" height="15" fill="rgb(234,160,15)" fg:x="1530" fg:w="1"/><text x="71.6786%" y="431.50"></text></g><g><title>Security`DefaultAllocator::realloc (1 samples, 0.05%)</title><rect x="71.4286%" y="405" width="0.0467%" height="15" fill="rgb(237,34,20)" fg:x="1530" fg:w="1"/><text x="71.6786%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.05%)</title><rect x="71.4286%" y="389" width="0.0467%" height="15" fill="rgb(229,97,13)" fg:x="1530" fg:w="1"/><text x="71.6786%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.05%)</title><rect x="71.4286%" y="373" width="0.0467%" height="15" fill="rgb(234,71,50)" fg:x="1530" fg:w="1"/><text x="71.6786%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="71.4286%" y="357" width="0.0467%" height="15" fill="rgb(253,155,4)" fg:x="1530" fg:w="1"/><text x="71.6786%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 0.05%)</title><rect x="71.4286%" y="341" width="0.0467%" height="15" fill="rgb(222,185,37)" fg:x="1530" fg:w="1"/><text x="71.6786%" y="351.50"></text></g><g><title>Security`DecodedExtensions::addExtension (2 samples, 0.09%)</title><rect x="71.4286%" y="469" width="0.0934%" height="15" fill="rgb(251,177,13)" fg:x="1530" fg:w="2"/><text x="71.6786%" y="479.50"></text></g><g><title>Security`Security::PluginSession::realloc (2 samples, 0.09%)</title><rect x="71.4286%" y="453" width="0.0934%" height="15" fill="rgb(250,179,40)" fg:x="1530" fg:w="2"/><text x="71.6786%" y="463.50"></text></g><g><title>Security`Attachment::upcallRealloc (2 samples, 0.09%)</title><rect x="71.4286%" y="437" width="0.0934%" height="15" fill="rgb(242,44,2)" fg:x="1530" fg:w="2"/><text x="71.6786%" y="447.50"></text></g><g><title>Security`Security::MappingHandle&lt;long&gt;::State::find (1 samples, 0.05%)</title><rect x="71.4753%" y="421" width="0.0467%" height="15" fill="rgb(216,177,13)" fg:x="1531" fg:w="1"/><text x="71.7253%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.05%)</title><rect x="71.4753%" y="405" width="0.0467%" height="15" fill="rgb(216,106,43)" fg:x="1531" fg:w="1"/><text x="71.7253%" y="415.50"></text></g><g><title>Security`SEC_ASN1DecoderFinish (1 samples, 0.05%)</title><rect x="71.5219%" y="453" width="0.0467%" height="15" fill="rgb(216,183,2)" fg:x="1532" fg:w="1"/><text x="71.7719%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.05%)</title><rect x="71.5219%" y="437" width="0.0467%" height="15" fill="rgb(249,75,3)" fg:x="1532" fg:w="1"/><text x="71.7719%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.05%)</title><rect x="71.5686%" y="373" width="0.0467%" height="15" fill="rgb(219,67,39)" fg:x="1533" fg:w="1"/><text x="71.8186%" y="383.50"></text></g><g><title>Security`SEC_ASN1DecoderStart (2 samples, 0.09%)</title><rect x="71.5686%" y="453" width="0.0934%" height="15" fill="rgb(253,228,2)" fg:x="1533" fg:w="2"/><text x="71.8186%" y="463.50"></text></g><g><title>Security`PORT_NewArena (2 samples, 0.09%)</title><rect x="71.5686%" y="437" width="0.0934%" height="15" fill="rgb(235,138,27)" fg:x="1533" fg:w="2"/><text x="71.8186%" y="447.50"></text></g><g><title>Security`PORT_ZAlloc (2 samples, 0.09%)</title><rect x="71.5686%" y="421" width="0.0934%" height="15" fill="rgb(236,97,51)" fg:x="1533" fg:w="2"/><text x="71.8186%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.09%)</title><rect x="71.5686%" y="405" width="0.0934%" height="15" fill="rgb(240,80,30)" fg:x="1533" fg:w="2"/><text x="71.8186%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="71.5686%" y="389" width="0.0934%" height="15" fill="rgb(230,178,19)" fg:x="1533" fg:w="2"/><text x="71.8186%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="71.6153%" y="373" width="0.0467%" height="15" fill="rgb(210,190,27)" fg:x="1534" fg:w="1"/><text x="71.8653%" y="383.50"></text></g><g><title>Security`PORT_ArenaAlloc (1 samples, 0.05%)</title><rect x="71.9888%" y="437" width="0.0467%" height="15" fill="rgb(222,107,31)" fg:x="1542" fg:w="1"/><text x="72.2388%" y="447.50"></text></g><g><title>Security`sec_asn1d_zalloc (3 samples, 0.14%)</title><rect x="72.0355%" y="437" width="0.1401%" height="15" fill="rgb(216,127,34)" fg:x="1543" fg:w="3"/><text x="72.2855%" y="447.50"></text></g><g><title>Security`PORT_ArenaAlloc (1 samples, 0.05%)</title><rect x="72.1289%" y="421" width="0.0467%" height="15" fill="rgb(234,116,52)" fg:x="1545" fg:w="1"/><text x="72.3789%" y="431.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (12 samples, 0.56%)</title><rect x="71.6620%" y="453" width="0.5602%" height="15" fill="rgb(222,124,15)" fg:x="1535" fg:w="12"/><text x="71.9120%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="72.1755%" y="437" width="0.0467%" height="15" fill="rgb(231,179,28)" fg:x="1546" fg:w="1"/><text x="72.4255%" y="447.50"></text></g><g><title>Security`DecodedExtensions::decodeFromNss (18 samples, 0.84%)</title><rect x="71.4286%" y="485" width="0.8403%" height="15" fill="rgb(226,93,45)" fg:x="1530" fg:w="18"/><text x="71.6786%" y="495.50"></text></g><g><title>Security`SEC_ASN1Decode (16 samples, 0.75%)</title><rect x="71.5219%" y="469" width="0.7470%" height="15" fill="rgb(215,8,51)" fg:x="1532" fg:w="16"/><text x="71.7719%" y="479.50"></text></g><g><title>Security`sec_asn1d_record_any_header (1 samples, 0.05%)</title><rect x="72.2222%" y="453" width="0.0467%" height="15" fill="rgb(223,106,5)" fg:x="1547" fg:w="1"/><text x="72.4722%" y="463.50"></text></g><g><title>Security`SEC_ASN1DecoderFinish (2 samples, 0.09%)</title><rect x="72.2689%" y="469" width="0.0934%" height="15" fill="rgb(250,191,5)" fg:x="1548" fg:w="2"/><text x="72.5189%" y="479.50"></text></g><g><title>Security`PORT_FreeArena (2 samples, 0.09%)</title><rect x="72.2689%" y="453" width="0.0934%" height="15" fill="rgb(242,132,44)" fg:x="1548" fg:w="2"/><text x="72.5189%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.09%)</title><rect x="72.2689%" y="437" width="0.0934%" height="15" fill="rgb(251,152,29)" fg:x="1548" fg:w="2"/><text x="72.5189%" y="447.50"></text></g><g><title>Security`SEC_ASN1DecoderStart (1 samples, 0.05%)</title><rect x="72.3623%" y="469" width="0.0467%" height="15" fill="rgb(218,179,5)" fg:x="1550" fg:w="1"/><text x="72.6123%" y="479.50"></text></g><g><title>Security`sec_asn1d_push_state (1 samples, 0.05%)</title><rect x="72.3623%" y="453" width="0.0467%" height="15" fill="rgb(227,67,19)" fg:x="1550" fg:w="1"/><text x="72.6123%" y="463.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (2 samples, 0.09%)</title><rect x="72.6424%" y="453" width="0.0934%" height="15" fill="rgb(233,119,31)" fg:x="1556" fg:w="2"/><text x="72.8924%" y="463.50"></text></g><g><title>Security`sec_asn1d_check_and_subtract_length (1 samples, 0.05%)</title><rect x="72.7358%" y="453" width="0.0467%" height="15" fill="rgb(241,120,22)" fg:x="1558" fg:w="1"/><text x="72.9858%" y="463.50"></text></g><g><title>Security`sec_asn1d_push_state (1 samples, 0.05%)</title><rect x="72.7824%" y="453" width="0.0467%" height="15" fill="rgb(224,102,30)" fg:x="1559" fg:w="1"/><text x="73.0324%" y="463.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.05%)</title><rect x="72.8291%" y="453" width="0.0467%" height="15" fill="rgb(210,164,37)" fg:x="1560" fg:w="1"/><text x="73.0791%" y="463.50"></text></g><g><title>Security`DecodedCert::DecodedCert (32 samples, 1.49%)</title><rect x="71.4286%" y="501" width="1.4939%" height="15" fill="rgb(226,191,16)" fg:x="1530" fg:w="32"/><text x="71.6786%" y="511.50"></text></g><g><title>Security`SEC_ASN1Decode (14 samples, 0.65%)</title><rect x="72.2689%" y="485" width="0.6536%" height="15" fill="rgb(214,40,45)" fg:x="1548" fg:w="14"/><text x="72.5189%" y="495.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (11 samples, 0.51%)</title><rect x="72.4090%" y="469" width="0.5135%" height="15" fill="rgb(244,29,26)" fg:x="1551" fg:w="11"/><text x="72.6590%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="72.8758%" y="453" width="0.0467%" height="15" fill="rgb(216,16,5)" fg:x="1561" fg:w="1"/><text x="73.1258%" y="463.50"></text></g><g><title>Security`std::__1::__tree&lt;std::__1::__value_type&lt;long, CLCachedEntry*&gt;, std::__1::__map_value_compare&lt;long, std::__1::__value_type&lt;long, CLCachedEntry*&gt;, std::__1::less&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;long, CLCachedEntry*&gt; &gt; &gt;::__insert_node_at(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*, std::__1::__tree_node_base&lt;void*&gt;*&amp;, std::__1::__tree_node_base (1 samples, 0.05%)</title><rect x="72.9225%" y="469" width="0.0467%" height="15" fill="rgb(249,76,35)" fg:x="1562" fg:w="1"/><text x="73.1725%" y="479.50"></text></g><g><title>Security`CSSM_CL_CertCache (34 samples, 1.59%)</title><rect x="71.4286%" y="549" width="1.5873%" height="15" fill="rgb(207,11,44)" fg:x="1530" fg:w="34"/><text x="71.6786%" y="559.50"></text></g><g><title>Security`cssm_CertCache(long, cssm_data const*, long*) (34 samples, 1.59%)</title><rect x="71.4286%" y="533" width="1.5873%" height="15" fill="rgb(228,190,49)" fg:x="1530" fg:w="34"/><text x="71.6786%" y="543.50"></text></g><g><title>Security`AppleX509CLSession::CertCache (34 samples, 1.59%)</title><rect x="71.4286%" y="517" width="1.5873%" height="15" fill="rgb(214,173,12)" fg:x="1530" fg:w="34"/><text x="71.6786%" y="527.50"></text></g><g><title>Security`LockedMap&lt;long, CLCachedEntry&gt;::addEntry (2 samples, 0.09%)</title><rect x="72.9225%" y="501" width="0.0934%" height="15" fill="rgb(218,26,35)" fg:x="1562" fg:w="2"/><text x="73.1725%" y="511.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;long, CLCachedEntry*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;long, CLCachedEntry*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;long, CLCachedEntry*&gt;, std::__1::__map_value_compare&lt;long, std::__1::__value_type&lt;long, CLCachedEntry*&gt;, std::__1::less&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;long, CLCachedEntry*&gt; &gt; &gt;::__emplace_unique_key_args&lt;long, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;long const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(long const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;long const&amp;&gt;&amp;&amp;, std::__1::tuple (2 samples, 0.09%)</title><rect x="72.9225%" y="485" width="0.0934%" height="15" fill="rgb(220,200,19)" fg:x="1562" fg:w="2"/><text x="73.1725%" y="495.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.05%)</title><rect x="72.9692%" y="469" width="0.0467%" height="15" fill="rgb(239,95,49)" fg:x="1563" fg:w="1"/><text x="73.2192%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="72.9692%" y="453" width="0.0467%" height="15" fill="rgb(235,85,53)" fg:x="1563" fg:w="1"/><text x="73.2192%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="72.9692%" y="437" width="0.0467%" height="15" fill="rgb(233,133,31)" fg:x="1563" fg:w="1"/><text x="73.2192%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="72.9692%" y="421" width="0.0467%" height="15" fill="rgb(218,25,20)" fg:x="1563" fg:w="1"/><text x="73.2192%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="72.9692%" y="405" width="0.0467%" height="15" fill="rgb(252,210,38)" fg:x="1563" fg:w="1"/><text x="73.2192%" y="415.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::certHandle (35 samples, 1.63%)</title><rect x="71.4286%" y="565" width="1.6340%" height="15" fill="rgb(242,134,21)" fg:x="1530" fg:w="35"/><text x="71.6786%" y="575.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (1 samples, 0.05%)</title><rect x="73.0159%" y="549" width="0.0467%" height="15" fill="rgb(213,28,48)" fg:x="1564" fg:w="1"/><text x="73.2659%" y="559.50"></text></g><g><title>Security`Security::CssmClient::CLImpl&amp; Security::CssmClient::Object::impl&lt;Security::CssmClient::CLImpl&gt; (1 samples, 0.05%)</title><rect x="73.0159%" y="533" width="0.0467%" height="15" fill="rgb(250,196,2)" fg:x="1564" fg:w="1"/><text x="73.2659%" y="543.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__class_type_info::process_static_type_above_dst (1 samples, 0.05%)</title><rect x="73.0159%" y="517" width="0.0467%" height="15" fill="rgb(227,5,17)" fg:x="1564" fg:w="1"/><text x="73.2659%" y="527.50"></text></g><g><title>Security`StandardAttachmentMaker&lt;8u, cssm_spi_cl_funcs, &amp;(CLNameTable)&gt;::make (2 samples, 0.09%)</title><rect x="73.1092%" y="517" width="0.0934%" height="15" fill="rgb(221,226,24)" fg:x="1566" fg:w="2"/><text x="73.3592%" y="527.50"></text></g><g><title>Security`Attachment::Attachment (1 samples, 0.05%)</title><rect x="73.1559%" y="501" width="0.0467%" height="15" fill="rgb(211,5,48)" fg:x="1567" fg:w="1"/><text x="73.4059%" y="511.50"></text></g><g><title>Security`CSSM_SPI_ModuleAttach__apple_x509_cl (1 samples, 0.05%)</title><rect x="73.1559%" y="485" width="0.0467%" height="15" fill="rgb(219,150,6)" fg:x="1567" fg:w="1"/><text x="73.4059%" y="495.50"></text></g><g><title>Security`Security::CssmPlugin::moduleAttach (1 samples, 0.05%)</title><rect x="73.1559%" y="469" width="0.0467%" height="15" fill="rgb(251,46,16)" fg:x="1567" fg:w="1"/><text x="73.4059%" y="479.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, Security::PluginSession*&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, Security::PluginSession*&gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, Security::PluginSession*&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, Security::PluginSession*&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, Security::PluginSession*&gt; &gt; &gt;::__emplace_unique_key_args&lt;long, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;long const&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(long const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;long const&amp;&gt;&amp;&amp;, std::__1::tuple (1 samples, 0.05%)</title><rect x="73.1559%" y="453" width="0.0467%" height="15" fill="rgb(220,204,40)" fg:x="1567" fg:w="1"/><text x="73.4059%" y="463.50"></text></g><g><title>Security`CSSM_ModuleAttach (4 samples, 0.19%)</title><rect x="73.0626%" y="533" width="0.1867%" height="15" fill="rgb(211,85,2)" fg:x="1565" fg:w="4"/><text x="73.3126%" y="543.50"></text></g><g><title>Security`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt;, std::__1::__map_value_compare&lt;Security::Guid, std::__1::__value_type&lt;Security::Guid, Module*&gt;, std::__1::less&lt;Security::Guid&gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;Security::Guid, Module*&gt; &gt; &gt;::find&lt;Security::Guid&gt; (1 samples, 0.05%)</title><rect x="73.2026%" y="517" width="0.0467%" height="15" fill="rgb(229,17,7)" fg:x="1568" fg:w="1"/><text x="73.4526%" y="527.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl&amp; Security::CssmClient::Object::impl&lt;Security::CssmClient::ModuleImpl&gt; (1 samples, 0.05%)</title><rect x="73.2493%" y="533" width="0.0467%" height="15" fill="rgb(239,72,28)" fg:x="1569" fg:w="1"/><text x="73.4993%" y="543.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.05%)</title><rect x="73.2960%" y="405" width="0.0467%" height="15" fill="rgb(230,47,54)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="415.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.05%)</title><rect x="73.2960%" y="389" width="0.0467%" height="15" fill="rgb(214,50,8)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="399.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.05%)</title><rect x="73.2960%" y="373" width="0.0467%" height="15" fill="rgb(216,198,43)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="383.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.05%)</title><rect x="73.2960%" y="357" width="0.0467%" height="15" fill="rgb(234,20,35)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="367.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.05%)</title><rect x="73.2960%" y="341" width="0.0467%" height="15" fill="rgb(254,45,19)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="351.50"></text></g><g><title>Security`Security::MetaRecord::unpackRecord (1 samples, 0.05%)</title><rect x="73.2960%" y="325" width="0.0467%" height="15" fill="rgb(219,14,44)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="335.50"></text></g><g><title>Security`Security::MetaAttribute::unpackAttribute (1 samples, 0.05%)</title><rect x="73.2960%" y="309" width="0.0467%" height="15" fill="rgb(217,220,26)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="319.50"></text></g><g><title>Security`Security::TrackingAllocator::malloc (1 samples, 0.05%)</title><rect x="73.2960%" y="293" width="0.0467%" height="15" fill="rgb(213,158,28)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="303.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__tree_iterator&lt;void*, std::__1::__tree_node&lt;void*, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::__emplace_unique_key_args&lt;void*, void* const&amp;&gt; (1 samples, 0.05%)</title><rect x="73.2960%" y="277" width="0.0467%" height="15" fill="rgb(252,51,52)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="287.50"></text></g><g><title>Security`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (1 samples, 0.05%)</title><rect x="73.2960%" y="261" width="0.0467%" height="15" fill="rgb(246,89,16)" fg:x="1570" fg:w="1"/><text x="73.5460%" y="271.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::objDbHand (1 samples, 0.05%)</title><rect x="73.3427%" y="389" width="0.0467%" height="15" fill="rgb(216,158,49)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="399.50"></text></g><g><title>Security`Security::MDSSession::dbOpen (1 samples, 0.05%)</title><rect x="73.3427%" y="373" width="0.0467%" height="15" fill="rgb(236,107,19)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="383.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.05%)</title><rect x="73.3427%" y="357" width="0.0467%" height="15" fill="rgb(228,185,30)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="367.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.05%)</title><rect x="73.3427%" y="341" width="0.0467%" height="15" fill="rgb(246,134,8)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="351.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.05%)</title><rect x="73.3427%" y="325" width="0.0467%" height="15" fill="rgb(214,143,50)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="335.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.05%)</title><rect x="73.3427%" y="309" width="0.0467%" height="15" fill="rgb(228,75,8)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="319.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.05%)</title><rect x="73.3427%" y="293" width="0.0467%" height="15" fill="rgb(207,175,4)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="303.50"></text></g><g><title>Security`Security::AtomicBufferedFile::open (1 samples, 0.05%)</title><rect x="73.3427%" y="277" width="0.0467%" height="15" fill="rgb(205,108,24)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="287.50"></text></g><g><title>Security`Security::AtomicFile::ropen (1 samples, 0.05%)</title><rect x="73.3427%" y="261" width="0.0467%" height="15" fill="rgb(244,120,49)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.05%)</title><rect x="73.3427%" y="245" width="0.0467%" height="15" fill="rgb(223,47,38)" fg:x="1571" fg:w="1"/><text x="73.5927%" y="255.50"></text></g><g><title>Security`Security::MDSAttrParser::parseAttrs (1 samples, 0.05%)</title><rect x="73.3894%" y="357" width="0.0467%" height="15" fill="rgb(229,179,11)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="367.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLsOfType (1 samples, 0.05%)</title><rect x="73.3894%" y="341" width="0.0467%" height="15" fill="rgb(231,122,1)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="351.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.05%)</title><rect x="73.3894%" y="325" width="0.0467%" height="15" fill="rgb(245,119,9)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="335.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.05%)</title><rect x="73.3894%" y="309" width="0.0467%" height="15" fill="rgb(241,163,25)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="319.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.05%)</title><rect x="73.3894%" y="293" width="0.0467%" height="15" fill="rgb(217,214,3)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="303.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.05%)</title><rect x="73.3894%" y="277" width="0.0467%" height="15" fill="rgb(240,86,28)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="287.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.05%)</title><rect x="73.3894%" y="261" width="0.0467%" height="15" fill="rgb(215,47,9)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="271.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.05%)</title><rect x="73.3894%" y="245" width="0.0467%" height="15" fill="rgb(252,25,45)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="255.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (1 samples, 0.05%)</title><rect x="73.3894%" y="229" width="0.0467%" height="15" fill="rgb(251,164,9)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.05%)</title><rect x="73.3894%" y="213" width="0.0467%" height="15" fill="rgb(233,194,0)" fg:x="1572" fg:w="1"/><text x="73.6394%" y="223.50"></text></g><g><title>Security`Security::MetaRecord::unpackRecord (1 samples, 0.05%)</title><rect x="73.4360%" y="245" width="0.0467%" height="15" fill="rgb(249,111,24)" fg:x="1573" fg:w="1"/><text x="73.6860%" y="255.50"></text></g><g><title>Security`Security::MetaRecord::attributeIndex (1 samples, 0.05%)</title><rect x="73.4360%" y="229" width="0.0467%" height="15" fill="rgb(250,223,3)" fg:x="1573" fg:w="1"/><text x="73.6860%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="73.4360%" y="213" width="0.0467%" height="15" fill="rgb(236,178,37)" fg:x="1573" fg:w="1"/><text x="73.6860%" y="223.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (69 samples, 3.22%)</title><rect x="70.3081%" y="581" width="3.2213%" height="15" fill="rgb(241,158,50)" fg:x="1506" fg:w="69"/><text x="70.5581%" y="591.50">Sec..</text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (10 samples, 0.47%)</title><rect x="73.0626%" y="565" width="0.4669%" height="15" fill="rgb(213,121,41)" fg:x="1565" fg:w="10"/><text x="73.3126%" y="575.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (10 samples, 0.47%)</title><rect x="73.0626%" y="549" width="0.4669%" height="15" fill="rgb(240,92,3)" fg:x="1565" fg:w="10"/><text x="73.3126%" y="559.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (5 samples, 0.23%)</title><rect x="73.2960%" y="533" width="0.2334%" height="15" fill="rgb(205,123,3)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="543.50"></text></g><g><title>Security`CSSM_ModuleLoad (5 samples, 0.23%)</title><rect x="73.2960%" y="517" width="0.2334%" height="15" fill="rgb(205,97,47)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="527.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (5 samples, 0.23%)</title><rect x="73.2960%" y="501" width="0.2334%" height="15" fill="rgb(247,152,14)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="511.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (5 samples, 0.23%)</title><rect x="73.2960%" y="485" width="0.2334%" height="15" fill="rgb(248,195,53)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="495.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (5 samples, 0.23%)</title><rect x="73.2960%" y="469" width="0.2334%" height="15" fill="rgb(226,201,16)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="479.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (5 samples, 0.23%)</title><rect x="73.2960%" y="453" width="0.2334%" height="15" fill="rgb(205,98,0)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="463.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (5 samples, 0.23%)</title><rect x="73.2960%" y="437" width="0.2334%" height="15" fill="rgb(214,191,48)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="447.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (5 samples, 0.23%)</title><rect x="73.2960%" y="421" width="0.2334%" height="15" fill="rgb(237,112,39)" fg:x="1570" fg:w="5"/><text x="73.5460%" y="431.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (4 samples, 0.19%)</title><rect x="73.3427%" y="405" width="0.1867%" height="15" fill="rgb(247,203,27)" fg:x="1571" fg:w="4"/><text x="73.5927%" y="415.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (3 samples, 0.14%)</title><rect x="73.3894%" y="389" width="0.1401%" height="15" fill="rgb(235,124,28)" fg:x="1572" fg:w="3"/><text x="73.6394%" y="399.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (3 samples, 0.14%)</title><rect x="73.3894%" y="373" width="0.1401%" height="15" fill="rgb(208,207,46)" fg:x="1572" fg:w="3"/><text x="73.6394%" y="383.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::directDbHand (2 samples, 0.09%)</title><rect x="73.4360%" y="357" width="0.0934%" height="15" fill="rgb(234,176,4)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="367.50"></text></g><g><title>Security`Security::MDSSession::dbOpen (2 samples, 0.09%)</title><rect x="73.4360%" y="341" width="0.0934%" height="15" fill="rgb(230,133,28)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="351.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (2 samples, 0.09%)</title><rect x="73.4360%" y="325" width="0.0934%" height="15" fill="rgb(211,137,40)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="335.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (2 samples, 0.09%)</title><rect x="73.4360%" y="309" width="0.0934%" height="15" fill="rgb(254,35,13)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="319.50"></text></g><g><title>Security`Security::Database::_dbOpen (2 samples, 0.09%)</title><rect x="73.4360%" y="293" width="0.0934%" height="15" fill="rgb(225,49,51)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="303.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (2 samples, 0.09%)</title><rect x="73.4360%" y="277" width="0.0934%" height="15" fill="rgb(251,10,15)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="287.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (2 samples, 0.09%)</title><rect x="73.4360%" y="261" width="0.0934%" height="15" fill="rgb(228,207,15)" fg:x="1573" fg:w="2"/><text x="73.6860%" y="271.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="245" width="0.0467%" height="15" fill="rgb(241,99,19)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="255.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="229" width="0.0467%" height="15" fill="rgb(207,104,49)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="239.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="213" width="0.0467%" height="15" fill="rgb(234,99,18)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="223.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="197" width="0.0467%" height="15" fill="rgb(213,191,49)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="207.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="181" width="0.0467%" height="15" fill="rgb(210,226,19)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="191.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="165" width="0.0467%" height="15" fill="rgb(229,97,18)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="175.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="149" width="0.0467%" height="15" fill="rgb(211,167,15)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="159.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="133" width="0.0467%" height="15" fill="rgb(210,169,34)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="143.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="117" width="0.0467%" height="15" fill="rgb(241,121,31)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="127.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="101" width="0.0467%" height="15" fill="rgb(232,40,11)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="111.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="85" width="0.0467%" height="15" fill="rgb(205,86,26)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="95.50"></text></g><g><title>Security`std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::destroy(std::__1::__tree_node (1 samples, 0.05%)</title><rect x="73.4827%" y="69" width="0.0467%" height="15" fill="rgb(231,126,28)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="73.4827%" y="53" width="0.0467%" height="15" fill="rgb(219,221,18)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="73.4827%" y="37" width="0.0467%" height="15" fill="rgb(211,40,0)" fg:x="1574" fg:w="1"/><text x="73.7327%" y="47.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (71 samples, 3.31%)</title><rect x="70.2614%" y="597" width="3.3147%" height="15" fill="rgb(239,85,43)" fg:x="1505" fg:w="71"/><text x="70.5114%" y="607.50">Sec..</text></g><g><title>Security`Security::KeychainCore::Certificate::releaseFieldValue (1 samples, 0.05%)</title><rect x="73.5294%" y="581" width="0.0467%" height="15" fill="rgb(231,55,21)" fg:x="1575" fg:w="1"/><text x="73.7794%" y="591.50"></text></g><g><title>Security`CSSM_CL_FreeFieldValue (1 samples, 0.05%)</title><rect x="73.5294%" y="565" width="0.0467%" height="15" fill="rgb(225,184,43)" fg:x="1575" fg:w="1"/><text x="73.7794%" y="575.50"></text></g><g><title>Security`cssm_FreeFieldValue(long, cssm_data const*, cssm_data*) (1 samples, 0.05%)</title><rect x="73.5294%" y="549" width="0.0467%" height="15" fill="rgb(251,158,41)" fg:x="1575" fg:w="1"/><text x="73.7794%" y="559.50"></text></g><g><title>Security`AppleX509CLSession::FreeFieldValue (1 samples, 0.05%)</title><rect x="73.5294%" y="533" width="0.0467%" height="15" fill="rgb(234,159,37)" fg:x="1575" fg:w="1"/><text x="73.7794%" y="543.50"></text></g><g><title>Security`DecodedCert::freeCertFieldData (1 samples, 0.05%)</title><rect x="73.5294%" y="517" width="0.0467%" height="15" fill="rgb(216,204,22)" fg:x="1575" fg:w="1"/><text x="73.7794%" y="527.50"></text></g><g><title>Security`oidToFields(Security::CssmData const&amp;) (1 samples, 0.05%)</title><rect x="73.5294%" y="501" width="0.0467%" height="15" fill="rgb(214,17,3)" fg:x="1575" fg:w="1"/><text x="73.7794%" y="511.50"></text></g><g><title>Security`Security::SecCFObject::handle (1 samples, 0.05%)</title><rect x="73.5761%" y="597" width="0.0467%" height="15" fill="rgb(212,111,17)" fg:x="1576" fg:w="1"/><text x="73.8261%" y="607.50"></text></g><g><title>Security`Security::KeychainCore::KeyItem::operator void const* (1 samples, 0.05%)</title><rect x="73.5761%" y="581" width="0.0467%" height="15" fill="rgb(221,157,24)" fg:x="1576" fg:w="1"/><text x="73.8261%" y="591.50"></text></g><g><title>Security`SecKeyCreate (1 samples, 0.05%)</title><rect x="73.5761%" y="565" width="0.0467%" height="15" fill="rgb(252,16,13)" fg:x="1576" fg:w="1"/><text x="73.8261%" y="575.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="73.5761%" y="549" width="0.0467%" height="15" fill="rgb(221,62,2)" fg:x="1576" fg:w="1"/><text x="73.8261%" y="559.50"></text></g><g><title>Security`SecTrustCopyPublicKey (79 samples, 3.69%)</title><rect x="69.9813%" y="629" width="3.6881%" height="15" fill="rgb(247,87,22)" fg:x="1499" fg:w="79"/><text x="70.2313%" y="639.50">Secu..</text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (79 samples, 3.69%)</title><rect x="69.9813%" y="613" width="3.6881%" height="15" fill="rgb(215,73,9)" fg:x="1499" fg:w="79"/><text x="70.2313%" y="623.50">Secu..</text></g><g><title>Security`countLegacyAPI (1 samples, 0.05%)</title><rect x="73.6228%" y="597" width="0.0467%" height="15" fill="rgb(207,175,33)" fg:x="1577" fg:w="1"/><text x="73.8728%" y="607.50"></text></g><g><title>Foundation`+[NSThread currentThread] (1 samples, 0.05%)</title><rect x="73.6228%" y="581" width="0.0467%" height="15" fill="rgb(243,129,54)" fg:x="1577" fg:w="1"/><text x="73.8728%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (1 samples, 0.05%)</title><rect x="73.6695%" y="613" width="0.0467%" height="15" fill="rgb(227,119,45)" fg:x="1578" fg:w="1"/><text x="73.9195%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.05%)</title><rect x="73.6695%" y="597" width="0.0467%" height="15" fill="rgb(205,109,36)" fg:x="1578" fg:w="1"/><text x="73.9195%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="73.6695%" y="581" width="0.0467%" height="15" fill="rgb(205,6,39)" fg:x="1578" fg:w="1"/><text x="73.9195%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="73.6695%" y="565" width="0.0467%" height="15" fill="rgb(221,32,16)" fg:x="1578" fg:w="1"/><text x="73.9195%" y="575.50"></text></g><g><title>Security`SecPolicyCreateBasicX509 (2 samples, 0.09%)</title><rect x="73.7162%" y="613" width="0.0934%" height="15" fill="rgb(228,144,50)" fg:x="1579" fg:w="2"/><text x="73.9662%" y="623.50"></text></g><g><title>Security`SecPolicyAddBasicX509Options (2 samples, 0.09%)</title><rect x="73.7162%" y="597" width="0.0934%" height="15" fill="rgb(229,201,53)" fg:x="1579" fg:w="2"/><text x="73.9662%" y="607.50"></text></g><g><title>Security`SecPolicyAddBasicCertOptions (2 samples, 0.09%)</title><rect x="73.7162%" y="581" width="0.0934%" height="15" fill="rgb(249,153,27)" fg:x="1579" fg:w="2"/><text x="73.9662%" y="591.50"></text></g><g><title>CoreFoundation`CFDictionaryAddValue (2 samples, 0.09%)</title><rect x="73.7162%" y="565" width="0.0934%" height="15" fill="rgb(227,106,25)" fg:x="1579" fg:w="2"/><text x="73.9662%" y="575.50"></text></g><g><title>Security`SecTrustCreateWithCertificates (4 samples, 0.19%)</title><rect x="73.6695%" y="629" width="0.1867%" height="15" fill="rgb(230,65,29)" fg:x="1578" fg:w="4"/><text x="73.9195%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_create_with_target (1 samples, 0.05%)</title><rect x="73.8095%" y="613" width="0.0467%" height="15" fill="rgb(221,57,46)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="623.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.05%)</title><rect x="73.8095%" y="597" width="0.0467%" height="15" fill="rgb(229,161,17)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="607.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.05%)</title><rect x="73.8095%" y="581" width="0.0467%" height="15" fill="rgb(222,213,11)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="73.8095%" y="565" width="0.0467%" height="15" fill="rgb(235,35,13)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="73.8095%" y="549" width="0.0467%" height="15" fill="rgb(233,158,34)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="73.8095%" y="533" width="0.0467%" height="15" fill="rgb(215,151,48)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.05%)</title><rect x="73.8095%" y="517" width="0.0467%" height="15" fill="rgb(229,84,14)" fg:x="1581" fg:w="1"/><text x="74.0595%" y="527.50"></text></g><g><title>CoreFoundation`__CFAllocatorSystemDeallocate (1 samples, 0.05%)</title><rect x="73.8562%" y="613" width="0.0467%" height="15" fill="rgb(229,68,14)" fg:x="1582" fg:w="1"/><text x="74.1062%" y="623.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.05%)</title><rect x="73.9029%" y="613" width="0.0467%" height="15" fill="rgb(243,106,26)" fg:x="1583" fg:w="1"/><text x="74.1529%" y="623.50"></text></g><g><title>CoreFoundation`CFRetain (1 samples, 0.05%)</title><rect x="73.9029%" y="597" width="0.0467%" height="15" fill="rgb(206,45,38)" fg:x="1583" fg:w="1"/><text x="74.1529%" y="607.50"></text></g><g><title>CoreFoundation`CFDataGetLength (1 samples, 0.05%)</title><rect x="73.9496%" y="597" width="0.0467%" height="15" fill="rgb(226,6,15)" fg:x="1584" fg:w="1"/><text x="74.1996%" y="607.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.05%)</title><rect x="73.9963%" y="597" width="0.0467%" height="15" fill="rgb(232,22,54)" fg:x="1585" fg:w="1"/><text x="74.2463%" y="607.50"></text></g><g><title>CoreFoundation`CFDataReplaceBytes (1 samples, 0.05%)</title><rect x="73.9963%" y="581" width="0.0467%" height="15" fill="rgb(229,222,32)" fg:x="1585" fg:w="1"/><text x="74.2463%" y="591.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (1 samples, 0.05%)</title><rect x="74.0430%" y="581" width="0.0467%" height="15" fill="rgb(228,62,29)" fg:x="1586" fg:w="1"/><text x="74.2930%" y="591.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.05%)</title><rect x="74.0896%" y="581" width="0.0467%" height="15" fill="rgb(251,103,34)" fg:x="1587" fg:w="1"/><text x="74.3396%" y="591.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="74.0896%" y="565" width="0.0467%" height="15" fill="rgb(233,12,30)" fg:x="1587" fg:w="1"/><text x="74.3396%" y="575.50"></text></g><g><title>CoreFoundation`__CFAllocatorSystemAllocate (1 samples, 0.05%)</title><rect x="74.0896%" y="549" width="0.0467%" height="15" fill="rgb(238,52,0)" fg:x="1587" fg:w="1"/><text x="74.3396%" y="559.50"></text></g><g><title>Security`SecCEPAuthorityInfoAccess (1 samples, 0.05%)</title><rect x="74.1363%" y="581" width="0.0467%" height="15" fill="rgb(223,98,5)" fg:x="1588" fg:w="1"/><text x="74.3863%" y="591.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (1 samples, 0.05%)</title><rect x="74.1363%" y="565" width="0.0467%" height="15" fill="rgb(228,75,37)" fg:x="1588" fg:w="1"/><text x="74.3863%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.05%)</title><rect x="74.1363%" y="549" width="0.0467%" height="15" fill="rgb(205,115,49)" fg:x="1588" fg:w="1"/><text x="74.3863%" y="559.50"></text></g><g><title>Security`SecCEPCertificatePolicies (2 samples, 0.09%)</title><rect x="74.1830%" y="581" width="0.0934%" height="15" fill="rgb(250,154,43)" fg:x="1589" fg:w="2"/><text x="74.4330%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="74.2297%" y="565" width="0.0467%" height="15" fill="rgb(226,43,29)" fg:x="1590" fg:w="1"/><text x="74.4797%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="74.2297%" y="549" width="0.0467%" height="15" fill="rgb(249,228,39)" fg:x="1590" fg:w="1"/><text x="74.4797%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="74.2297%" y="533" width="0.0467%" height="15" fill="rgb(216,79,43)" fg:x="1590" fg:w="1"/><text x="74.4797%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSArrayM addObject:] (1 samples, 0.05%)</title><rect x="74.2764%" y="549" width="0.0467%" height="15" fill="rgb(228,95,12)" fg:x="1591" fg:w="1"/><text x="74.5264%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (1 samples, 0.05%)</title><rect x="74.3231%" y="533" width="0.0467%" height="15" fill="rgb(249,221,15)" fg:x="1592" fg:w="1"/><text x="74.5731%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.05%)</title><rect x="74.3231%" y="517" width="0.0467%" height="15" fill="rgb(233,34,13)" fg:x="1592" fg:w="1"/><text x="74.5731%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="74.3231%" y="501" width="0.0467%" height="15" fill="rgb(214,103,39)" fg:x="1592" fg:w="1"/><text x="74.5731%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="74.3231%" y="485" width="0.0467%" height="15" fill="rgb(251,126,39)" fg:x="1592" fg:w="1"/><text x="74.5731%" y="495.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (4 samples, 0.19%)</title><rect x="74.2764%" y="581" width="0.1867%" height="15" fill="rgb(214,216,36)" fg:x="1591" fg:w="4"/><text x="74.5264%" y="591.50"></text></g><g><title>Security`parseGeneralNamesContent (4 samples, 0.19%)</title><rect x="74.2764%" y="565" width="0.1867%" height="15" fill="rgb(220,221,8)" fg:x="1591" fg:w="4"/><text x="74.5264%" y="575.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (3 samples, 0.14%)</title><rect x="74.3231%" y="549" width="0.1401%" height="15" fill="rgb(240,216,3)" fg:x="1592" fg:w="3"/><text x="74.5731%" y="559.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (2 samples, 0.09%)</title><rect x="74.3697%" y="533" width="0.0934%" height="15" fill="rgb(232,218,17)" fg:x="1593" fg:w="2"/><text x="74.6197%" y="543.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (2 samples, 0.09%)</title><rect x="74.3697%" y="517" width="0.0934%" height="15" fill="rgb(229,163,45)" fg:x="1593" fg:w="2"/><text x="74.6197%" y="527.50"></text></g><g><title>CoreFoundation`_parseComponents (1 samples, 0.05%)</title><rect x="74.4164%" y="501" width="0.0467%" height="15" fill="rgb(231,110,42)" fg:x="1594" fg:w="1"/><text x="74.6664%" y="511.50"></text></g><g><title>Security`SecCEPSubjectAltName (2 samples, 0.09%)</title><rect x="74.4631%" y="581" width="0.0934%" height="15" fill="rgb(208,170,48)" fg:x="1595" fg:w="2"/><text x="74.7131%" y="591.50"></text></g><g><title>Security`SecCertificateParseGeneralNames (2 samples, 0.09%)</title><rect x="74.4631%" y="565" width="0.0934%" height="15" fill="rgb(239,116,25)" fg:x="1595" fg:w="2"/><text x="74.7131%" y="575.50"></text></g><g><title>Security`parseGeneralNamesContent (2 samples, 0.09%)</title><rect x="74.4631%" y="549" width="0.0934%" height="15" fill="rgb(219,200,50)" fg:x="1595" fg:w="2"/><text x="74.7131%" y="559.50"></text></g><g><title>Security`DERDecodeSeqNext (1 samples, 0.05%)</title><rect x="74.5098%" y="533" width="0.0467%" height="15" fill="rgb(245,200,0)" fg:x="1596" fg:w="1"/><text x="74.7598%" y="543.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.05%)</title><rect x="74.6965%" y="565" width="0.0467%" height="15" fill="rgb(245,119,33)" fg:x="1600" fg:w="1"/><text x="74.9465%" y="575.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.05%)</title><rect x="74.7432%" y="565" width="0.0467%" height="15" fill="rgb(231,125,12)" fg:x="1601" fg:w="1"/><text x="74.9932%" y="575.50"></text></g><g><title>Security`createNormalizedX501Name (6 samples, 0.28%)</title><rect x="74.5565%" y="581" width="0.2801%" height="15" fill="rgb(216,96,41)" fg:x="1597" fg:w="6"/><text x="74.8065%" y="591.50"></text></g><g><title>Security`DERParseSequenceContent (1 samples, 0.05%)</title><rect x="74.7899%" y="565" width="0.0467%" height="15" fill="rgb(248,43,45)" fg:x="1602" fg:w="1"/><text x="75.0399%" y="575.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.05%)</title><rect x="74.7899%" y="549" width="0.0467%" height="15" fill="rgb(217,222,7)" fg:x="1602" fg:w="1"/><text x="75.0399%" y="559.50"></text></g><g><title>Security`tls_handshake_message_callback (153 samples, 7.14%)</title><rect x="67.7404%" y="661" width="7.1429%" height="15" fill="rgb(233,28,6)" fg:x="1451" fg:w="153"/><text x="67.9904%" y="671.50">Security`t..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (152 samples, 7.10%)</title><rect x="67.7871%" y="645" width="7.0962%" height="15" fill="rgb(231,218,15)" fg:x="1452" fg:w="152"/><text x="68.0371%" y="655.50">libcoretls..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (22 samples, 1.03%)</title><rect x="73.8562%" y="629" width="1.0271%" height="15" fill="rgb(226,171,48)" fg:x="1582" fg:w="22"/><text x="74.1062%" y="639.50"></text></g><g><title>Security`SecCertificateCreateWithData (20 samples, 0.93%)</title><rect x="73.9496%" y="613" width="0.9337%" height="15" fill="rgb(235,201,9)" fg:x="1584" fg:w="20"/><text x="74.1996%" y="623.50"></text></g><g><title>Security`SecCertificateParse (18 samples, 0.84%)</title><rect x="74.0430%" y="597" width="0.8403%" height="15" fill="rgb(217,80,15)" fg:x="1586" fg:w="18"/><text x="74.2930%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="74.8366%" y="581" width="0.0467%" height="15" fill="rgb(219,152,8)" fg:x="1603" fg:w="1"/><text x="75.0866%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSCFConstantString retain] (1 samples, 0.05%)</title><rect x="74.8833%" y="597" width="0.0467%" height="15" fill="rgb(243,107,38)" fg:x="1604" fg:w="1"/><text x="75.1333%" y="607.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.05%)</title><rect x="74.9300%" y="597" width="0.0467%" height="15" fill="rgb(231,17,5)" fg:x="1605" fg:w="1"/><text x="75.1800%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (1 samples, 0.05%)</title><rect x="74.9767%" y="565" width="0.0467%" height="15" fill="rgb(209,25,54)" fg:x="1606" fg:w="1"/><text x="75.2267%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (1 samples, 0.05%)</title><rect x="74.9767%" y="549" width="0.0467%" height="15" fill="rgb(219,0,2)" fg:x="1606" fg:w="1"/><text x="75.2267%" y="559.50"></text></g><g><title>CoreFoundation`-[NSMutableDictionary __addObject:forKey:] (2 samples, 0.09%)</title><rect x="74.9767%" y="581" width="0.0934%" height="15" fill="rgb(246,9,5)" fg:x="1606" fg:w="2"/><text x="75.2267%" y="591.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.05%)</title><rect x="75.0233%" y="565" width="0.0467%" height="15" fill="rgb(226,159,4)" fg:x="1607" fg:w="1"/><text x="75.2733%" y="575.50"></text></g><g><title>Security`SecPolicyAddBasicX509Options (3 samples, 0.14%)</title><rect x="74.9767%" y="597" width="0.1401%" height="15" fill="rgb(219,175,34)" fg:x="1606" fg:w="3"/><text x="75.2267%" y="607.50"></text></g><g><title>Security`SecPolicyAddBasicCertOptions (1 samples, 0.05%)</title><rect x="75.0700%" y="581" width="0.0467%" height="15" fill="rgb(236,10,46)" fg:x="1608" fg:w="1"/><text x="75.3200%" y="591.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.05%)</title><rect x="75.0700%" y="565" width="0.0467%" height="15" fill="rgb(240,211,16)" fg:x="1608" fg:w="1"/><text x="75.3200%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.05%)</title><rect x="75.1167%" y="581" width="0.0467%" height="15" fill="rgb(205,3,43)" fg:x="1609" fg:w="1"/><text x="75.3667%" y="591.50"></text></g><g><title>CoreFoundation`mdict_rehashd (1 samples, 0.05%)</title><rect x="75.1167%" y="565" width="0.0467%" height="15" fill="rgb(245,7,22)" fg:x="1609" fg:w="1"/><text x="75.3667%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="75.1167%" y="549" width="0.0467%" height="15" fill="rgb(239,132,32)" fg:x="1609" fg:w="1"/><text x="75.3667%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="75.1167%" y="533" width="0.0467%" height="15" fill="rgb(228,202,34)" fg:x="1609" fg:w="1"/><text x="75.3667%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="75.1167%" y="517" width="0.0467%" height="15" fill="rgb(254,200,22)" fg:x="1609" fg:w="1"/><text x="75.3667%" y="527.50"></text></g><g><title>Security`SecPolicyAddStrongKeySizeOptions (2 samples, 0.09%)</title><rect x="75.1167%" y="597" width="0.0934%" height="15" fill="rgb(219,10,39)" fg:x="1609" fg:w="2"/><text x="75.3667%" y="607.50"></text></g><g><title>CoreFoundation`CFDictionaryCreate (1 samples, 0.05%)</title><rect x="75.1634%" y="581" width="0.0467%" height="15" fill="rgb(226,210,39)" fg:x="1610" fg:w="1"/><text x="75.4134%" y="591.50"></text></g><g><title>CoreFoundation`__NSDictionaryI_new (1 samples, 0.05%)</title><rect x="75.1634%" y="565" width="0.0467%" height="15" fill="rgb(208,219,16)" fg:x="1610" fg:w="1"/><text x="75.4134%" y="575.50"></text></g><g><title>Security`SecPolicyCreate (1 samples, 0.05%)</title><rect x="75.2101%" y="597" width="0.0467%" height="15" fill="rgb(216,158,51)" fg:x="1611" fg:w="1"/><text x="75.4601%" y="607.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="75.2101%" y="581" width="0.0467%" height="15" fill="rgb(233,14,44)" fg:x="1611" fg:w="1"/><text x="75.4601%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="75.2101%" y="565" width="0.0467%" height="15" fill="rgb(237,97,39)" fg:x="1611" fg:w="1"/><text x="75.4601%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="75.2101%" y="549" width="0.0467%" height="15" fill="rgb(218,198,43)" fg:x="1611" fg:w="1"/><text x="75.4601%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="75.2101%" y="533" width="0.0467%" height="15" fill="rgb(231,104,20)" fg:x="1611" fg:w="1"/><text x="75.4601%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="75.2101%" y="517" width="0.0467%" height="15" fill="rgb(254,36,13)" fg:x="1611" fg:w="1"/><text x="75.4601%" y="527.50"></text></g><g><title>Security`SecPolicyRemoveWeakHashOptions (1 samples, 0.05%)</title><rect x="75.2568%" y="597" width="0.0467%" height="15" fill="rgb(248,14,50)" fg:x="1612" fg:w="1"/><text x="75.5068%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="75.2568%" y="581" width="0.0467%" height="15" fill="rgb(217,107,29)" fg:x="1612" fg:w="1"/><text x="75.5068%" y="591.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.05%)</title><rect x="75.3035%" y="581" width="0.0467%" height="15" fill="rgb(251,169,33)" fg:x="1613" fg:w="1"/><text x="75.5535%" y="591.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.05%)</title><rect x="75.3501%" y="565" width="0.0467%" height="15" fill="rgb(217,108,32)" fg:x="1614" fg:w="1"/><text x="75.6001%" y="575.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="75.3501%" y="549" width="0.0467%" height="15" fill="rgb(219,66,42)" fg:x="1614" fg:w="1"/><text x="75.6001%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="75.3501%" y="533" width="0.0467%" height="15" fill="rgb(206,180,7)" fg:x="1614" fg:w="1"/><text x="75.6001%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="75.3501%" y="517" width="0.0467%" height="15" fill="rgb(208,226,31)" fg:x="1614" fg:w="1"/><text x="75.6001%" y="527.50"></text></g><g><title>Security`SecPolicyCreateSSLWithKeyUsage (12 samples, 0.56%)</title><rect x="74.8833%" y="613" width="0.5602%" height="15" fill="rgb(218,26,49)" fg:x="1604" fg:w="12"/><text x="75.1333%" y="623.50"></text></g><g><title>Security`set_ssl_ekus (3 samples, 0.14%)</title><rect x="75.3035%" y="597" width="0.1401%" height="15" fill="rgb(233,197,48)" fg:x="1613" fg:w="3"/><text x="75.5535%" y="607.50"></text></g><g><title>Security`add_eku (2 samples, 0.09%)</title><rect x="75.3501%" y="581" width="0.0934%" height="15" fill="rgb(252,181,51)" fg:x="1614" fg:w="2"/><text x="75.6001%" y="591.50"></text></g><g><title>Security`add_element (1 samples, 0.05%)</title><rect x="75.3968%" y="565" width="0.0467%" height="15" fill="rgb(253,90,19)" fg:x="1615" fg:w="1"/><text x="75.6468%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (1 samples, 0.05%)</title><rect x="75.3968%" y="549" width="0.0467%" height="15" fill="rgb(215,171,30)" fg:x="1615" fg:w="1"/><text x="75.6468%" y="559.50"></text></g><g><title>Security`SecTrustCreateWithCertificates (1 samples, 0.05%)</title><rect x="75.4435%" y="613" width="0.0467%" height="15" fill="rgb(214,222,9)" fg:x="1616" fg:w="1"/><text x="75.6935%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_create_with_target (1 samples, 0.05%)</title><rect x="75.4435%" y="597" width="0.0467%" height="15" fill="rgb(223,3,22)" fg:x="1616" fg:w="1"/><text x="75.6935%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_strdup_if_mutable (1 samples, 0.05%)</title><rect x="75.4435%" y="581" width="0.0467%" height="15" fill="rgb(225,196,46)" fg:x="1616" fg:w="1"/><text x="75.6935%" y="591.50"></text></g><g><title>libdyld.dylib`_dyld_is_memory_immutable (1 samples, 0.05%)</title><rect x="75.4435%" y="565" width="0.0467%" height="15" fill="rgb(209,110,37)" fg:x="1616" fg:w="1"/><text x="75.6935%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSCFData retain] (1 samples, 0.05%)</title><rect x="75.4902%" y="597" width="0.0467%" height="15" fill="rgb(249,89,12)" fg:x="1617" fg:w="1"/><text x="75.7402%" y="607.50"></text></g><g><title>Security`SecTrustSetOCSPResponse (2 samples, 0.09%)</title><rect x="75.4902%" y="613" width="0.0934%" height="15" fill="rgb(226,27,33)" fg:x="1617" fg:w="2"/><text x="75.7402%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.05%)</title><rect x="75.5369%" y="597" width="0.0467%" height="15" fill="rgb(213,82,22)" fg:x="1618" fg:w="1"/><text x="75.7869%" y="607.50"></text></g><g><title>Security`__SecTrustSetNeedsEvaluation_block_invoke (1 samples, 0.05%)</title><rect x="75.5369%" y="581" width="0.0467%" height="15" fill="rgb(248,140,0)" fg:x="1618" fg:w="1"/><text x="75.7869%" y="591.50"></text></g><g><title>libcoretls_cfhelpers.dylib`DYLD-STUB$$CFArrayAppendValue (1 samples, 0.05%)</title><rect x="75.5836%" y="613" width="0.0467%" height="15" fill="rgb(228,106,3)" fg:x="1619" fg:w="1"/><text x="75.8336%" y="623.50"></text></g><g><title>Security`SecCEPCertificatePolicies (1 samples, 0.05%)</title><rect x="75.6303%" y="581" width="0.0467%" height="15" fill="rgb(209,23,37)" fg:x="1620" fg:w="1"/><text x="75.8803%" y="591.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (1 samples, 0.05%)</title><rect x="75.6769%" y="565" width="0.0467%" height="15" fill="rgb(241,93,50)" fg:x="1621" fg:w="1"/><text x="75.9269%" y="575.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (1 samples, 0.05%)</title><rect x="75.6769%" y="549" width="0.0467%" height="15" fill="rgb(253,46,43)" fg:x="1621" fg:w="1"/><text x="75.9269%" y="559.50"></text></g><g><title>Security`SecDERItemEqual (1 samples, 0.05%)</title><rect x="75.6769%" y="533" width="0.0467%" height="15" fill="rgb(226,206,43)" fg:x="1621" fg:w="1"/><text x="75.9269%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="75.6769%" y="517" width="0.0467%" height="15" fill="rgb(217,54,7)" fg:x="1621" fg:w="1"/><text x="75.9269%" y="527.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_retain (1 samples, 0.05%)</title><rect x="75.7236%" y="565" width="0.0467%" height="15" fill="rgb(223,5,52)" fg:x="1622" fg:w="1"/><text x="75.9736%" y="575.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.05%)</title><rect x="75.7703%" y="565" width="0.0467%" height="15" fill="rgb(206,52,46)" fg:x="1623" fg:w="1"/><text x="76.0203%" y="575.50"></text></g><g><title>Security`DERParseSequenceContent (2 samples, 0.09%)</title><rect x="75.8170%" y="565" width="0.0934%" height="15" fill="rgb(253,136,11)" fg:x="1624" fg:w="2"/><text x="76.0670%" y="575.50"></text></g><g><title>Security`SecCEPAuthorityInfoAccess (1 samples, 0.05%)</title><rect x="75.9104%" y="565" width="0.0467%" height="15" fill="rgb(208,106,33)" fg:x="1626" fg:w="1"/><text x="76.1604%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="75.9104%" y="549" width="0.0467%" height="15" fill="rgb(206,54,4)" fg:x="1626" fg:w="1"/><text x="76.1604%" y="559.50"></text></g><g><title>CoreFoundation`CFStringGetLength (1 samples, 0.05%)</title><rect x="75.9570%" y="501" width="0.0467%" height="15" fill="rgb(213,3,15)" fg:x="1627" fg:w="1"/><text x="76.2070%" y="511.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (2 samples, 0.09%)</title><rect x="75.9570%" y="565" width="0.0934%" height="15" fill="rgb(252,211,39)" fg:x="1627" fg:w="2"/><text x="76.2070%" y="575.50"></text></g><g><title>Security`parseGeneralNamesContent (2 samples, 0.09%)</title><rect x="75.9570%" y="549" width="0.0934%" height="15" fill="rgb(223,6,36)" fg:x="1627" fg:w="2"/><text x="76.2070%" y="559.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (2 samples, 0.09%)</title><rect x="75.9570%" y="533" width="0.0934%" height="15" fill="rgb(252,169,45)" fg:x="1627" fg:w="2"/><text x="76.2070%" y="543.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (2 samples, 0.09%)</title><rect x="75.9570%" y="517" width="0.0934%" height="15" fill="rgb(212,48,26)" fg:x="1627" fg:w="2"/><text x="76.2070%" y="527.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (1 samples, 0.05%)</title><rect x="76.0037%" y="501" width="0.0467%" height="15" fill="rgb(251,102,48)" fg:x="1628" fg:w="1"/><text x="76.2537%" y="511.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="76.0037%" y="485" width="0.0467%" height="15" fill="rgb(243,208,16)" fg:x="1628" fg:w="1"/><text x="76.2537%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="76.0037%" y="469" width="0.0467%" height="15" fill="rgb(219,96,24)" fg:x="1628" fg:w="1"/><text x="76.2537%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="76.0037%" y="453" width="0.0467%" height="15" fill="rgb(219,33,29)" fg:x="1628" fg:w="1"/><text x="76.2537%" y="463.50"></text></g><g><title>Security`SecCEPSubjectAltName (1 samples, 0.05%)</title><rect x="76.0504%" y="565" width="0.0467%" height="15" fill="rgb(223,176,5)" fg:x="1629" fg:w="1"/><text x="76.3004%" y="575.50"></text></g><g><title>Security`SecCertificateParseGeneralNames (1 samples, 0.05%)</title><rect x="76.0504%" y="549" width="0.0467%" height="15" fill="rgb(228,140,14)" fg:x="1629" fg:w="1"/><text x="76.3004%" y="559.50"></text></g><g><title>Security`SecCertificateParseGeneralNameContentProperty (1 samples, 0.05%)</title><rect x="76.0504%" y="533" width="0.0467%" height="15" fill="rgb(217,179,31)" fg:x="1629" fg:w="1"/><text x="76.3004%" y="543.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (2 samples, 0.09%)</title><rect x="76.1438%" y="533" width="0.0934%" height="15" fill="rgb(230,9,30)" fg:x="1631" fg:w="2"/><text x="76.3938%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.09%)</title><rect x="76.1438%" y="517" width="0.0934%" height="15" fill="rgb(230,136,20)" fg:x="1631" fg:w="2"/><text x="76.3938%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="76.1438%" y="501" width="0.0934%" height="15" fill="rgb(215,210,22)" fg:x="1631" fg:w="2"/><text x="76.3938%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="76.1438%" y="485" width="0.0934%" height="15" fill="rgb(218,43,5)" fg:x="1631" fg:w="2"/><text x="76.3938%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.09%)</title><rect x="76.1438%" y="469" width="0.0934%" height="15" fill="rgb(216,11,5)" fg:x="1631" fg:w="2"/><text x="76.3938%" y="479.50"></text></g><g><title>CoreFoundation`__CFDataInit (3 samples, 0.14%)</title><rect x="76.1438%" y="549" width="0.1401%" height="15" fill="rgb(209,82,29)" fg:x="1631" fg:w="3"/><text x="76.3938%" y="559.50"></text></g><g><title>libdyld.dylib`dyld3::VersionSPIDispatcher::dyld_program_sdk_at_least_fast (1 samples, 0.05%)</title><rect x="76.2372%" y="533" width="0.0467%" height="15" fill="rgb(244,115,12)" fg:x="1633" fg:w="1"/><text x="76.4872%" y="543.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.05%)</title><rect x="76.2838%" y="533" width="0.0467%" height="15" fill="rgb(222,82,18)" fg:x="1634" fg:w="1"/><text x="76.5338%" y="543.50"></text></g><g><title>Security`tls_verify_peer_cert (32 samples, 1.49%)</title><rect x="74.8833%" y="661" width="1.4939%" height="15" fill="rgb(249,227,8)" fg:x="1604" fg:w="32"/><text x="75.1333%" y="671.50"></text></g><g><title>Security`sslCreateSecTrust (32 samples, 1.49%)</title><rect x="74.8833%" y="645" width="1.4939%" height="15" fill="rgb(253,141,45)" fg:x="1604" fg:w="32"/><text x="75.1333%" y="655.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_peer_trust (32 samples, 1.49%)</title><rect x="74.8833%" y="629" width="1.4939%" height="15" fill="rgb(234,184,4)" fg:x="1604" fg:w="32"/><text x="75.1333%" y="639.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (16 samples, 0.75%)</title><rect x="75.6303%" y="613" width="0.7470%" height="15" fill="rgb(218,194,23)" fg:x="1620" fg:w="16"/><text x="75.8803%" y="623.50"></text></g><g><title>Security`SecCertificateCreateWithData (16 samples, 0.75%)</title><rect x="75.6303%" y="597" width="0.7470%" height="15" fill="rgb(235,66,41)" fg:x="1620" fg:w="16"/><text x="75.8803%" y="607.50"></text></g><g><title>Security`SecCertificateParse (15 samples, 0.70%)</title><rect x="75.6769%" y="581" width="0.7003%" height="15" fill="rgb(245,217,1)" fg:x="1621" fg:w="15"/><text x="75.9269%" y="591.50"></text></g><g><title>Security`createNormalizedX501Name (6 samples, 0.28%)</title><rect x="76.0971%" y="565" width="0.2801%" height="15" fill="rgb(229,91,1)" fg:x="1630" fg:w="6"/><text x="76.3471%" y="575.50"></text></g><g><title>Security`DERParseSequenceContent (2 samples, 0.09%)</title><rect x="76.2838%" y="549" width="0.0934%" height="15" fill="rgb(207,101,30)" fg:x="1634" fg:w="2"/><text x="76.5338%" y="559.50"></text></g><g><title>Security`DERDecodeSeqNext (1 samples, 0.05%)</title><rect x="76.3305%" y="533" width="0.0467%" height="15" fill="rgb(223,82,49)" fg:x="1635" fg:w="1"/><text x="76.5805%" y="543.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA512_compress_hwassist (4 samples, 0.19%)</title><rect x="76.3772%" y="645" width="0.1867%" height="15" fill="rgb(218,167,17)" fg:x="1636" fg:w="4"/><text x="76.6272%" y="655.50"></text></g><g><title>libcoretls.dylib`HashSHA512Update (6 samples, 0.28%)</title><rect x="76.3772%" y="661" width="0.2801%" height="15" fill="rgb(208,103,14)" fg:x="1636" fg:w="6"/><text x="76.6272%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.09%)</title><rect x="76.5640%" y="645" width="0.0934%" height="15" fill="rgb(238,20,8)" fg:x="1640" fg:w="2"/><text x="76.8140%" y="655.50"></text></g><g><title>libcoretls.dylib`SSLResetFlight (1 samples, 0.05%)</title><rect x="76.6573%" y="645" width="0.0467%" height="15" fill="rgb(218,80,54)" fg:x="1642" fg:w="1"/><text x="76.9073%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="76.6573%" y="629" width="0.0467%" height="15" fill="rgb(240,144,17)" fg:x="1642" fg:w="1"/><text x="76.9073%" y="639.50"></text></g><g><title>libsystem_asl.dylib`_asl_evaluate_send (1 samples, 0.05%)</title><rect x="76.7040%" y="613" width="0.0467%" height="15" fill="rgb(245,27,50)" fg:x="1643" fg:w="1"/><text x="76.9540%" y="623.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_slot_val (1 samples, 0.05%)</title><rect x="76.7974%" y="533" width="0.0467%" height="15" fill="rgb(251,51,7)" fg:x="1645" fg:w="1"/><text x="77.0474%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_insert (1 samples, 0.05%)</title><rect x="76.8441%" y="533" width="0.0467%" height="15" fill="rgb(245,217,29)" fg:x="1646" fg:w="1"/><text x="77.0941%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="76.8441%" y="517" width="0.0467%" height="15" fill="rgb(221,176,29)" fg:x="1646" fg:w="1"/><text x="77.0941%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="76.8908%" y="453" width="0.0467%" height="15" fill="rgb(212,180,24)" fg:x="1647" fg:w="1"/><text x="77.1408%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="76.8908%" y="437" width="0.0467%" height="15" fill="rgb(254,24,2)" fg:x="1647" fg:w="1"/><text x="77.1408%" y="447.50"></text></g><g><title>libxpc.dylib`_xpc_string_create (2 samples, 0.09%)</title><rect x="76.8908%" y="533" width="0.0934%" height="15" fill="rgb(230,100,2)" fg:x="1647" fg:w="2"/><text x="77.1408%" y="543.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (2 samples, 0.09%)</title><rect x="76.8908%" y="517" width="0.0934%" height="15" fill="rgb(219,142,25)" fg:x="1647" fg:w="2"/><text x="77.1408%" y="527.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (2 samples, 0.09%)</title><rect x="76.8908%" y="501" width="0.0934%" height="15" fill="rgb(240,73,43)" fg:x="1647" fg:w="2"/><text x="77.1408%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.09%)</title><rect x="76.8908%" y="485" width="0.0934%" height="15" fill="rgb(214,114,15)" fg:x="1647" fg:w="2"/><text x="77.1408%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="76.8908%" y="469" width="0.0934%" height="15" fill="rgb(207,130,4)" fg:x="1647" fg:w="2"/><text x="77.1408%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="76.9374%" y="453" width="0.0467%" height="15" fill="rgb(221,25,40)" fg:x="1648" fg:w="1"/><text x="77.1874%" y="463.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_to_xpc (5 samples, 0.23%)</title><rect x="76.7974%" y="549" width="0.2334%" height="15" fill="rgb(241,184,7)" fg:x="1645" fg:w="5"/><text x="77.0474%" y="559.50"></text></g><g><title>libxpc.dylib`xpc_get_type (1 samples, 0.05%)</title><rect x="76.9841%" y="533" width="0.0467%" height="15" fill="rgb(235,159,4)" fg:x="1649" fg:w="1"/><text x="77.2341%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.05%)</title><rect x="77.0308%" y="533" width="0.0467%" height="15" fill="rgb(214,87,48)" fg:x="1650" fg:w="1"/><text x="77.2808%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="77.0775%" y="485" width="0.0467%" height="15" fill="rgb(246,198,24)" fg:x="1651" fg:w="1"/><text x="77.3275%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="77.0775%" y="469" width="0.0467%" height="15" fill="rgb(209,66,40)" fg:x="1651" fg:w="1"/><text x="77.3275%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="77.0775%" y="453" width="0.0467%" height="15" fill="rgb(233,147,39)" fg:x="1651" fg:w="1"/><text x="77.3275%" y="463.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (3 samples, 0.14%)</title><rect x="77.0308%" y="549" width="0.1401%" height="15" fill="rgb(231,145,52)" fg:x="1650" fg:w="3"/><text x="77.2808%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (2 samples, 0.09%)</title><rect x="77.0775%" y="533" width="0.0934%" height="15" fill="rgb(206,20,26)" fg:x="1651" fg:w="2"/><text x="77.3275%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (2 samples, 0.09%)</title><rect x="77.0775%" y="517" width="0.0934%" height="15" fill="rgb(238,220,4)" fg:x="1651" fg:w="2"/><text x="77.3275%" y="527.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.09%)</title><rect x="77.0775%" y="501" width="0.0934%" height="15" fill="rgb(252,195,42)" fg:x="1651" fg:w="2"/><text x="77.3275%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="77.1242%" y="485" width="0.0467%" height="15" fill="rgb(209,10,6)" fg:x="1652" fg:w="1"/><text x="77.3742%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="77.1242%" y="469" width="0.0467%" height="15" fill="rgb(229,3,52)" fg:x="1652" fg:w="1"/><text x="77.3742%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="77.1242%" y="453" width="0.0467%" height="15" fill="rgb(253,49,37)" fg:x="1652" fg:w="1"/><text x="77.3742%" y="463.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_mach_msg (4 samples, 0.19%)</title><rect x="77.1709%" y="517" width="0.1867%" height="15" fill="rgb(240,103,49)" fg:x="1653" fg:w="4"/><text x="77.4209%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.19%)</title><rect x="77.1709%" y="501" width="0.1867%" height="15" fill="rgb(250,182,30)" fg:x="1653" fg:w="4"/><text x="77.4209%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.05%)</title><rect x="77.3576%" y="485" width="0.0467%" height="15" fill="rgb(248,8,30)" fg:x="1657" fg:w="1"/><text x="77.6076%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.05%)</title><rect x="77.3576%" y="469" width="0.0467%" height="15" fill="rgb(237,120,30)" fg:x="1657" fg:w="1"/><text x="77.6076%" y="479.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.05%)</title><rect x="77.3576%" y="453" width="0.0467%" height="15" fill="rgb(221,146,34)" fg:x="1657" fg:w="1"/><text x="77.6076%" y="463.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (15 samples, 0.70%)</title><rect x="76.7507%" y="565" width="0.7003%" height="15" fill="rgb(242,55,13)" fg:x="1644" fg:w="15"/><text x="77.0007%" y="575.50"></text></g><g><title>libxpc.dylib`xpc_pipe_routine (6 samples, 0.28%)</title><rect x="77.1709%" y="549" width="0.2801%" height="15" fill="rgb(242,112,31)" fg:x="1653" fg:w="6"/><text x="77.4209%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (6 samples, 0.28%)</title><rect x="77.1709%" y="533" width="0.2801%" height="15" fill="rgb(249,192,27)" fg:x="1653" fg:w="6"/><text x="77.4209%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_pack_message (2 samples, 0.09%)</title><rect x="77.3576%" y="517" width="0.0934%" height="15" fill="rgb(208,204,44)" fg:x="1657" fg:w="2"/><text x="77.6076%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (2 samples, 0.09%)</title><rect x="77.3576%" y="501" width="0.0934%" height="15" fill="rgb(208,93,54)" fg:x="1657" fg:w="2"/><text x="77.6076%" y="511.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply_f (1 samples, 0.05%)</title><rect x="77.4043%" y="485" width="0.0467%" height="15" fill="rgb(242,1,31)" fg:x="1658" fg:w="1"/><text x="77.6543%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.05%)</title><rect x="77.4043%" y="469" width="0.0467%" height="15" fill="rgb(241,83,25)" fg:x="1658" fg:w="1"/><text x="77.6543%" y="479.50"></text></g><g><title>libsystem_asl.dylib`_asl_server_message (4 samples, 0.19%)</title><rect x="77.4510%" y="565" width="0.1867%" height="15" fill="rgb(205,169,50)" fg:x="1659" fg:w="4"/><text x="77.7010%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.14%)</title><rect x="77.4977%" y="549" width="0.1401%" height="15" fill="rgb(239,186,37)" fg:x="1660" fg:w="3"/><text x="77.7477%" y="559.50"></text></g><g><title>libsystem_asl.dylib`_jump_dealloc (1 samples, 0.05%)</title><rect x="77.6377%" y="565" width="0.0467%" height="15" fill="rgb(205,221,10)" fg:x="1663" fg:w="1"/><text x="77.8877%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="77.6377%" y="549" width="0.0467%" height="15" fill="rgb(218,196,15)" fg:x="1663" fg:w="1"/><text x="77.8877%" y="559.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_new (1 samples, 0.05%)</title><rect x="77.6844%" y="549" width="0.0467%" height="15" fill="rgb(218,196,35)" fg:x="1664" fg:w="1"/><text x="77.9344%" y="559.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_make_page (1 samples, 0.05%)</title><rect x="77.6844%" y="533" width="0.0467%" height="15" fill="rgb(233,63,24)" fg:x="1664" fg:w="1"/><text x="77.9344%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="77.6844%" y="517" width="0.0467%" height="15" fill="rgb(225,8,4)" fg:x="1664" fg:w="1"/><text x="77.9344%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="77.6844%" y="501" width="0.0467%" height="15" fill="rgb(234,105,35)" fg:x="1664" fg:w="1"/><text x="77.9344%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="77.6844%" y="485" width="0.0467%" height="15" fill="rgb(236,21,32)" fg:x="1664" fg:w="1"/><text x="77.9344%" y="495.50"></text></g><g><title>libsystem_asl.dylib`asl_base_msg (2 samples, 0.09%)</title><rect x="77.6844%" y="565" width="0.0934%" height="15" fill="rgb(228,109,6)" fg:x="1664" fg:w="2"/><text x="77.9344%" y="575.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.05%)</title><rect x="77.7311%" y="549" width="0.0467%" height="15" fill="rgb(229,215,31)" fg:x="1665" fg:w="1"/><text x="77.9811%" y="559.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.05%)</title><rect x="77.7311%" y="533" width="0.0467%" height="15" fill="rgb(221,52,54)" fg:x="1665" fg:w="1"/><text x="77.9811%" y="543.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.05%)</title><rect x="77.7311%" y="517" width="0.0467%" height="15" fill="rgb(252,129,43)" fg:x="1665" fg:w="1"/><text x="77.9811%" y="527.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.05%)</title><rect x="77.7311%" y="501" width="0.0467%" height="15" fill="rgb(248,183,27)" fg:x="1665" fg:w="1"/><text x="77.9811%" y="511.50"></text></g><g><title>libsystem_c.dylib`__ultoa (1 samples, 0.05%)</title><rect x="77.7311%" y="485" width="0.0467%" height="15" fill="rgb(250,0,22)" fg:x="1665" fg:w="1"/><text x="77.9811%" y="495.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_fetch (1 samples, 0.05%)</title><rect x="77.7778%" y="565" width="0.0467%" height="15" fill="rgb(213,166,10)" fg:x="1666" fg:w="1"/><text x="78.0278%" y="575.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_merge (1 samples, 0.05%)</title><rect x="77.8245%" y="565" width="0.0467%" height="15" fill="rgb(207,163,36)" fg:x="1667" fg:w="1"/><text x="78.0745%" y="575.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_set_key_val_op (1 samples, 0.05%)</title><rect x="77.8245%" y="549" width="0.0467%" height="15" fill="rgb(208,122,22)" fg:x="1667" fg:w="1"/><text x="78.0745%" y="559.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_new_key_val_op (1 samples, 0.05%)</title><rect x="77.8245%" y="533" width="0.0467%" height="15" fill="rgb(207,104,49)" fg:x="1667" fg:w="1"/><text x="78.0745%" y="543.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_fetch (1 samples, 0.05%)</title><rect x="77.8711%" y="549" width="0.0467%" height="15" fill="rgb(248,211,50)" fg:x="1668" fg:w="1"/><text x="78.1211%" y="559.50"></text></g><g><title>libsystem_asl.dylib`asl_string_append_internal (2 samples, 0.09%)</title><rect x="77.9178%" y="549" width="0.0934%" height="15" fill="rgb(217,13,45)" fg:x="1669" fg:w="2"/><text x="78.1678%" y="559.50"></text></g><g><title>libsystem_asl.dylib`asl_string_append_no_encoding_len (1 samples, 0.05%)</title><rect x="77.9645%" y="533" width="0.0467%" height="15" fill="rgb(211,216,49)" fg:x="1670" fg:w="1"/><text x="78.2145%" y="543.50"></text></g><g><title>libsystem_asl.dylib`asl_string_append_no_encoding_len (1 samples, 0.05%)</title><rect x="78.0112%" y="533" width="0.0467%" height="15" fill="rgb(221,58,53)" fg:x="1671" fg:w="1"/><text x="78.2612%" y="543.50"></text></g><g><title>libsystem_asl.dylib`_asl_string_grow (1 samples, 0.05%)</title><rect x="78.0112%" y="517" width="0.0467%" height="15" fill="rgb(220,112,41)" fg:x="1671" fg:w="1"/><text x="78.2612%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.05%)</title><rect x="78.0112%" y="501" width="0.0467%" height="15" fill="rgb(236,38,28)" fg:x="1671" fg:w="1"/><text x="78.2612%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.05%)</title><rect x="78.0112%" y="485" width="0.0467%" height="15" fill="rgb(227,195,22)" fg:x="1671" fg:w="1"/><text x="78.2612%" y="495.50"></text></g><g><title>libsystem_asl.dylib`asl_string_new (3 samples, 0.14%)</title><rect x="78.0112%" y="549" width="0.1401%" height="15" fill="rgb(214,55,33)" fg:x="1671" fg:w="3"/><text x="78.2612%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.09%)</title><rect x="78.0579%" y="533" width="0.0934%" height="15" fill="rgb(248,80,13)" fg:x="1672" fg:w="2"/><text x="78.3079%" y="543.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_to_string_raw (7 samples, 0.33%)</title><rect x="77.8711%" y="565" width="0.3268%" height="15" fill="rgb(238,52,6)" fg:x="1668" fg:w="7"/><text x="78.1211%" y="575.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.05%)</title><rect x="78.1513%" y="549" width="0.0467%" height="15" fill="rgb(224,198,47)" fg:x="1674" fg:w="1"/><text x="78.4013%" y="559.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (32 samples, 1.49%)</title><rect x="76.7507%" y="581" width="1.4939%" height="15" fill="rgb(233,171,20)" fg:x="1644" fg:w="32"/><text x="77.0007%" y="591.50"></text></g><g><title>libsystem_asl.dylib`asl_string_release_return_bytes (1 samples, 0.05%)</title><rect x="78.1979%" y="565" width="0.0467%" height="15" fill="rgb(241,30,25)" fg:x="1675" fg:w="1"/><text x="78.4479%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="78.1979%" y="549" width="0.0467%" height="15" fill="rgb(207,171,38)" fg:x="1675" fg:w="1"/><text x="78.4479%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="78.1979%" y="533" width="0.0467%" height="15" fill="rgb(234,70,1)" fg:x="1675" fg:w="1"/><text x="78.4479%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="78.1979%" y="517" width="0.0467%" height="15" fill="rgb(232,178,18)" fg:x="1675" fg:w="1"/><text x="78.4479%" y="527.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (33 samples, 1.54%)</title><rect x="76.7507%" y="597" width="1.5406%" height="15" fill="rgb(241,78,40)" fg:x="1644" fg:w="33"/><text x="77.0007%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="78.2446%" y="581" width="0.0467%" height="15" fill="rgb(222,35,25)" fg:x="1676" fg:w="1"/><text x="78.4946%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="78.2446%" y="565" width="0.0467%" height="15" fill="rgb(207,92,16)" fg:x="1676" fg:w="1"/><text x="78.4946%" y="575.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_add_string (35 samples, 1.63%)</title><rect x="76.7040%" y="629" width="1.6340%" height="15" fill="rgb(216,59,51)" fg:x="1643" fg:w="35"/><text x="76.9540%" y="639.50"></text></g><g><title>libsystem_asl.dylib`asl_log (34 samples, 1.59%)</title><rect x="76.7507%" y="613" width="1.5873%" height="15" fill="rgb(213,80,28)" fg:x="1644" fg:w="34"/><text x="77.0007%" y="623.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_lookup (1 samples, 0.05%)</title><rect x="78.2913%" y="597" width="0.0467%" height="15" fill="rgb(220,93,7)" fg:x="1677" fg:w="1"/><text x="78.5413%" y="607.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_new (1 samples, 0.05%)</title><rect x="78.3380%" y="629" width="0.0467%" height="15" fill="rgb(225,24,44)" fg:x="1678" fg:w="1"/><text x="78.5880%" y="639.50"></text></g><g><title>libcoretls.dylib`asl_set_string_with_format (1 samples, 0.05%)</title><rect x="78.3380%" y="613" width="0.0467%" height="15" fill="rgb(243,74,40)" fg:x="1678" fg:w="1"/><text x="78.5880%" y="623.50"></text></g><g><title>libsystem_c.dylib`_vasprintf (1 samples, 0.05%)</title><rect x="78.3380%" y="597" width="0.0467%" height="15" fill="rgb(228,39,7)" fg:x="1678" fg:w="1"/><text x="78.5880%" y="607.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.05%)</title><rect x="78.3380%" y="581" width="0.0467%" height="15" fill="rgb(227,79,8)" fg:x="1678" fg:w="1"/><text x="78.5880%" y="591.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.05%)</title><rect x="78.3380%" y="565" width="0.0467%" height="15" fill="rgb(236,58,11)" fg:x="1678" fg:w="1"/><text x="78.5880%" y="575.50"></text></g><g><title>libcoretls.dylib`tls_metric_client_finished (37 samples, 1.73%)</title><rect x="76.7040%" y="645" width="1.7274%" height="15" fill="rgb(249,63,35)" fg:x="1643" fg:w="37"/><text x="76.9540%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.05%)</title><rect x="78.3847%" y="629" width="0.0467%" height="15" fill="rgb(252,114,16)" fg:x="1679" fg:w="1"/><text x="78.6347%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.05%)</title><rect x="78.3847%" y="613" width="0.0467%" height="15" fill="rgb(254,151,24)" fg:x="1679" fg:w="1"/><text x="78.6347%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_strncmp (1 samples, 0.05%)</title><rect x="78.3847%" y="597" width="0.0467%" height="15" fill="rgb(253,54,39)" fg:x="1679" fg:w="1"/><text x="78.6347%" y="607.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_mach_msg (1 samples, 0.05%)</title><rect x="78.4314%" y="533" width="0.0467%" height="15" fill="rgb(243,25,45)" fg:x="1680" fg:w="1"/><text x="78.6814%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.05%)</title><rect x="78.4314%" y="517" width="0.0467%" height="15" fill="rgb(234,134,9)" fg:x="1680" fg:w="1"/><text x="78.6814%" y="527.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (2 samples, 0.09%)</title><rect x="78.4314%" y="581" width="0.0934%" height="15" fill="rgb(227,166,31)" fg:x="1680" fg:w="2"/><text x="78.6814%" y="591.50"></text></g><g><title>libxpc.dylib`xpc_pipe_routine (2 samples, 0.09%)</title><rect x="78.4314%" y="565" width="0.0934%" height="15" fill="rgb(245,143,41)" fg:x="1680" fg:w="2"/><text x="78.6814%" y="575.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (2 samples, 0.09%)</title><rect x="78.4314%" y="549" width="0.0934%" height="15" fill="rgb(238,181,32)" fg:x="1680" fg:w="2"/><text x="78.6814%" y="559.50"></text></g><g><title>libxpc.dylib`xpc_receive_mach_msg (1 samples, 0.05%)</title><rect x="78.4781%" y="533" width="0.0467%" height="15" fill="rgb(224,113,18)" fg:x="1681" fg:w="1"/><text x="78.7281%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (1 samples, 0.05%)</title><rect x="78.4781%" y="517" width="0.0467%" height="15" fill="rgb(240,229,28)" fg:x="1681" fg:w="1"/><text x="78.7281%" y="527.50"></text></g><g><title>libsystem_asl.dylib`_asl_server_message (1 samples, 0.05%)</title><rect x="78.5247%" y="581" width="0.0467%" height="15" fill="rgb(250,185,3)" fg:x="1682" fg:w="1"/><text x="78.7747%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.05%)</title><rect x="78.5247%" y="565" width="0.0467%" height="15" fill="rgb(212,59,25)" fg:x="1682" fg:w="1"/><text x="78.7747%" y="575.50"></text></g><g><title>libsystem_asl.dylib`asl_base_msg (1 samples, 0.05%)</title><rect x="78.5714%" y="581" width="0.0467%" height="15" fill="rgb(221,87,20)" fg:x="1683" fg:w="1"/><text x="78.8214%" y="591.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_set_key_val_op (1 samples, 0.05%)</title><rect x="78.5714%" y="565" width="0.0467%" height="15" fill="rgb(213,74,28)" fg:x="1683" fg:w="1"/><text x="78.8214%" y="575.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_new_key_val_op (1 samples, 0.05%)</title><rect x="78.5714%" y="549" width="0.0467%" height="15" fill="rgb(224,132,34)" fg:x="1683" fg:w="1"/><text x="78.8214%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.05%)</title><rect x="78.5714%" y="533" width="0.0467%" height="15" fill="rgb(222,101,24)" fg:x="1683" fg:w="1"/><text x="78.8214%" y="543.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (43 samples, 2.01%)</title><rect x="76.6573%" y="661" width="2.0075%" height="15" fill="rgb(254,142,4)" fg:x="1642" fg:w="43"/><text x="76.9073%" y="671.50">l..</text></g><g><title>libcoretls.dylib`tls_metric_event_done (5 samples, 0.23%)</title><rect x="78.4314%" y="645" width="0.2334%" height="15" fill="rgb(230,229,49)" fg:x="1680" fg:w="5"/><text x="78.6814%" y="655.50"></text></g><g><title>libsystem_asl.dylib`asl_log (5 samples, 0.23%)</title><rect x="78.4314%" y="629" width="0.2334%" height="15" fill="rgb(238,70,47)" fg:x="1680" fg:w="5"/><text x="78.6814%" y="639.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (5 samples, 0.23%)</title><rect x="78.4314%" y="613" width="0.2334%" height="15" fill="rgb(231,160,17)" fg:x="1680" fg:w="5"/><text x="78.6814%" y="623.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (5 samples, 0.23%)</title><rect x="78.4314%" y="597" width="0.2334%" height="15" fill="rgb(218,68,53)" fg:x="1680" fg:w="5"/><text x="78.6814%" y="607.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_to_string_raw (1 samples, 0.05%)</title><rect x="78.6181%" y="581" width="0.0467%" height="15" fill="rgb(236,111,10)" fg:x="1684" fg:w="1"/><text x="78.8681%" y="591.50"></text></g><g><title>libsystem_asl.dylib`asl_string_append_internal (1 samples, 0.05%)</title><rect x="78.6181%" y="565" width="0.0467%" height="15" fill="rgb(224,34,41)" fg:x="1684" fg:w="1"/><text x="78.8681%" y="575.50"></text></g><g><title>libcoretls.dylib`SSLDecodeInt (1 samples, 0.05%)</title><rect x="78.6648%" y="645" width="0.0467%" height="15" fill="rgb(241,118,19)" fg:x="1685" fg:w="1"/><text x="78.9148%" y="655.50"></text></g><g><title>libcoretls.dylib`SSLProcessCertificate (1 samples, 0.05%)</title><rect x="78.7115%" y="645" width="0.0467%" height="15" fill="rgb(238,129,25)" fg:x="1686" fg:w="1"/><text x="78.9615%" y="655.50"></text></g><g><title>libcoretls.dylib`SSLDecodeBufferList (1 samples, 0.05%)</title><rect x="78.7115%" y="629" width="0.0467%" height="15" fill="rgb(238,22,31)" fg:x="1686" fg:w="1"/><text x="78.9615%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="78.7115%" y="613" width="0.0467%" height="15" fill="rgb(222,174,48)" fg:x="1686" fg:w="1"/><text x="78.9615%" y="623.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.05%)</title><rect x="78.7582%" y="581" width="0.0467%" height="15" fill="rgb(206,152,40)" fg:x="1687" fg:w="1"/><text x="79.0082%" y="591.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (1 samples, 0.05%)</title><rect x="78.7582%" y="565" width="0.0467%" height="15" fill="rgb(218,99,54)" fg:x="1687" fg:w="1"/><text x="79.0082%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (1 samples, 0.05%)</title><rect x="78.7582%" y="549" width="0.0467%" height="15" fill="rgb(220,174,26)" fg:x="1687" fg:w="1"/><text x="79.0082%" y="559.50"></text></g><g><title>libcoretls.dylib`HMAC_Hmac (2 samples, 0.09%)</title><rect x="78.8049%" y="581" width="0.0934%" height="15" fill="rgb(245,116,9)" fg:x="1688" fg:w="2"/><text x="79.0549%" y="591.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (2 samples, 0.09%)</title><rect x="78.8049%" y="565" width="0.0934%" height="15" fill="rgb(209,72,35)" fg:x="1688" fg:w="2"/><text x="79.0549%" y="575.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (2 samples, 0.09%)</title><rect x="78.8049%" y="549" width="0.0934%" height="15" fill="rgb(226,126,21)" fg:x="1688" fg:w="2"/><text x="79.0549%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (2 samples, 0.09%)</title><rect x="78.8049%" y="533" width="0.0934%" height="15" fill="rgb(227,192,1)" fg:x="1688" fg:w="2"/><text x="79.0549%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="78.8515%" y="517" width="0.0467%" height="15" fill="rgb(237,180,29)" fg:x="1689" fg:w="1"/><text x="79.1015%" y="527.50"></text></g><g><title>libcoretls.dylib`HMAC_Update (1 samples, 0.05%)</title><rect x="78.8982%" y="581" width="0.0467%" height="15" fill="rgb(230,197,35)" fg:x="1690" fg:w="1"/><text x="79.1482%" y="591.50"></text></g><g><title>libcoretls.dylib`HashSHA256Update (1 samples, 0.05%)</title><rect x="78.8982%" y="565" width="0.0467%" height="15" fill="rgb(246,193,31)" fg:x="1690" fg:w="1"/><text x="79.1482%" y="575.50"></text></g><g><title>libcoretls.dylib`SSLProcessFinished (5 samples, 0.23%)</title><rect x="78.7582%" y="645" width="0.2334%" height="15" fill="rgb(241,36,4)" fg:x="1687" fg:w="5"/><text x="79.0082%" y="655.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (5 samples, 0.23%)</title><rect x="78.7582%" y="629" width="0.2334%" height="15" fill="rgb(241,130,17)" fg:x="1687" fg:w="5"/><text x="79.0082%" y="639.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (5 samples, 0.23%)</title><rect x="78.7582%" y="613" width="0.2334%" height="15" fill="rgb(206,137,32)" fg:x="1687" fg:w="5"/><text x="79.0082%" y="623.50"></text></g><g><title>libcoretls.dylib`tlsPHash (5 samples, 0.23%)</title><rect x="78.7582%" y="597" width="0.2334%" height="15" fill="rgb(237,228,51)" fg:x="1687" fg:w="5"/><text x="79.0082%" y="607.50"></text></g><g><title>libcoretls.dylib`HashSHA256Init (1 samples, 0.05%)</title><rect x="78.9449%" y="581" width="0.0467%" height="15" fill="rgb(243,6,42)" fg:x="1691" fg:w="1"/><text x="79.1949%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.05%)</title><rect x="78.9916%" y="549" width="0.0467%" height="15" fill="rgb(251,74,28)" fg:x="1692" fg:w="1"/><text x="79.2416%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv (1 samples, 0.05%)</title><rect x="79.0383%" y="549" width="0.0467%" height="15" fill="rgb(218,20,49)" fg:x="1693" fg:w="1"/><text x="79.2883%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only (5 samples, 0.23%)</title><rect x="78.9916%" y="565" width="0.2334%" height="15" fill="rgb(238,28,14)" fg:x="1692" fg:w="5"/><text x="79.2416%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.14%)</title><rect x="79.0850%" y="549" width="0.1401%" height="15" fill="rgb(229,40,46)" fg:x="1694" fg:w="3"/><text x="79.3350%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (3 samples, 0.14%)</title><rect x="79.5985%" y="533" width="0.1401%" height="15" fill="rgb(244,195,20)" fg:x="1705" fg:w="3"/><text x="79.8485%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (10 samples, 0.47%)</title><rect x="79.7386%" y="533" width="0.4669%" height="15" fill="rgb(253,56,35)" fg:x="1708" fg:w="10"/><text x="79.9886%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_shift_right (1 samples, 0.05%)</title><rect x="80.2054%" y="533" width="0.0467%" height="15" fill="rgb(210,149,44)" fg:x="1718" fg:w="1"/><text x="80.4554%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (5 samples, 0.23%)</title><rect x="80.2521%" y="533" width="0.2334%" height="15" fill="rgb(240,135,12)" fg:x="1719" fg:w="5"/><text x="80.5021%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_div2_ws (2 samples, 0.09%)</title><rect x="80.4855%" y="533" width="0.0934%" height="15" fill="rgb(251,24,50)" fg:x="1724" fg:w="2"/><text x="80.7355%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.05%)</title><rect x="80.5789%" y="533" width="0.0467%" height="15" fill="rgb(243,200,47)" fg:x="1726" fg:w="1"/><text x="80.8289%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (27 samples, 1.26%)</title><rect x="79.4118%" y="549" width="1.2605%" height="15" fill="rgb(224,166,26)" fg:x="1701" fg:w="27"/><text x="79.6618%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="80.6256%" y="533" width="0.0467%" height="15" fill="rgb(233,0,47)" fg:x="1727" fg:w="1"/><text x="80.8756%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_add (5 samples, 0.23%)</title><rect x="80.7190%" y="533" width="0.2334%" height="15" fill="rgb(253,80,5)" fg:x="1729" fg:w="5"/><text x="80.9690%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (12 samples, 0.56%)</title><rect x="80.9524%" y="533" width="0.5602%" height="15" fill="rgb(214,133,25)" fg:x="1734" fg:w="12"/><text x="81.2024%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (11 samples, 0.51%)</title><rect x="81.5126%" y="533" width="0.5135%" height="15" fill="rgb(209,27,14)" fg:x="1746" fg:w="11"/><text x="81.7626%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (2 samples, 0.09%)</title><rect x="82.0261%" y="533" width="0.0934%" height="15" fill="rgb(219,102,51)" fg:x="1757" fg:w="2"/><text x="82.2761%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (34 samples, 1.59%)</title><rect x="80.6723%" y="549" width="1.5873%" height="15" fill="rgb(237,18,16)" fg:x="1728" fg:w="34"/><text x="80.9223%" y="559.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (3 samples, 0.14%)</title><rect x="82.1195%" y="533" width="0.1401%" height="15" fill="rgb(241,85,17)" fg:x="1759" fg:w="3"/><text x="82.3695%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (46 samples, 2.15%)</title><rect x="82.2596%" y="549" width="2.1475%" height="15" fill="rgb(236,90,42)" fg:x="1762" fg:w="46"/><text x="82.5096%" y="559.50">l..</text></g><g><title>libcorecrypto.dylib`ccn_n (2 samples, 0.09%)</title><rect x="84.4071%" y="549" width="0.0934%" height="15" fill="rgb(249,57,21)" fg:x="1808" fg:w="2"/><text x="84.6571%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_mul (1 samples, 0.05%)</title><rect x="84.5005%" y="549" width="0.0467%" height="15" fill="rgb(243,12,36)" fg:x="1810" fg:w="1"/><text x="84.7505%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (21 samples, 0.98%)</title><rect x="84.5472%" y="549" width="0.9804%" height="15" fill="rgb(253,128,47)" fg:x="1811" fg:w="21"/><text x="84.7972%" y="559.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.05%)</title><rect x="85.5275%" y="549" width="0.0467%" height="15" fill="rgb(207,33,20)" fg:x="1832" fg:w="1"/><text x="85.7775%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.05%)</title><rect x="85.5742%" y="533" width="0.0467%" height="15" fill="rgb(233,215,35)" fg:x="1833" fg:w="1"/><text x="85.8242%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv (1 samples, 0.05%)</title><rect x="85.6209%" y="533" width="0.0467%" height="15" fill="rgb(249,188,52)" fg:x="1834" fg:w="1"/><text x="85.8709%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (5 samples, 0.23%)</title><rect x="85.6676%" y="533" width="0.2334%" height="15" fill="rgb(225,12,32)" fg:x="1835" fg:w="5"/><text x="85.9176%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv (8 samples, 0.37%)</title><rect x="85.5742%" y="549" width="0.3735%" height="15" fill="rgb(247,98,14)" fg:x="1833" fg:w="8"/><text x="85.8242%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="85.9010%" y="533" width="0.0467%" height="15" fill="rgb(247,219,48)" fg:x="1840" fg:w="1"/><text x="86.1510%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="85.9010%" y="517" width="0.0467%" height="15" fill="rgb(253,60,48)" fg:x="1840" fg:w="1"/><text x="86.1510%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="85.9010%" y="501" width="0.0467%" height="15" fill="rgb(245,15,52)" fg:x="1840" fg:w="1"/><text x="86.1510%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.05%)</title><rect x="85.9010%" y="485" width="0.0467%" height="15" fill="rgb(220,133,28)" fg:x="1840" fg:w="1"/><text x="86.1510%" y="495.50"></text></g><g><title>libcorecrypto.dylib`cczp_sqr_ws (1 samples, 0.05%)</title><rect x="85.9477%" y="549" width="0.0467%" height="15" fill="rgb(217,180,4)" fg:x="1841" fg:w="1"/><text x="86.1977%" y="559.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.05%)</title><rect x="85.9944%" y="549" width="0.0467%" height="15" fill="rgb(251,24,1)" fg:x="1842" fg:w="1"/><text x="86.2444%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult (147 samples, 6.86%)</title><rect x="79.2250%" y="565" width="6.8627%" height="15" fill="rgb(212,185,49)" fg:x="1697" fg:w="147"/><text x="79.4750%" y="575.50">libcorecr..</text></g><g><title>libcorecrypto.dylib`twin_mult_normalize (1 samples, 0.05%)</title><rect x="86.0411%" y="549" width="0.0467%" height="15" fill="rgb(215,175,22)" fg:x="1843" fg:w="1"/><text x="86.2911%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.05%)</title><rect x="86.0411%" y="533" width="0.0467%" height="15" fill="rgb(250,205,14)" fg:x="1843" fg:w="1"/><text x="86.2911%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_neg (1 samples, 0.05%)</title><rect x="86.2278%" y="533" width="0.0467%" height="15" fill="rgb(225,211,22)" fg:x="1847" fg:w="1"/><text x="86.4778%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul1 (1 samples, 0.05%)</title><rect x="86.2745%" y="533" width="0.0467%" height="15" fill="rgb(251,179,42)" fg:x="1848" fg:w="1"/><text x="86.5245%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub (1 samples, 0.05%)</title><rect x="86.3212%" y="533" width="0.0467%" height="15" fill="rgb(208,216,51)" fg:x="1849" fg:w="1"/><text x="86.5712%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv (7 samples, 0.33%)</title><rect x="86.0878%" y="565" width="0.3268%" height="15" fill="rgb(235,36,11)" fg:x="1844" fg:w="7"/><text x="86.3378%" y="575.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (7 samples, 0.33%)</title><rect x="86.0878%" y="549" width="0.3268%" height="15" fill="rgb(213,189,28)" fg:x="1844" fg:w="7"/><text x="86.3378%" y="559.50"></text></g><g><title>libcorecrypto.dylib`update (1 samples, 0.05%)</title><rect x="86.3679%" y="533" width="0.0467%" height="15" fill="rgb(227,203,42)" fg:x="1850" fg:w="1"/><text x="86.6179%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cczp_modn (1 samples, 0.05%)</title><rect x="86.4146%" y="565" width="0.0467%" height="15" fill="rgb(244,72,36)" fg:x="1851" fg:w="1"/><text x="86.6646%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccn_div_use_recip_ws (1 samples, 0.05%)</title><rect x="86.4146%" y="549" width="0.0467%" height="15" fill="rgb(213,53,17)" fg:x="1851" fg:w="1"/><text x="86.6646%" y="559.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeMessage (168 samples, 7.84%)</title><rect x="78.6648%" y="661" width="7.8431%" height="15" fill="rgb(207,167,3)" fg:x="1685" fg:w="168"/><text x="78.9148%" y="671.50">libcoretls...</text></g><g><title>libcoretls.dylib`SSLProcessServerKeyExchange (161 samples, 7.52%)</title><rect x="78.9916%" y="645" width="7.5163%" height="15" fill="rgb(216,98,30)" fg:x="1692" fg:w="161"/><text x="79.2416%" y="655.50">libcoretls..</text></g><g><title>libcoretls.dylib`sslRawVerify (161 samples, 7.52%)</title><rect x="78.9916%" y="629" width="7.5163%" height="15" fill="rgb(236,123,15)" fg:x="1692" fg:w="161"/><text x="79.2416%" y="639.50">libcoretls..</text></g><g><title>libcorecrypto.dylib`ccec_verify (161 samples, 7.52%)</title><rect x="78.9916%" y="613" width="7.5163%" height="15" fill="rgb(248,81,50)" fg:x="1692" fg:w="161"/><text x="79.2416%" y="623.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_verify_digest (161 samples, 7.52%)</title><rect x="78.9916%" y="597" width="7.5163%" height="15" fill="rgb(214,120,4)" fg:x="1692" fg:w="161"/><text x="79.2416%" y="607.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`ccec_verify_internal (161 samples, 7.52%)</title><rect x="78.9916%" y="581" width="7.5163%" height="15" fill="rgb(208,179,34)" fg:x="1692" fg:w="161"/><text x="79.2416%" y="591.50">libcorecry..</text></g><g><title>libcorecrypto.dylib`cczp_mul (1 samples, 0.05%)</title><rect x="86.4613%" y="565" width="0.0467%" height="15" fill="rgb(227,140,7)" fg:x="1852" fg:w="1"/><text x="86.7113%" y="575.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA1_compress (5 samples, 0.23%)</title><rect x="86.5079%" y="629" width="0.2334%" height="15" fill="rgb(214,22,6)" fg:x="1853" fg:w="5"/><text x="86.7579%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_update (2 samples, 0.09%)</title><rect x="86.7414%" y="629" width="0.0934%" height="15" fill="rgb(207,137,27)" fg:x="1858" fg:w="2"/><text x="86.9914%" y="639.50"></text></g><g><title>libcoretls.dylib`HashSHA1Update (8 samples, 0.37%)</title><rect x="86.5079%" y="645" width="0.3735%" height="15" fill="rgb(210,8,46)" fg:x="1853" fg:w="8"/><text x="86.7579%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="86.8347%" y="629" width="0.0467%" height="15" fill="rgb(240,16,54)" fg:x="1860" fg:w="1"/><text x="87.0847%" y="639.50"></text></g><g><title>libcoretls.dylib`HashSHA256Update (3 samples, 0.14%)</title><rect x="86.8814%" y="645" width="0.1401%" height="15" fill="rgb(211,209,29)" fg:x="1861" fg:w="3"/><text x="87.1314%" y="655.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA256_compress (3 samples, 0.14%)</title><rect x="86.8814%" y="629" width="0.1401%" height="15" fill="rgb(226,228,24)" fg:x="1861" fg:w="3"/><text x="87.1314%" y="639.50"></text></g><g><title>Security`SSLHandshakeProceed (1,113 samples, 51.96%)</title><rect x="35.3408%" y="709" width="51.9608%" height="15" fill="rgb(222,84,9)" fg:x="757" fg:w="1113"/><text x="35.5908%" y="719.50">Security`SSLHandshakeProceed</text></g><g><title>libcoretls.dylib`tls_handshake_process (419 samples, 19.56%)</title><rect x="67.7404%" y="693" width="19.5612%" height="15" fill="rgb(234,203,30)" fg:x="1451" fg:w="419"/><text x="67.9904%" y="703.50">libcoretls.dylib`tls_handshake_..</text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (419 samples, 19.56%)</title><rect x="67.7404%" y="677" width="19.5612%" height="15" fill="rgb(238,109,14)" fg:x="1451" fg:w="419"/><text x="67.9904%" y="687.50">libcoretls.dylib`SSLProcessHand..</text></g><g><title>libcoretls.dylib`SSLUpdateHandshakeMacs (17 samples, 0.79%)</title><rect x="86.5079%" y="661" width="0.7937%" height="15" fill="rgb(233,206,34)" fg:x="1853" fg:w="17"/><text x="86.7579%" y="671.50"></text></g><g><title>libcoretls.dylib`HashSHA384Update (6 samples, 0.28%)</title><rect x="87.0215%" y="645" width="0.2801%" height="15" fill="rgb(220,167,47)" fg:x="1864" fg:w="6"/><text x="87.2715%" y="655.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA512_compress_hwassist (6 samples, 0.28%)</title><rect x="87.0215%" y="629" width="0.2801%" height="15" fill="rgb(238,105,10)" fg:x="1864" fg:w="6"/><text x="87.2715%" y="639.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::SslStream&lt;S&gt;::handshake (1,116 samples, 52.10%)</title><rect x="35.2474%" y="741" width="52.1008%" height="15" fill="rgb(213,227,17)" fg:x="755" fg:w="1116"/><text x="35.4974%" y="751.50">rust_stock_tracker`security_framework::secure_transport::SslStream&lt;S&gt;::handshake</text></g><g><title>Security`SSLHandshake (1,116 samples, 52.10%)</title><rect x="35.2474%" y="725" width="52.1008%" height="15" fill="rgb(217,132,38)" fg:x="755" fg:w="1116"/><text x="35.4974%" y="735.50">Security`SSLHandshake</text></g><g><title>libcoretls.dylib`tls_handshake_continue (1 samples, 0.05%)</title><rect x="87.3016%" y="709" width="0.0467%" height="15" fill="rgb(242,146,4)" fg:x="1870" fg:w="1"/><text x="87.5516%" y="719.50"></text></g><g><title>Security`SecXPCDictionarySetCertificates (1 samples, 0.05%)</title><rect x="87.3483%" y="549" width="0.0467%" height="15" fill="rgb(212,61,9)" fg:x="1871" fg:w="1"/><text x="87.5983%" y="559.50"></text></g><g><title>libxpc.dylib`xpc_array_set_data (1 samples, 0.05%)</title><rect x="87.3483%" y="533" width="0.0467%" height="15" fill="rgb(247,126,22)" fg:x="1871" fg:w="1"/><text x="87.5983%" y="543.50"></text></g><g><title>libxpc.dylib`xpc_data_create (1 samples, 0.05%)</title><rect x="87.3483%" y="517" width="0.0467%" height="15" fill="rgb(220,196,2)" fg:x="1871" fg:w="1"/><text x="87.5983%" y="527.50"></text></g><g><title>libdispatch.dylib`dispatch_data_get_size (1 samples, 0.05%)</title><rect x="87.3483%" y="501" width="0.0467%" height="15" fill="rgb(208,46,4)" fg:x="1871" fg:w="1"/><text x="87.5983%" y="511.50"></text></g><g><title>CoreFoundation`CFGetTypeID (1 samples, 0.05%)</title><rect x="87.3950%" y="485" width="0.0467%" height="15" fill="rgb(252,104,46)" fg:x="1872" fg:w="1"/><text x="87.6450%" y="495.50"></text></g><g><title>CoreFoundation`CFStringGetCString (1 samples, 0.05%)</title><rect x="87.4416%" y="485" width="0.0467%" height="15" fill="rgb(237,152,48)" fg:x="1873" fg:w="1"/><text x="87.6916%" y="495.50"></text></g><g><title>CoreFoundation`CFStringGetLength (1 samples, 0.05%)</title><rect x="87.4883%" y="469" width="0.0467%" height="15" fill="rgb(221,59,37)" fg:x="1874" fg:w="1"/><text x="87.7383%" y="479.50"></text></g><g><title>CoreFoundation`_CFDataCreateDispatchData (2 samples, 0.09%)</title><rect x="87.5350%" y="453" width="0.0934%" height="15" fill="rgb(209,202,51)" fg:x="1875" fg:w="2"/><text x="87.7850%" y="463.50"></text></g><g><title>libdispatch.dylib`dispatch_data_create (2 samples, 0.09%)</title><rect x="87.5350%" y="437" width="0.0934%" height="15" fill="rgb(228,81,30)" fg:x="1875" fg:w="2"/><text x="87.7850%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (2 samples, 0.09%)</title><rect x="87.5350%" y="421" width="0.0934%" height="15" fill="rgb(227,42,39)" fg:x="1875" fg:w="2"/><text x="87.7850%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.05%)</title><rect x="87.5817%" y="405" width="0.0467%" height="15" fill="rgb(221,26,2)" fg:x="1876" fg:w="1"/><text x="87.8317%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="87.6284%" y="373" width="0.0467%" height="15" fill="rgb(254,61,31)" fg:x="1877" fg:w="1"/><text x="87.8784%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="87.6284%" y="357" width="0.0467%" height="15" fill="rgb(222,173,38)" fg:x="1877" fg:w="1"/><text x="87.8784%" y="367.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (5 samples, 0.23%)</title><rect x="87.4883%" y="485" width="0.2334%" height="15" fill="rgb(218,50,12)" fg:x="1874" fg:w="5"/><text x="87.7383%" y="495.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (4 samples, 0.19%)</title><rect x="87.5350%" y="469" width="0.1867%" height="15" fill="rgb(223,88,40)" fg:x="1875" fg:w="4"/><text x="87.7850%" y="479.50"></text></g><g><title>libxpc.dylib`xpc_data_create_with_dispatch_data (2 samples, 0.09%)</title><rect x="87.6284%" y="453" width="0.0934%" height="15" fill="rgb(237,54,19)" fg:x="1877" fg:w="2"/><text x="87.8784%" y="463.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (2 samples, 0.09%)</title><rect x="87.6284%" y="437" width="0.0934%" height="15" fill="rgb(251,129,25)" fg:x="1877" fg:w="2"/><text x="87.8784%" y="447.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (2 samples, 0.09%)</title><rect x="87.6284%" y="421" width="0.0934%" height="15" fill="rgb(238,97,19)" fg:x="1877" fg:w="2"/><text x="87.8784%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.09%)</title><rect x="87.6284%" y="405" width="0.0934%" height="15" fill="rgb(240,169,18)" fg:x="1877" fg:w="2"/><text x="87.8784%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="87.6284%" y="389" width="0.0934%" height="15" fill="rgb(230,187,49)" fg:x="1877" fg:w="2"/><text x="87.8784%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="87.6751%" y="373" width="0.0467%" height="15" fill="rgb(209,44,26)" fg:x="1878" fg:w="1"/><text x="87.9251%" y="383.50"></text></g><g><title>libdispatch.dylib`_os_object_retain (1 samples, 0.05%)</title><rect x="87.7218%" y="485" width="0.0467%" height="15" fill="rgb(244,0,6)" fg:x="1879" fg:w="1"/><text x="87.9718%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="87.7684%" y="485" width="0.0467%" height="15" fill="rgb(248,18,21)" fg:x="1880" fg:w="1"/><text x="88.0184%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="87.7684%" y="469" width="0.0467%" height="15" fill="rgb(245,180,19)" fg:x="1880" fg:w="1"/><text x="88.0184%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="87.7684%" y="453" width="0.0467%" height="15" fill="rgb(252,118,36)" fg:x="1880" fg:w="1"/><text x="88.0184%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="87.8151%" y="485" width="0.0467%" height="15" fill="rgb(210,224,19)" fg:x="1881" fg:w="1"/><text x="88.0651%" y="495.50"></text></g><g><title>Security`SecXPCDictionarySetPolicies (11 samples, 0.51%)</title><rect x="87.3950%" y="549" width="0.5135%" height="15" fill="rgb(218,30,24)" fg:x="1872" fg:w="11"/><text x="87.6450%" y="559.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (11 samples, 0.51%)</title><rect x="87.3950%" y="533" width="0.5135%" height="15" fill="rgb(219,75,50)" fg:x="1872" fg:w="11"/><text x="87.6450%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __apply:context:] (11 samples, 0.51%)</title><rect x="87.3950%" y="517" width="0.5135%" height="15" fill="rgb(234,72,50)" fg:x="1872" fg:w="11"/><text x="87.6450%" y="527.50"></text></g><g><title>CoreFoundation`__CFXPCDictionaryApplier (11 samples, 0.51%)</title><rect x="87.3950%" y="501" width="0.5135%" height="15" fill="rgb(219,100,48)" fg:x="1872" fg:w="11"/><text x="87.6450%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_insert (1 samples, 0.05%)</title><rect x="87.8618%" y="485" width="0.0467%" height="15" fill="rgb(253,5,41)" fg:x="1882" fg:w="1"/><text x="88.1118%" y="495.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke (13 samples, 0.61%)</title><rect x="87.3483%" y="565" width="0.6069%" height="15" fill="rgb(247,181,11)" fg:x="1871" fg:w="13"/><text x="87.5983%" y="575.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_set_double (1 samples, 0.05%)</title><rect x="87.9085%" y="549" width="0.0467%" height="15" fill="rgb(222,223,25)" fg:x="1883" fg:w="1"/><text x="88.1585%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_insert (1 samples, 0.05%)</title><rect x="87.9085%" y="533" width="0.0467%" height="15" fill="rgb(214,198,28)" fg:x="1883" fg:w="1"/><text x="88.1585%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="87.9085%" y="517" width="0.0467%" height="15" fill="rgb(230,46,43)" fg:x="1883" fg:w="1"/><text x="88.1585%" y="527.50"></text></g><g><title>CoreFoundation`CFGetTypeID (1 samples, 0.05%)</title><rect x="87.9552%" y="517" width="0.0467%" height="15" fill="rgb(233,65,53)" fg:x="1884" fg:w="1"/><text x="88.2052%" y="527.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.05%)</title><rect x="88.0019%" y="501" width="0.0467%" height="15" fill="rgb(221,121,27)" fg:x="1885" fg:w="1"/><text x="88.2519%" y="511.50"></text></g><g><title>Security`SecXPCDictionaryCopyArray (3 samples, 0.14%)</title><rect x="87.9552%" y="533" width="0.1401%" height="15" fill="rgb(247,70,47)" fg:x="1884" fg:w="3"/><text x="88.2052%" y="543.50"></text></g><g><title>Security`SecXPCDictionaryCopyPList (2 samples, 0.09%)</title><rect x="88.0019%" y="517" width="0.0934%" height="15" fill="rgb(228,85,35)" fg:x="1885" fg:w="2"/><text x="88.2519%" y="527.50"></text></g><g><title>Security`der_decode_plist (1 samples, 0.05%)</title><rect x="88.0486%" y="501" width="0.0467%" height="15" fill="rgb(209,50,18)" fg:x="1886" fg:w="1"/><text x="88.2986%" y="511.50"></text></g><g><title>CoreFoundation`__CFArrayCreateInit (1 samples, 0.05%)</title><rect x="88.0486%" y="485" width="0.0467%" height="15" fill="rgb(250,19,35)" fg:x="1886" fg:w="1"/><text x="88.2986%" y="495.50"></text></g><g><title>CoreFoundation`__CFAllocatorSystemAllocate (1 samples, 0.05%)</title><rect x="88.0486%" y="469" width="0.0467%" height="15" fill="rgb(253,107,29)" fg:x="1886" fg:w="1"/><text x="88.2986%" y="479.50"></text></g><g><title>Security`SecXPCDictionaryCopyArrayOptional (4 samples, 0.19%)</title><rect x="87.9552%" y="549" width="0.1867%" height="15" fill="rgb(252,179,29)" fg:x="1884" fg:w="4"/><text x="88.2052%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.05%)</title><rect x="88.0952%" y="533" width="0.0467%" height="15" fill="rgb(238,194,6)" fg:x="1887" fg:w="1"/><text x="88.3452%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_wire_f (1 samples, 0.05%)</title><rect x="88.0952%" y="517" width="0.0467%" height="15" fill="rgb(238,164,29)" fg:x="1887" fg:w="1"/><text x="88.3452%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.05%)</title><rect x="88.0952%" y="501" width="0.0467%" height="15" fill="rgb(224,25,9)" fg:x="1887" fg:w="1"/><text x="88.3452%" y="511.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (2 samples, 0.09%)</title><rect x="88.1419%" y="501" width="0.0934%" height="15" fill="rgb(244,153,23)" fg:x="1888" fg:w="2"/><text x="88.3919%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="88.1886%" y="485" width="0.0467%" height="15" fill="rgb(212,203,14)" fg:x="1889" fg:w="1"/><text x="88.4386%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="88.1886%" y="469" width="0.0467%" height="15" fill="rgb(220,164,20)" fg:x="1889" fg:w="1"/><text x="88.4386%" y="479.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (2 samples, 0.09%)</title><rect x="88.2353%" y="485" width="0.0934%" height="15" fill="rgb(222,203,48)" fg:x="1890" fg:w="2"/><text x="88.4853%" y="495.50"></text></g><g><title>Security`DERParseSequence (1 samples, 0.05%)</title><rect x="88.3287%" y="485" width="0.0467%" height="15" fill="rgb(215,159,22)" fg:x="1892" fg:w="1"/><text x="88.5787%" y="495.50"></text></g><g><title>Security`DERParseSequenceContent (1 samples, 0.05%)</title><rect x="88.3287%" y="469" width="0.0467%" height="15" fill="rgb(216,183,47)" fg:x="1892" fg:w="1"/><text x="88.5787%" y="479.50"></text></g><g><title>Security`DERParseSequenceContent (3 samples, 0.14%)</title><rect x="88.3754%" y="485" width="0.1401%" height="15" fill="rgb(229,195,25)" fg:x="1893" fg:w="3"/><text x="88.6254%" y="495.50"></text></g><g><title>Security`SecCEPBasicConstraints (1 samples, 0.05%)</title><rect x="88.5154%" y="485" width="0.0467%" height="15" fill="rgb(224,132,51)" fg:x="1896" fg:w="1"/><text x="88.7654%" y="495.50"></text></g><g><title>Security`DERParseSequence (1 samples, 0.05%)</title><rect x="88.5154%" y="469" width="0.0467%" height="15" fill="rgb(240,63,7)" fg:x="1896" fg:w="1"/><text x="88.7654%" y="479.50"></text></g><g><title>Security`DERParseSequenceContent (1 samples, 0.05%)</title><rect x="88.5154%" y="453" width="0.0467%" height="15" fill="rgb(249,182,41)" fg:x="1896" fg:w="1"/><text x="88.7654%" y="463.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.05%)</title><rect x="88.5154%" y="437" width="0.0467%" height="15" fill="rgb(243,47,26)" fg:x="1896" fg:w="1"/><text x="88.7654%" y="447.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (1 samples, 0.05%)</title><rect x="88.5621%" y="485" width="0.0467%" height="15" fill="rgb(233,48,2)" fg:x="1897" fg:w="1"/><text x="88.8121%" y="495.50"></text></g><g><title>Security`parseGeneralNamesContent (1 samples, 0.05%)</title><rect x="88.5621%" y="469" width="0.0467%" height="15" fill="rgb(244,165,34)" fg:x="1897" fg:w="1"/><text x="88.8121%" y="479.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (1 samples, 0.05%)</title><rect x="88.5621%" y="453" width="0.0467%" height="15" fill="rgb(207,89,7)" fg:x="1897" fg:w="1"/><text x="88.8121%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (1 samples, 0.05%)</title><rect x="88.5621%" y="437" width="0.0467%" height="15" fill="rgb(244,117,36)" fg:x="1897" fg:w="1"/><text x="88.8121%" y="447.50"></text></g><g><title>Security`SecCEPSubjectAltName (1 samples, 0.05%)</title><rect x="88.6088%" y="485" width="0.0467%" height="15" fill="rgb(226,144,34)" fg:x="1898" fg:w="1"/><text x="88.8588%" y="495.50"></text></g><g><title>Security`SecCertificateParseGeneralNames (1 samples, 0.05%)</title><rect x="88.6088%" y="469" width="0.0467%" height="15" fill="rgb(213,23,19)" fg:x="1898" fg:w="1"/><text x="88.8588%" y="479.50"></text></g><g><title>Security`DERDecodeSeqNext (1 samples, 0.05%)</title><rect x="88.6088%" y="453" width="0.0467%" height="15" fill="rgb(217,75,12)" fg:x="1898" fg:w="1"/><text x="88.8588%" y="463.50"></text></g><g><title>Security`createNormalizedX501Name (3 samples, 0.14%)</title><rect x="88.6555%" y="485" width="0.1401%" height="15" fill="rgb(224,159,17)" fg:x="1899" fg:w="3"/><text x="88.9055%" y="495.50"></text></g><g><title>Security`SecCertificateParse (14 samples, 0.65%)</title><rect x="88.2353%" y="501" width="0.6536%" height="15" fill="rgb(217,118,1)" fg:x="1890" fg:w="14"/><text x="88.4853%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.09%)</title><rect x="88.7955%" y="485" width="0.0934%" height="15" fill="rgb(232,180,48)" fg:x="1902" fg:w="2"/><text x="89.0455%" y="495.50"></text></g><g><title>Security`SecCertificateCreateWithBytes (17 samples, 0.79%)</title><rect x="88.1419%" y="517" width="0.7937%" height="15" fill="rgb(230,27,33)" fg:x="1888" fg:w="17"/><text x="88.3919%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="88.8889%" y="501" width="0.0467%" height="15" fill="rgb(205,31,21)" fg:x="1904" fg:w="1"/><text x="89.1389%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="88.9356%" y="517" width="0.0467%" height="15" fill="rgb(253,59,4)" fg:x="1905" fg:w="1"/><text x="89.1856%" y="527.50"></text></g><g><title>Security`SecCertificateCreateWithXPCArrayAtIndex (19 samples, 0.89%)</title><rect x="88.1419%" y="533" width="0.8870%" height="15" fill="rgb(224,201,9)" fg:x="1888" fg:w="19"/><text x="88.3919%" y="543.50"></text></g><g><title>libxpc.dylib`xpc_array_get_data (1 samples, 0.05%)</title><rect x="88.9823%" y="517" width="0.0467%" height="15" fill="rgb(229,206,30)" fg:x="1906" fg:w="1"/><text x="89.2323%" y="527.50"></text></g><g><title>libxpc.dylib`xpc_data_get_bytes_ptr (1 samples, 0.05%)</title><rect x="88.9823%" y="501" width="0.0467%" height="15" fill="rgb(212,67,47)" fg:x="1906" fg:w="1"/><text x="89.2323%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_data_get_flattened_bytes_4libxpc (1 samples, 0.05%)</title><rect x="88.9823%" y="485" width="0.0467%" height="15" fill="rgb(211,96,50)" fg:x="1906" fg:w="1"/><text x="89.2323%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_wire_f (1 samples, 0.05%)</title><rect x="89.0289%" y="517" width="0.0467%" height="15" fill="rgb(252,114,18)" fg:x="1907" fg:w="1"/><text x="89.2789%" y="527.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$strnlen (1 samples, 0.05%)</title><rect x="89.0289%" y="501" width="0.0467%" height="15" fill="rgb(223,58,37)" fg:x="1907" fg:w="1"/><text x="89.2789%" y="511.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$_os_object_alloc_realized (1 samples, 0.05%)</title><rect x="89.0756%" y="485" width="0.0467%" height="15" fill="rgb(237,70,4)" fg:x="1908" fg:w="1"/><text x="89.3256%" y="495.50"></text></g><g><title>Security`SecXPCDictionaryCopyChainOptional (22 samples, 1.03%)</title><rect x="88.1419%" y="549" width="1.0271%" height="15" fill="rgb(244,85,46)" fg:x="1888" fg:w="22"/><text x="88.3919%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (3 samples, 0.14%)</title><rect x="89.0289%" y="533" width="0.1401%" height="15" fill="rgb(223,39,52)" fg:x="1907" fg:w="3"/><text x="89.2789%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value_and_vend (2 samples, 0.09%)</title><rect x="89.0756%" y="517" width="0.0934%" height="15" fill="rgb(218,200,14)" fg:x="1908" fg:w="2"/><text x="89.3256%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value (2 samples, 0.09%)</title><rect x="89.0756%" y="501" width="0.0934%" height="15" fill="rgb(208,171,16)" fg:x="1908" fg:w="2"/><text x="89.3256%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_array_deserialize (1 samples, 0.05%)</title><rect x="89.1223%" y="485" width="0.0467%" height="15" fill="rgb(234,200,18)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_data_deserialize (1 samples, 0.05%)</title><rect x="89.1223%" y="469" width="0.0467%" height="15" fill="rgb(228,45,11)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="479.50"></text></g><g><title>libxpc.dylib`xpc_data_create (1 samples, 0.05%)</title><rect x="89.1223%" y="453" width="0.0467%" height="15" fill="rgb(237,182,11)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="463.50"></text></g><g><title>libdispatch.dylib`dispatch_data_create_alloc (1 samples, 0.05%)</title><rect x="89.1223%" y="437" width="0.0467%" height="15" fill="rgb(241,175,49)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="447.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.05%)</title><rect x="89.1223%" y="421" width="0.0467%" height="15" fill="rgb(247,38,35)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="431.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.05%)</title><rect x="89.1223%" y="405" width="0.0467%" height="15" fill="rgb(228,39,49)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="89.1223%" y="389" width="0.0467%" height="15" fill="rgb(226,101,26)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="89.1223%" y="373" width="0.0467%" height="15" fill="rgb(206,141,19)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="89.1223%" y="357" width="0.0467%" height="15" fill="rgb(211,200,13)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.05%)</title><rect x="89.1223%" y="341" width="0.0467%" height="15" fill="rgb(241,121,6)" fg:x="1909" fg:w="1"/><text x="89.3723%" y="351.50"></text></g><g><title>CoreFoundation`CFAllocatorDeallocate (1 samples, 0.05%)</title><rect x="89.1690%" y="421" width="0.0467%" height="15" fill="rgb(234,221,29)" fg:x="1910" fg:w="1"/><text x="89.4190%" y="431.50"></text></g><g><title>CoreFoundation`CFDictionaryAddValue (3 samples, 0.14%)</title><rect x="89.1690%" y="469" width="0.1401%" height="15" fill="rgb(229,136,5)" fg:x="1910" fg:w="3"/><text x="89.4190%" y="479.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (3 samples, 0.14%)</title><rect x="89.1690%" y="453" width="0.1401%" height="15" fill="rgb(238,36,11)" fg:x="1910" fg:w="3"/><text x="89.4190%" y="463.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (3 samples, 0.14%)</title><rect x="89.1690%" y="437" width="0.1401%" height="15" fill="rgb(251,55,41)" fg:x="1910" fg:w="3"/><text x="89.4190%" y="447.50"></text></g><g><title>CoreFoundation`__CFBasicHashRehash (2 samples, 0.09%)</title><rect x="89.2157%" y="421" width="0.0934%" height="15" fill="rgb(242,34,40)" fg:x="1911" fg:w="2"/><text x="89.4657%" y="431.50"></text></g><g><title>CoreFoundation`CFDateCreate (1 samples, 0.05%)</title><rect x="89.3091%" y="453" width="0.0467%" height="15" fill="rgb(215,42,17)" fg:x="1913" fg:w="1"/><text x="89.5591%" y="463.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke_2 (31 samples, 1.45%)</title><rect x="87.9552%" y="565" width="1.4472%" height="15" fill="rgb(207,44,46)" fg:x="1884" fg:w="31"/><text x="88.2052%" y="575.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryOptional (5 samples, 0.23%)</title><rect x="89.1690%" y="549" width="0.2334%" height="15" fill="rgb(211,206,28)" fg:x="1910" fg:w="5"/><text x="89.4190%" y="559.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionary (5 samples, 0.23%)</title><rect x="89.1690%" y="533" width="0.2334%" height="15" fill="rgb(237,167,16)" fg:x="1910" fg:w="5"/><text x="89.4190%" y="543.50"></text></g><g><title>Security`SecXPCDictionaryCopyPList (5 samples, 0.23%)</title><rect x="89.1690%" y="517" width="0.2334%" height="15" fill="rgb(233,66,6)" fg:x="1910" fg:w="5"/><text x="89.4190%" y="527.50"></text></g><g><title>Security`der_decode_plist (5 samples, 0.23%)</title><rect x="89.1690%" y="501" width="0.2334%" height="15" fill="rgb(246,123,29)" fg:x="1910" fg:w="5"/><text x="89.4190%" y="511.50"></text></g><g><title>Security`der_decode_dictionary (5 samples, 0.23%)</title><rect x="89.1690%" y="485" width="0.2334%" height="15" fill="rgb(209,62,40)" fg:x="1910" fg:w="5"/><text x="89.4190%" y="495.50"></text></g><g><title>Security`der_decode_plist (2 samples, 0.09%)</title><rect x="89.3091%" y="469" width="0.0934%" height="15" fill="rgb(218,4,25)" fg:x="1913" fg:w="2"/><text x="89.5591%" y="479.50"></text></g><g><title>Security`der_decode_string (1 samples, 0.05%)</title><rect x="89.3557%" y="453" width="0.0467%" height="15" fill="rgb(253,91,49)" fg:x="1914" fg:w="1"/><text x="89.6057%" y="463.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.05%)</title><rect x="89.3557%" y="437" width="0.0467%" height="15" fill="rgb(228,155,29)" fg:x="1914" fg:w="1"/><text x="89.6057%" y="447.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.05%)</title><rect x="89.3557%" y="421" width="0.0467%" height="15" fill="rgb(243,57,37)" fg:x="1914" fg:w="1"/><text x="89.6057%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="89.3557%" y="405" width="0.0467%" height="15" fill="rgb(244,167,17)" fg:x="1914" fg:w="1"/><text x="89.6057%" y="415.50"></text></g><g><title>Security`securityd_create_message (1 samples, 0.05%)</title><rect x="89.4024%" y="565" width="0.0467%" height="15" fill="rgb(207,181,38)" fg:x="1915" fg:w="1"/><text x="89.6524%" y="575.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_set_uint64 (1 samples, 0.05%)</title><rect x="89.4024%" y="549" width="0.0467%" height="15" fill="rgb(211,8,23)" fg:x="1915" fg:w="1"/><text x="89.6524%" y="559.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$object_getClass (1 samples, 0.05%)</title><rect x="89.4024%" y="533" width="0.0467%" height="15" fill="rgb(235,11,44)" fg:x="1915" fg:w="1"/><text x="89.6524%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.05%)</title><rect x="89.4491%" y="501" width="0.0467%" height="15" fill="rgb(248,18,52)" fg:x="1916" fg:w="1"/><text x="89.6991%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (15 samples, 0.70%)</title><rect x="89.4958%" y="501" width="0.7003%" height="15" fill="rgb(208,4,7)" fg:x="1917" fg:w="15"/><text x="89.7458%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (15 samples, 0.70%)</title><rect x="89.4958%" y="485" width="0.7003%" height="15" fill="rgb(240,17,39)" fg:x="1917" fg:w="15"/><text x="89.7458%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (14 samples, 0.65%)</title><rect x="89.5425%" y="469" width="0.6536%" height="15" fill="rgb(207,170,3)" fg:x="1918" fg:w="14"/><text x="89.7925%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (14 samples, 0.65%)</title><rect x="89.5425%" y="453" width="0.6536%" height="15" fill="rgb(236,100,52)" fg:x="1918" fg:w="14"/><text x="89.7925%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="90.1961%" y="421" width="0.0467%" height="15" fill="rgb(246,78,51)" fg:x="1932" fg:w="1"/><text x="90.4461%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.05%)</title><rect x="90.1961%" y="405" width="0.0467%" height="15" fill="rgb(211,17,15)" fg:x="1932" fg:w="1"/><text x="90.4461%" y="415.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (2 samples, 0.09%)</title><rect x="90.1961%" y="469" width="0.0934%" height="15" fill="rgb(209,59,46)" fg:x="1932" fg:w="2"/><text x="90.4461%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.09%)</title><rect x="90.1961%" y="453" width="0.0934%" height="15" fill="rgb(210,92,25)" fg:x="1932" fg:w="2"/><text x="90.4461%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="90.1961%" y="437" width="0.0934%" height="15" fill="rgb(238,174,52)" fg:x="1932" fg:w="2"/><text x="90.4461%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="90.2428%" y="421" width="0.0467%" height="15" fill="rgb(230,73,7)" fg:x="1933" fg:w="1"/><text x="90.4928%" y="431.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (3 samples, 0.14%)</title><rect x="90.1961%" y="501" width="0.1401%" height="15" fill="rgb(243,124,40)" fg:x="1932" fg:w="3"/><text x="90.4461%" y="511.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (3 samples, 0.14%)</title><rect x="90.1961%" y="485" width="0.1401%" height="15" fill="rgb(244,170,11)" fg:x="1932" fg:w="3"/><text x="90.4461%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="90.2894%" y="469" width="0.0467%" height="15" fill="rgb(207,114,54)" fg:x="1934" fg:w="1"/><text x="90.5394%" y="479.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (25 samples, 1.17%)</title><rect x="89.4491%" y="533" width="1.1671%" height="15" fill="rgb(205,42,20)" fg:x="1916" fg:w="25"/><text x="89.6991%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (25 samples, 1.17%)</title><rect x="89.4491%" y="517" width="1.1671%" height="15" fill="rgb(230,30,28)" fg:x="1916" fg:w="25"/><text x="89.6991%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.28%)</title><rect x="90.3361%" y="501" width="0.2801%" height="15" fill="rgb(205,73,54)" fg:x="1935" fg:w="6"/><text x="90.5861%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (1 samples, 0.05%)</title><rect x="90.6162%" y="501" width="0.0467%" height="15" fill="rgb(254,227,23)" fg:x="1941" fg:w="1"/><text x="90.8662%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="90.6162%" y="485" width="0.0467%" height="15" fill="rgb(228,202,34)" fg:x="1941" fg:w="1"/><text x="90.8662%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.05%)</title><rect x="90.6629%" y="501" width="0.0467%" height="15" fill="rgb(222,225,37)" fg:x="1942" fg:w="1"/><text x="90.9129%" y="511.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (3 samples, 0.14%)</title><rect x="90.6162%" y="533" width="0.1401%" height="15" fill="rgb(221,14,54)" fg:x="1941" fg:w="3"/><text x="90.8662%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_dispose (3 samples, 0.14%)</title><rect x="90.6162%" y="517" width="0.1401%" height="15" fill="rgb(254,102,2)" fg:x="1941" fg:w="3"/><text x="90.8662%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="90.7096%" y="501" width="0.0467%" height="15" fill="rgb(232,104,17)" fg:x="1943" fg:w="1"/><text x="90.9596%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (1 samples, 0.05%)</title><rect x="90.7563%" y="501" width="0.0467%" height="15" fill="rgb(250,220,14)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="511.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.05%)</title><rect x="90.7563%" y="485" width="0.0467%" height="15" fill="rgb(241,158,9)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="495.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.05%)</title><rect x="90.7563%" y="469" width="0.0467%" height="15" fill="rgb(246,9,43)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="90.7563%" y="453" width="0.0467%" height="15" fill="rgb(206,73,33)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="90.7563%" y="437" width="0.0467%" height="15" fill="rgb(222,79,8)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="90.7563%" y="421" width="0.0467%" height="15" fill="rgb(234,8,54)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="90.7563%" y="405" width="0.0467%" height="15" fill="rgb(209,134,38)" fg:x="1944" fg:w="1"/><text x="91.0063%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__getpid (1 samples, 0.05%)</title><rect x="90.8030%" y="501" width="0.0467%" height="15" fill="rgb(230,127,29)" fg:x="1945" fg:w="1"/><text x="91.0530%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.05%)</title><rect x="90.8497%" y="501" width="0.0467%" height="15" fill="rgb(242,44,41)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.05%)</title><rect x="90.8497%" y="485" width="0.0467%" height="15" fill="rgb(222,56,43)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.05%)</title><rect x="90.8497%" y="469" width="0.0467%" height="15" fill="rgb(238,39,47)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="479.50"></text></g><g><title>libxpc.dylib`_xpc_array_serialize (1 samples, 0.05%)</title><rect x="90.8497%" y="453" width="0.0467%" height="15" fill="rgb(226,79,43)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="463.50"></text></g><g><title>libxpc.dylib`_xpc_array_serialize (1 samples, 0.05%)</title><rect x="90.8497%" y="437" width="0.0467%" height="15" fill="rgb(242,105,53)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="447.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.05%)</title><rect x="90.8497%" y="421" width="0.0467%" height="15" fill="rgb(251,132,46)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="431.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.05%)</title><rect x="90.8497%" y="405" width="0.0467%" height="15" fill="rgb(231,77,14)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.05%)</title><rect x="90.8497%" y="389" width="0.0467%" height="15" fill="rgb(240,135,9)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.05%)</title><rect x="90.8497%" y="373" width="0.0467%" height="15" fill="rgb(248,109,14)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="90.8497%" y="357" width="0.0467%" height="15" fill="rgb(227,146,52)" fg:x="1946" fg:w="1"/><text x="91.0997%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_connection_pack_message (4 samples, 0.19%)</title><rect x="90.7563%" y="533" width="0.1867%" height="15" fill="rgb(232,54,3)" fg:x="1944" fg:w="4"/><text x="91.0063%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (4 samples, 0.19%)</title><rect x="90.7563%" y="517" width="0.1867%" height="15" fill="rgb(229,201,43)" fg:x="1944" fg:w="4"/><text x="91.0063%" y="527.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply_f (1 samples, 0.05%)</title><rect x="90.8964%" y="501" width="0.0467%" height="15" fill="rgb(252,161,33)" fg:x="1947" fg:w="1"/><text x="91.1464%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.05%)</title><rect x="90.8964%" y="485" width="0.0467%" height="15" fill="rgb(226,146,40)" fg:x="1947" fg:w="1"/><text x="91.1464%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_f_apply (1 samples, 0.05%)</title><rect x="90.8964%" y="469" width="0.0467%" height="15" fill="rgb(219,47,25)" fg:x="1947" fg:w="1"/><text x="91.1464%" y="479.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_apply (1 samples, 0.05%)</title><rect x="90.8964%" y="453" width="0.0467%" height="15" fill="rgb(250,135,13)" fg:x="1947" fg:w="1"/><text x="91.1464%" y="463.50"></text></g><g><title>Security`securityd_message_with_reply_sync (33 samples, 1.54%)</title><rect x="89.4491%" y="565" width="1.5406%" height="15" fill="rgb(219,229,18)" fg:x="1916" fg:w="33"/><text x="89.6991%" y="575.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (33 samples, 1.54%)</title><rect x="89.4491%" y="549" width="1.5406%" height="15" fill="rgb(217,152,27)" fg:x="1916" fg:w="33"/><text x="89.6991%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_connection_unpack_message (1 samples, 0.05%)</title><rect x="90.9430%" y="533" width="0.0467%" height="15" fill="rgb(225,71,47)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="543.50"></text></g><g><title>libxpc.dylib`xpc_receive_mach_msg (1 samples, 0.05%)</title><rect x="90.9430%" y="517" width="0.0467%" height="15" fill="rgb(220,139,14)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_payload_create_from_mach_msg (1 samples, 0.05%)</title><rect x="90.9430%" y="501" width="0.0467%" height="15" fill="rgb(247,54,32)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="511.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.05%)</title><rect x="90.9430%" y="485" width="0.0467%" height="15" fill="rgb(252,131,39)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="90.9430%" y="469" width="0.0467%" height="15" fill="rgb(210,108,39)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="90.9430%" y="453" width="0.0467%" height="15" fill="rgb(205,23,29)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="90.9430%" y="437" width="0.0467%" height="15" fill="rgb(246,139,46)" fg:x="1948" fg:w="1"/><text x="91.1930%" y="447.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.05%)</title><rect x="90.9897%" y="549" width="0.0467%" height="15" fill="rgb(250,81,26)" fg:x="1949" fg:w="1"/><text x="91.2397%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.09%)</title><rect x="91.0364%" y="533" width="0.0934%" height="15" fill="rgb(214,104,7)" fg:x="1950" fg:w="2"/><text x="91.2864%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="91.0831%" y="517" width="0.0467%" height="15" fill="rgb(233,189,8)" fg:x="1951" fg:w="1"/><text x="91.3331%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="91.0831%" y="501" width="0.0467%" height="15" fill="rgb(228,141,17)" fg:x="1951" fg:w="1"/><text x="91.3331%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="91.1298%" y="533" width="0.0467%" height="15" fill="rgb(247,157,1)" fg:x="1952" fg:w="1"/><text x="91.3798%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="91.1298%" y="517" width="0.0467%" height="15" fill="rgb(249,225,5)" fg:x="1952" fg:w="1"/><text x="91.3798%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="91.1298%" y="501" width="0.0467%" height="15" fill="rgb(242,55,13)" fg:x="1952" fg:w="1"/><text x="91.3798%" y="511.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.05%)</title><rect x="91.1765%" y="533" width="0.0467%" height="15" fill="rgb(230,49,50)" fg:x="1953" fg:w="1"/><text x="91.4265%" y="543.50"></text></g><g><title>libdispatch.dylib`-[OS_dispatch_data dealloc] (1 samples, 0.05%)</title><rect x="91.1765%" y="517" width="0.0467%" height="15" fill="rgb(241,111,38)" fg:x="1953" fg:w="1"/><text x="91.4265%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="91.1765%" y="501" width="0.0467%" height="15" fill="rgb(252,155,4)" fg:x="1953" fg:w="1"/><text x="91.4265%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="91.2232%" y="501" width="0.0467%" height="15" fill="rgb(212,69,32)" fg:x="1954" fg:w="1"/><text x="91.4732%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="91.2232%" y="485" width="0.0467%" height="15" fill="rgb(243,107,47)" fg:x="1954" fg:w="1"/><text x="91.4732%" y="495.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.05%)</title><rect x="91.2698%" y="437" width="0.0467%" height="15" fill="rgb(247,130,12)" fg:x="1955" fg:w="1"/><text x="91.5198%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.05%)</title><rect x="91.2698%" y="421" width="0.0467%" height="15" fill="rgb(233,74,16)" fg:x="1955" fg:w="1"/><text x="91.5198%" y="431.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.05%)</title><rect x="91.2698%" y="405" width="0.0467%" height="15" fill="rgb(208,58,18)" fg:x="1955" fg:w="1"/><text x="91.5198%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="91.3165%" y="437" width="0.0467%" height="15" fill="rgb(242,225,1)" fg:x="1956" fg:w="1"/><text x="91.5665%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="91.3165%" y="421" width="0.0467%" height="15" fill="rgb(249,39,40)" fg:x="1956" fg:w="1"/><text x="91.5665%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="91.3632%" y="421" width="0.0467%" height="15" fill="rgb(207,72,44)" fg:x="1957" fg:w="1"/><text x="91.6132%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="91.3632%" y="405" width="0.0467%" height="15" fill="rgb(215,193,12)" fg:x="1957" fg:w="1"/><text x="91.6132%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="91.3632%" y="389" width="0.0467%" height="15" fill="rgb(248,41,39)" fg:x="1957" fg:w="1"/><text x="91.6132%" y="399.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.05%)</title><rect x="91.4099%" y="373" width="0.0467%" height="15" fill="rgb(253,85,4)" fg:x="1958" fg:w="1"/><text x="91.6599%" y="383.50"></text></g><g><title>libdispatch.dylib`-[OS_dispatch_data dealloc] (1 samples, 0.05%)</title><rect x="91.4099%" y="357" width="0.0467%" height="15" fill="rgb(243,70,31)" fg:x="1958" fg:w="1"/><text x="91.6599%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (1 samples, 0.05%)</title><rect x="91.4099%" y="341" width="0.0467%" height="15" fill="rgb(253,195,26)" fg:x="1958" fg:w="1"/><text x="91.6599%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.05%)</title><rect x="91.4099%" y="325" width="0.0467%" height="15" fill="rgb(243,42,11)" fg:x="1958" fg:w="1"/><text x="91.6599%" y="335.50"></text></g><g><title>Security`SecOSStatusWith (89 samples, 4.15%)</title><rect x="87.3483%" y="613" width="4.1550%" height="15" fill="rgb(239,66,17)" fg:x="1871" fg:w="89"/><text x="87.5983%" y="623.50">Secur..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (89 samples, 4.15%)</title><rect x="87.3483%" y="597" width="4.1550%" height="15" fill="rgb(217,132,21)" fg:x="1871" fg:w="89"/><text x="87.5983%" y="607.50">Secur..</text></g><g><title>Security`securityd_send_sync_and_do (89 samples, 4.15%)</title><rect x="87.3483%" y="581" width="4.1550%" height="15" fill="rgb(252,202,21)" fg:x="1871" fg:w="89"/><text x="87.5983%" y="591.50">Secur..</text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (11 samples, 0.51%)</title><rect x="90.9897%" y="565" width="0.5135%" height="15" fill="rgb(233,98,36)" fg:x="1949" fg:w="11"/><text x="91.2397%" y="575.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (10 samples, 0.47%)</title><rect x="91.0364%" y="549" width="0.4669%" height="15" fill="rgb(216,153,54)" fg:x="1950" fg:w="10"/><text x="91.2864%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (6 samples, 0.28%)</title><rect x="91.2232%" y="533" width="0.2801%" height="15" fill="rgb(250,99,7)" fg:x="1954" fg:w="6"/><text x="91.4732%" y="543.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (6 samples, 0.28%)</title><rect x="91.2232%" y="517" width="0.2801%" height="15" fill="rgb(207,56,50)" fg:x="1954" fg:w="6"/><text x="91.4732%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (5 samples, 0.23%)</title><rect x="91.2698%" y="501" width="0.2334%" height="15" fill="rgb(244,61,34)" fg:x="1955" fg:w="5"/><text x="91.5198%" y="511.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (5 samples, 0.23%)</title><rect x="91.2698%" y="485" width="0.2334%" height="15" fill="rgb(241,50,38)" fg:x="1955" fg:w="5"/><text x="91.5198%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (5 samples, 0.23%)</title><rect x="91.2698%" y="469" width="0.2334%" height="15" fill="rgb(212,166,30)" fg:x="1955" fg:w="5"/><text x="91.5198%" y="479.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (5 samples, 0.23%)</title><rect x="91.2698%" y="453" width="0.2334%" height="15" fill="rgb(249,127,32)" fg:x="1955" fg:w="5"/><text x="91.5198%" y="463.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (3 samples, 0.14%)</title><rect x="91.3632%" y="437" width="0.1401%" height="15" fill="rgb(209,103,0)" fg:x="1957" fg:w="3"/><text x="91.6132%" y="447.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (2 samples, 0.09%)</title><rect x="91.4099%" y="421" width="0.0934%" height="15" fill="rgb(238,209,51)" fg:x="1958" fg:w="2"/><text x="91.6599%" y="431.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.09%)</title><rect x="91.4099%" y="405" width="0.0934%" height="15" fill="rgb(237,56,23)" fg:x="1958" fg:w="2"/><text x="91.6599%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (2 samples, 0.09%)</title><rect x="91.4099%" y="389" width="0.0934%" height="15" fill="rgb(215,153,46)" fg:x="1958" fg:w="2"/><text x="91.6599%" y="399.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$objc_msgSendSuper2 (1 samples, 0.05%)</title><rect x="91.4566%" y="373" width="0.0467%" height="15" fill="rgb(224,49,31)" fg:x="1959" fg:w="1"/><text x="91.7066%" y="383.50"></text></g><g><title>Security`SecTrustValidateInput (1 samples, 0.05%)</title><rect x="91.5033%" y="613" width="0.0467%" height="15" fill="rgb(250,18,42)" fg:x="1960" fg:w="1"/><text x="91.7533%" y="623.50"></text></g><g><title>Security`validate_array_of_items (1 samples, 0.05%)</title><rect x="91.5033%" y="597" width="0.0467%" height="15" fill="rgb(215,176,39)" fg:x="1960" fg:w="1"/><text x="91.7533%" y="607.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (91 samples, 4.25%)</title><rect x="87.3483%" y="629" width="4.2484%" height="15" fill="rgb(223,77,29)" fg:x="1871" fg:w="91"/><text x="87.5983%" y="639.50">Secur..</text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (1 samples, 0.05%)</title><rect x="91.5500%" y="613" width="0.0467%" height="15" fill="rgb(234,94,52)" fg:x="1961" fg:w="1"/><text x="91.8000%" y="623.50"></text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1,218 samples, 56.86%)</title><rect x="34.7806%" y="789" width="56.8627%" height="15" fill="rgb(220,154,50)" fg:x="745" fg:w="1218"/><text x="35.0306%" y="799.50">rust_stock_tracker`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1,216 samples, 56.77%)</title><rect x="34.8739%" y="773" width="56.7694%" height="15" fill="rgb(212,11,10)" fg:x="747" fg:w="1216"/><text x="35.1239%" y="783.50">rust_stock_tracker`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake</text></g><g><title>rust_stock_tracker`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1,215 samples, 56.72%)</title><rect x="34.9206%" y="757" width="56.7227%" height="15" fill="rgb(205,166,19)" fg:x="748" fg:w="1215"/><text x="35.1706%" y="767.50">rust_stock_tracker`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handsha..</text></g><g><title>rust_stock_tracker`security_framework::trust::SecTrust::evaluate_with_error (92 samples, 4.30%)</title><rect x="87.3483%" y="741" width="4.2951%" height="15" fill="rgb(244,198,16)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="751.50">rust_..</text></g><g><title>Security`SecTrustEvaluateInternal (92 samples, 4.30%)</title><rect x="87.3483%" y="725" width="4.2951%" height="15" fill="rgb(219,69,12)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="735.50">Secur..</text></g><g><title>Security`SecTrustEvaluateIfNecessary (92 samples, 4.30%)</title><rect x="87.3483%" y="709" width="4.2951%" height="15" fill="rgb(245,30,7)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="719.50">Secur..</text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (92 samples, 4.30%)</title><rect x="87.3483%" y="693" width="4.2951%" height="15" fill="rgb(218,221,48)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="703.50">libdi..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (92 samples, 4.30%)</title><rect x="87.3483%" y="677" width="4.2951%" height="15" fill="rgb(216,66,15)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="687.50">libdi..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke (92 samples, 4.30%)</title><rect x="87.3483%" y="661" width="4.2951%" height="15" fill="rgb(226,122,50)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="671.50">Secur..</text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (92 samples, 4.30%)</title><rect x="87.3483%" y="645" width="4.2951%" height="15" fill="rgb(239,156,16)" fg:x="1871" fg:w="92"/><text x="87.5983%" y="655.50">libsy..</text></g><g><title>libsystem_trace.dylib`_os_activity_create_addr (1 samples, 0.05%)</title><rect x="91.5966%" y="629" width="0.0467%" height="15" fill="rgb(224,27,38)" fg:x="1962" fg:w="1"/><text x="91.8466%" y="639.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_peer_hostname (1 samples, 0.05%)</title><rect x="91.6900%" y="757" width="0.0467%" height="15" fill="rgb(224,39,27)" fg:x="1964" fg:w="1"/><text x="91.9400%" y="767.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="91.7834%" y="725" width="0.0467%" height="15" fill="rgb(215,92,29)" fg:x="1966" fg:w="1"/><text x="92.0334%" y="735.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.05%)</title><rect x="91.8301%" y="709" width="0.0467%" height="15" fill="rgb(207,159,16)" fg:x="1967" fg:w="1"/><text x="92.0801%" y="719.50"></text></g><g><title>libcoretls.dylib`sslCipherSuiteGetKeyExchangeMethod (1 samples, 0.05%)</title><rect x="91.8768%" y="677" width="0.0467%" height="15" fill="rgb(238,163,47)" fg:x="1968" fg:w="1"/><text x="92.1268%" y="687.50"></text></g><g><title>libcoretls.dylib`sslCipherSuiteGetMacAlgorithm (1 samples, 0.05%)</title><rect x="91.9234%" y="677" width="0.0467%" height="15" fill="rgb(219,91,49)" fg:x="1969" fg:w="1"/><text x="92.1734%" y="687.50"></text></g><g><title>libcoretls.dylib`tls_handshake_create (3 samples, 0.14%)</title><rect x="91.8768%" y="709" width="0.1401%" height="15" fill="rgb(227,167,31)" fg:x="1968" fg:w="3"/><text x="92.1268%" y="719.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_ciphersuites_internal (3 samples, 0.14%)</title><rect x="91.8768%" y="693" width="0.1401%" height="15" fill="rgb(234,80,54)" fg:x="1968" fg:w="3"/><text x="92.1268%" y="703.50"></text></g><g><title>libcoretls.dylib`tls_handshake_ciphersuite_is_allowed (1 samples, 0.05%)</title><rect x="91.9701%" y="677" width="0.0467%" height="15" fill="rgb(212,114,2)" fg:x="1970" fg:w="1"/><text x="92.2201%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.05%)</title><rect x="92.0168%" y="709" width="0.0467%" height="15" fill="rgb(234,50,24)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.05%)</title><rect x="92.0168%" y="693" width="0.0467%" height="15" fill="rgb(221,68,8)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="703.50"></text></g><g><title>Security`__SSLCreateContextWithRecordFuncs_block_invoke (1 samples, 0.05%)</title><rect x="92.0168%" y="677" width="0.0467%" height="15" fill="rgb(254,180,31)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="687.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.05%)</title><rect x="92.0168%" y="661" width="0.0467%" height="15" fill="rgb(247,130,50)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="671.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.05%)</title><rect x="92.0168%" y="645" width="0.0467%" height="15" fill="rgb(211,109,4)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="655.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.05%)</title><rect x="92.0168%" y="629" width="0.0467%" height="15" fill="rgb(238,50,21)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="639.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.05%)</title><rect x="92.0168%" y="613" width="0.0467%" height="15" fill="rgb(225,57,45)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="623.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchLists:] (1 samples, 0.05%)</title><rect x="92.0168%" y="597" width="0.0467%" height="15" fill="rgb(209,196,50)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="607.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke.198 (1 samples, 0.05%)</title><rect x="92.0168%" y="581" width="0.0467%" height="15" fill="rgb(242,140,13)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="591.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource addNamedVolatileSourceForIdentifier:] (1 samples, 0.05%)</title><rect x="92.0168%" y="565" width="0.0467%" height="15" fill="rgb(217,111,7)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="575.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withNamedVolatileSourceForIdentifier:perform:] (1 samples, 0.05%)</title><rect x="92.0168%" y="549" width="0.0467%" height="15" fill="rgb(253,193,51)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="559.50"></text></g><g><title>CoreFoundation`__81-[_CFXPreferences(SourceAdditions) withNamedVolatileSourceForIdentifier:perform:]_block_invoke (1 samples, 0.05%)</title><rect x="92.0168%" y="533" width="0.0467%" height="15" fill="rgb(252,70,29)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.05%)</title><rect x="92.0168%" y="517" width="0.0467%" height="15" fill="rgb(232,127,12)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.05%)</title><rect x="92.0168%" y="501" width="0.0467%" height="15" fill="rgb(211,180,21)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.0168%" y="485" width="0.0467%" height="15" fill="rgb(229,72,13)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="92.0168%" y="469" width="0.0467%" height="15" fill="rgb(240,211,49)" fg:x="1971" fg:w="1"/><text x="92.2668%" y="479.50"></text></g><g><title>Security`SSLCreateContextWithRecordFuncs (6 samples, 0.28%)</title><rect x="91.8301%" y="725" width="0.2801%" height="15" fill="rgb(219,149,40)" fg:x="1967" fg:w="6"/><text x="92.0801%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="92.0635%" y="709" width="0.0467%" height="15" fill="rgb(210,127,46)" fg:x="1972" fg:w="1"/><text x="92.3135%" y="719.50"></text></g><g><title>Security`SSLCreateContext (8 samples, 0.37%)</title><rect x="91.7834%" y="741" width="0.3735%" height="15" fill="rgb(220,106,7)" fg:x="1966" fg:w="8"/><text x="92.0334%" y="751.50"></text></g><g><title>libcoretls.dylib`tls_record_create (1 samples, 0.05%)</title><rect x="92.1102%" y="725" width="0.0467%" height="15" fill="rgb(249,31,22)" fg:x="1973" fg:w="1"/><text x="92.3602%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="92.1102%" y="709" width="0.0467%" height="15" fill="rgb(253,1,49)" fg:x="1973" fg:w="1"/><text x="92.3602%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.1102%" y="693" width="0.0467%" height="15" fill="rgb(227,144,33)" fg:x="1973" fg:w="1"/><text x="92.3602%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.1102%" y="677" width="0.0467%" height="15" fill="rgb(249,163,44)" fg:x="1973" fg:w="1"/><text x="92.3602%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.05%)</title><rect x="92.1102%" y="661" width="0.0467%" height="15" fill="rgb(234,15,39)" fg:x="1973" fg:w="1"/><text x="92.3602%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="92.1569%" y="741" width="0.0934%" height="15" fill="rgb(207,66,16)" fg:x="1974" fg:w="2"/><text x="92.4069%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.2035%" y="725" width="0.0467%" height="15" fill="rgb(233,112,24)" fg:x="1975" fg:w="1"/><text x="92.4535%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.2035%" y="709" width="0.0467%" height="15" fill="rgb(230,90,22)" fg:x="1975" fg:w="1"/><text x="92.4535%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="92.2035%" y="693" width="0.0467%" height="15" fill="rgb(229,61,13)" fg:x="1975" fg:w="1"/><text x="92.4535%" y="703.50"></text></g><g><title>libcoretls.dylib`tls_handshake_ciphersuite_is_allowed (1 samples, 0.05%)</title><rect x="92.2969%" y="693" width="0.0467%" height="15" fill="rgb(225,57,24)" fg:x="1977" fg:w="1"/><text x="92.5469%" y="703.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::ClientBuilder::configure_ciphers (3 samples, 0.14%)</title><rect x="92.2502%" y="741" width="0.1401%" height="15" fill="rgb(208,169,48)" fg:x="1976" fg:w="3"/><text x="92.5002%" y="751.50"></text></g><g><title>Security`SSLSetEnabledCiphers (3 samples, 0.14%)</title><rect x="92.2502%" y="725" width="0.1401%" height="15" fill="rgb(244,218,51)" fg:x="1976" fg:w="3"/><text x="92.5002%" y="735.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_ciphersuites_internal (2 samples, 0.09%)</title><rect x="92.2969%" y="709" width="0.0934%" height="15" fill="rgb(214,148,10)" fg:x="1977" fg:w="2"/><text x="92.5469%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="92.3436%" y="693" width="0.0467%" height="15" fill="rgb(225,174,27)" fg:x="1978" fg:w="1"/><text x="92.5936%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (3 samples, 0.14%)</title><rect x="92.3903%" y="597" width="0.1401%" height="15" fill="rgb(230,96,26)" fg:x="1979" fg:w="3"/><text x="92.6403%" y="607.50"></text></g><g><title>Security`SSLHandshakeProceed (4 samples, 0.19%)</title><rect x="92.3903%" y="693" width="0.1867%" height="15" fill="rgb(232,10,30)" fg:x="1979" fg:w="4"/><text x="92.6403%" y="703.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (4 samples, 0.19%)</title><rect x="92.3903%" y="677" width="0.1867%" height="15" fill="rgb(222,8,50)" fg:x="1979" fg:w="4"/><text x="92.6403%" y="687.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::write_func (4 samples, 0.19%)</title><rect x="92.3903%" y="661" width="0.1867%" height="15" fill="rgb(213,81,27)" fg:x="1979" fg:w="4"/><text x="92.6403%" y="671.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (4 samples, 0.19%)</title><rect x="92.3903%" y="645" width="0.1867%" height="15" fill="rgb(245,50,10)" fg:x="1979" fg:w="4"/><text x="92.6403%" y="655.50"></text></g><g><title>rust_stock_tracker`tokio::io::driver::registration::Registration::poll_write_io (4 samples, 0.19%)</title><rect x="92.3903%" y="629" width="0.1867%" height="15" fill="rgb(216,100,18)" fg:x="1979" fg:w="4"/><text x="92.6403%" y="639.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (4 samples, 0.19%)</title><rect x="92.3903%" y="613" width="0.1867%" height="15" fill="rgb(236,147,54)" fg:x="1979" fg:w="4"/><text x="92.6403%" y="623.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.05%)</title><rect x="92.5303%" y="597" width="0.0467%" height="15" fill="rgb(205,143,26)" fg:x="1982" fg:w="1"/><text x="92.7803%" y="607.50"></text></g><g><title>libcoretls.dylib`ReadyHash (1 samples, 0.05%)</title><rect x="92.5770%" y="629" width="0.0467%" height="15" fill="rgb(236,26,9)" fg:x="1983" fg:w="1"/><text x="92.8270%" y="639.50"></text></g><g><title>libcoretls.dylib`SSLAllocBuffer (1 samples, 0.05%)</title><rect x="92.5770%" y="613" width="0.0467%" height="15" fill="rgb(221,165,53)" fg:x="1983" fg:w="1"/><text x="92.8270%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="92.5770%" y="597" width="0.0467%" height="15" fill="rgb(214,110,17)" fg:x="1983" fg:w="1"/><text x="92.8270%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.5770%" y="581" width="0.0467%" height="15" fill="rgb(237,197,12)" fg:x="1983" fg:w="1"/><text x="92.8270%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.5770%" y="565" width="0.0467%" height="15" fill="rgb(205,84,17)" fg:x="1983" fg:w="1"/><text x="92.8270%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="92.5770%" y="549" width="0.0467%" height="15" fill="rgb(237,18,45)" fg:x="1983" fg:w="1"/><text x="92.8270%" y="559.50"></text></g><g><title>libcoretls.dylib`SSLEncodeRandom (1 samples, 0.05%)</title><rect x="92.6237%" y="629" width="0.0467%" height="15" fill="rgb(221,87,14)" fg:x="1984" fg:w="1"/><text x="92.8737%" y="639.50"></text></g><g><title>libsystem_c.dylib`time (1 samples, 0.05%)</title><rect x="92.6237%" y="613" width="0.0467%" height="15" fill="rgb(238,186,15)" fg:x="1984" fg:w="1"/><text x="92.8737%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.05%)</title><rect x="92.6237%" y="597" width="0.0467%" height="15" fill="rgb(208,115,11)" fg:x="1984" fg:w="1"/><text x="92.8737%" y="607.50"></text></g><g><title>libcoretls.dylib`SSLEncodeClientHello (3 samples, 0.14%)</title><rect x="92.5770%" y="645" width="0.1401%" height="15" fill="rgb(254,175,0)" fg:x="1983" fg:w="3"/><text x="92.8270%" y="655.50"></text></g><g><title>libcoretls.dylib`SSLInitMessageHashes (1 samples, 0.05%)</title><rect x="92.6704%" y="629" width="0.0467%" height="15" fill="rgb(227,24,42)" fg:x="1985" fg:w="1"/><text x="92.9204%" y="639.50"></text></g><g><title>libcoretls.dylib`ReadyHash (1 samples, 0.05%)</title><rect x="92.6704%" y="613" width="0.0467%" height="15" fill="rgb(223,211,37)" fg:x="1985" fg:w="1"/><text x="92.9204%" y="623.50"></text></g><g><title>libcoretls.dylib`SSLAllocBuffer (1 samples, 0.05%)</title><rect x="92.6704%" y="597" width="0.0467%" height="15" fill="rgb(235,49,27)" fg:x="1985" fg:w="1"/><text x="92.9204%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="92.6704%" y="581" width="0.0467%" height="15" fill="rgb(254,97,51)" fg:x="1985" fg:w="1"/><text x="92.9204%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.6704%" y="565" width="0.0467%" height="15" fill="rgb(249,51,40)" fg:x="1985" fg:w="1"/><text x="92.9204%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.6704%" y="549" width="0.0467%" height="15" fill="rgb(210,128,45)" fg:x="1985" fg:w="1"/><text x="92.9204%" y="559.50"></text></g><g><title>libcoretls.dylib`HashMD5Update (1 samples, 0.05%)</title><rect x="92.7171%" y="629" width="0.0467%" height="15" fill="rgb(224,137,50)" fg:x="1986" fg:w="1"/><text x="92.9671%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_update (1 samples, 0.05%)</title><rect x="92.7171%" y="613" width="0.0467%" height="15" fill="rgb(242,15,9)" fg:x="1986" fg:w="1"/><text x="92.9671%" y="623.50"></text></g><g><title>libcorecrypto.dylib`md5_compress (1 samples, 0.05%)</title><rect x="92.7171%" y="597" width="0.0467%" height="15" fill="rgb(233,187,41)" fg:x="1986" fg:w="1"/><text x="92.9671%" y="607.50"></text></g><g><title>libcoretls.dylib`SSLUpdateHandshakeMacs (2 samples, 0.09%)</title><rect x="92.7171%" y="645" width="0.0934%" height="15" fill="rgb(227,2,29)" fg:x="1986" fg:w="2"/><text x="92.9671%" y="655.50"></text></g><g><title>libcoretls.dylib`HashSHA1Update (1 samples, 0.05%)</title><rect x="92.7638%" y="629" width="0.0467%" height="15" fill="rgb(222,70,3)" fg:x="1987" fg:w="1"/><text x="93.0138%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="92.7638%" y="613" width="0.0467%" height="15" fill="rgb(213,11,42)" fg:x="1987" fg:w="1"/><text x="93.0138%" y="623.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (6 samples, 0.28%)</title><rect x="92.5770%" y="661" width="0.2801%" height="15" fill="rgb(225,150,9)" fg:x="1983" fg:w="6"/><text x="92.8270%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="92.8105%" y="645" width="0.0467%" height="15" fill="rgb(230,162,45)" fg:x="1988" fg:w="1"/><text x="93.0605%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.8105%" y="629" width="0.0467%" height="15" fill="rgb(222,14,52)" fg:x="1988" fg:w="1"/><text x="93.0605%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="92.8105%" y="613" width="0.0467%" height="15" fill="rgb(254,198,14)" fg:x="1988" fg:w="1"/><text x="93.0605%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="92.8105%" y="597" width="0.0467%" height="15" fill="rgb(220,217,30)" fg:x="1988" fg:w="1"/><text x="93.0605%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="92.8105%" y="581" width="0.0467%" height="15" fill="rgb(215,146,41)" fg:x="1988" fg:w="1"/><text x="93.0605%" y="591.50"></text></g><g><title>rust_stock_tracker`native_tls::imp::TlsConnector::connect (27 samples, 1.26%)</title><rect x="91.6433%" y="773" width="1.2605%" height="15" fill="rgb(217,27,36)" fg:x="1963" fg:w="27"/><text x="91.8933%" y="783.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::ClientBuilder::handshake (25 samples, 1.17%)</title><rect x="91.7367%" y="757" width="1.1671%" height="15" fill="rgb(219,218,39)" fg:x="1965" fg:w="25"/><text x="91.9867%" y="767.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (11 samples, 0.51%)</title><rect x="92.3903%" y="741" width="0.5135%" height="15" fill="rgb(219,4,42)" fg:x="1979" fg:w="11"/><text x="92.6403%" y="751.50"></text></g><g><title>rust_stock_tracker`security_framework::secure_transport::SslStream&lt;S&gt;::handshake (11 samples, 0.51%)</title><rect x="92.3903%" y="725" width="0.5135%" height="15" fill="rgb(249,119,36)" fg:x="1979" fg:w="11"/><text x="92.6403%" y="735.50"></text></g><g><title>Security`SSLHandshake (11 samples, 0.51%)</title><rect x="92.3903%" y="709" width="0.5135%" height="15" fill="rgb(209,23,33)" fg:x="1979" fg:w="11"/><text x="92.6403%" y="719.50"></text></g><g><title>Security`SSLHandshakeStart (7 samples, 0.33%)</title><rect x="92.5770%" y="693" width="0.3268%" height="15" fill="rgb(211,10,0)" fg:x="1983" fg:w="7"/><text x="92.8270%" y="703.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (7 samples, 0.33%)</title><rect x="92.5770%" y="677" width="0.3268%" height="15" fill="rgb(208,99,37)" fg:x="1983" fg:w="7"/><text x="92.8270%" y="687.50"></text></g><g><title>libcoretls.dylib`SSLSendFlight (1 samples, 0.05%)</title><rect x="92.8571%" y="661" width="0.0467%" height="15" fill="rgb(213,132,31)" fg:x="1989" fg:w="1"/><text x="93.1071%" y="671.50"></text></g><g><title>Security`tls_handshake_write_callback (1 samples, 0.05%)</title><rect x="92.8571%" y="645" width="0.0467%" height="15" fill="rgb(243,129,40)" fg:x="1989" fg:w="1"/><text x="93.1071%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="92.8571%" y="629" width="0.0467%" height="15" fill="rgb(210,66,33)" fg:x="1989" fg:w="1"/><text x="93.1071%" y="639.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,304 samples, 60.88%)</title><rect x="32.0728%" y="821" width="60.8777%" height="15" fill="rgb(209,189,4)" fg:x="687" fg:w="1304"/><text x="32.3228%" y="831.50">rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,304 samples, 60.88%)</title><rect x="32.0728%" y="805" width="60.8777%" height="15" fill="rgb(214,107,37)" fg:x="687" fg:w="1304"/><text x="32.3228%" y="815.50">rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (28 samples, 1.31%)</title><rect x="91.6433%" y="789" width="1.3072%" height="15" fill="rgb(245,88,54)" fg:x="1963" fg:w="28"/><text x="91.8933%" y="799.50"></text></g><g><title>rust_stock_tracker`native_tls::imp::convert_protocol (1 samples, 0.05%)</title><rect x="92.9038%" y="773" width="0.0467%" height="15" fill="rgb(205,146,20)" fg:x="1990" fg:w="1"/><text x="93.1538%" y="783.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,305 samples, 60.92%)</title><rect x="32.0728%" y="869" width="60.9244%" height="15" fill="rgb(220,161,25)" fg:x="687" fg:w="1305"/><text x="32.3228%" y="879.50">rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1,305 samples, 60.92%)</title><rect x="32.0728%" y="853" width="60.9244%" height="15" fill="rgb(215,152,15)" fg:x="687" fg:w="1305"/><text x="32.3228%" y="863.50">rust_stock_tracker`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,305 samples, 60.92%)</title><rect x="32.0728%" y="837" width="60.9244%" height="15" fill="rgb(233,192,44)" fg:x="687" fg:w="1305"/><text x="32.3228%" y="847.50">rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`__rdl_dealloc (1 samples, 0.05%)</title><rect x="92.9505%" y="821" width="0.0467%" height="15" fill="rgb(240,170,46)" fg:x="1991" fg:w="1"/><text x="93.2005%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1,314 samples, 61.34%)</title><rect x="31.6993%" y="901" width="61.3445%" height="15" fill="rgb(207,104,33)" fg:x="679" fg:w="1314"/><text x="31.9493%" y="911.50">rust_stock_tracker`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_cor..</text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,310 samples, 61.16%)</title><rect x="31.8861%" y="885" width="61.1578%" height="15" fill="rgb(219,21,39)" fg:x="683" fg:w="1310"/><text x="32.1361%" y="895.50">rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="92.9972%" y="869" width="0.0467%" height="15" fill="rgb(214,133,29)" fg:x="1992" fg:w="1"/><text x="93.2472%" y="879.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.05%)</title><rect x="93.0906%" y="741" width="0.0467%" height="15" fill="rgb(226,93,6)" fg:x="1994" fg:w="1"/><text x="93.3406%" y="751.50"></text></g><g><title>rust_stock_tracker`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.05%)</title><rect x="93.1373%" y="709" width="0.0467%" height="15" fill="rgb(252,222,34)" fg:x="1995" fg:w="1"/><text x="93.3873%" y="719.50"></text></g><g><title>rust_stock_tracker`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.05%)</title><rect x="93.1373%" y="693" width="0.0467%" height="15" fill="rgb(252,92,48)" fg:x="1995" fg:w="1"/><text x="93.3873%" y="703.50"></text></g><g><title>rust_stock_tracker`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="93.1373%" y="677" width="0.0467%" height="15" fill="rgb(245,223,24)" fg:x="1995" fg:w="1"/><text x="93.3873%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="93.1373%" y="661" width="0.0467%" height="15" fill="rgb(205,176,3)" fg:x="1995" fg:w="1"/><text x="93.3873%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.05%)</title><rect x="93.1373%" y="645" width="0.0467%" height="15" fill="rgb(235,151,15)" fg:x="1995" fg:w="1"/><text x="93.3873%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (4 samples, 0.19%)</title><rect x="93.1839%" y="693" width="0.1867%" height="15" fill="rgb(237,209,11)" fg:x="1996" fg:w="4"/><text x="93.4339%" y="703.50"></text></g><g><title>rust_stock_tracker`parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.23%)</title><rect x="93.1839%" y="709" width="0.2334%" height="15" fill="rgb(243,227,24)" fg:x="1996" fg:w="5"/><text x="93.4339%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.05%)</title><rect x="93.3707%" y="693" width="0.0467%" height="15" fill="rgb(239,193,16)" fg:x="2000" fg:w="1"/><text x="93.6207%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.05%)</title><rect x="93.4174%" y="677" width="0.0467%" height="15" fill="rgb(231,27,9)" fg:x="2001" fg:w="1"/><text x="93.6674%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (2 samples, 0.09%)</title><rect x="93.5107%" y="661" width="0.0934%" height="15" fill="rgb(219,169,10)" fg:x="2003" fg:w="2"/><text x="93.7607%" y="671.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1,328 samples, 62.00%)</title><rect x="31.6527%" y="917" width="61.9981%" height="15" fill="rgb(244,229,43)" fg:x="678" fg:w="1328"/><text x="31.9027%" y="927.50">rust_stock_tracker`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="901" width="0.6069%" height="15" fill="rgb(254,38,20)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="885" width="0.6069%" height="15" fill="rgb(250,47,30)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="895.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="869" width="0.6069%" height="15" fill="rgb(224,124,36)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="853" width="0.6069%" height="15" fill="rgb(246,68,51)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="863.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="837" width="0.6069%" height="15" fill="rgb(253,43,49)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="821" width="0.6069%" height="15" fill="rgb(219,54,36)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="805" width="0.6069%" height="15" fill="rgb(227,133,34)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="815.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.61%)</title><rect x="93.0439%" y="789" width="0.6069%" height="15" fill="rgb(247,227,15)" fg:x="1993" fg:w="13"/><text x="93.2939%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.56%)</title><rect x="93.0906%" y="773" width="0.5602%" height="15" fill="rgb(229,96,14)" fg:x="1994" fg:w="12"/><text x="93.3406%" y="783.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::client::connect::dns::GaiResolver as tower_service::Service&lt;hyper::client::connect::dns::Name&gt;&gt;::call (12 samples, 0.56%)</title><rect x="93.0906%" y="757" width="0.5602%" height="15" fill="rgb(220,79,17)" fg:x="1994" fg:w="12"/><text x="93.3406%" y="767.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::blocking::pool::spawn_blocking (11 samples, 0.51%)</title><rect x="93.1373%" y="741" width="0.5135%" height="15" fill="rgb(205,131,53)" fg:x="1995" fg:w="11"/><text x="93.3873%" y="751.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::blocking::pool::Spawner::spawn (11 samples, 0.51%)</title><rect x="93.1373%" y="725" width="0.5135%" height="15" fill="rgb(209,50,29)" fg:x="1995" fg:w="11"/><text x="93.3873%" y="735.50"></text></g><g><title>rust_stock_tracker`std::thread::Builder::spawn (5 samples, 0.23%)</title><rect x="93.4174%" y="709" width="0.2334%" height="15" fill="rgb(245,86,46)" fg:x="2001" fg:w="5"/><text x="93.6674%" y="719.50"></text></g><g><title>rust_stock_tracker`std::sys::unix::thread::Thread::new (5 samples, 0.23%)</title><rect x="93.4174%" y="693" width="0.2334%" height="15" fill="rgb(235,66,46)" fg:x="2001" fg:w="5"/><text x="93.6674%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (4 samples, 0.19%)</title><rect x="93.4641%" y="677" width="0.1867%" height="15" fill="rgb(232,148,31)" fg:x="2002" fg:w="4"/><text x="93.7141%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (1 samples, 0.05%)</title><rect x="93.6041%" y="661" width="0.0467%" height="15" fill="rgb(217,149,8)" fg:x="2005" fg:w="1"/><text x="93.8541%" y="671.50"></text></g><g><title>rust_stock_tracker`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="93.6508%" y="917" width="0.0467%" height="15" fill="rgb(209,183,11)" fg:x="2006" fg:w="1"/><text x="93.9008%" y="927.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;hyper::client::pool::Checkout&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="93.6975%" y="917" width="0.0934%" height="15" fill="rgb(208,55,20)" fg:x="2007" fg:w="2"/><text x="93.9475%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::client::pool::Checkout&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="93.6975%" y="901" width="0.0934%" height="15" fill="rgb(218,39,14)" fg:x="2007" fg:w="2"/><text x="93.9475%" y="911.50"></text></g><g><title>rust_stock_tracker`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.09%)</title><rect x="93.6975%" y="885" width="0.0934%" height="15" fill="rgb(216,169,33)" fg:x="2007" fg:w="2"/><text x="93.9475%" y="895.50"></text></g><g><title>rust_stock_tracker`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="93.6975%" y="869" width="0.0934%" height="15" fill="rgb(233,80,24)" fg:x="2007" fg:w="2"/><text x="93.9475%" y="879.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="93.7908%" y="917" width="0.0467%" height="15" fill="rgb(213,179,31)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="93.7908%" y="901" width="0.0467%" height="15" fill="rgb(209,19,5)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="911.50"></text></g><g><title>rust_stock_tracker`hyper::client::pool::PoolInner&lt;T&gt;::put (1 samples, 0.05%)</title><rect x="93.7908%" y="885" width="0.0467%" height="15" fill="rgb(219,18,35)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="895.50"></text></g><g><title>rust_stock_tracker`hyper::common::exec::Exec::execute (1 samples, 0.05%)</title><rect x="93.7908%" y="869" width="0.0467%" height="15" fill="rgb(209,169,16)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="879.50"></text></g><g><title>rust_stock_tracker`tokio::task::spawn::spawn (1 samples, 0.05%)</title><rect x="93.7908%" y="853" width="0.0467%" height="15" fill="rgb(245,90,51)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="863.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::spawner::Spawner::spawn (1 samples, 0.05%)</title><rect x="93.7908%" y="837" width="0.0467%" height="15" fill="rgb(220,99,45)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="847.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.05%)</title><rect x="93.7908%" y="821" width="0.0467%" height="15" fill="rgb(249,89,25)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="831.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.05%)</title><rect x="93.7908%" y="805" width="0.0467%" height="15" fill="rgb(239,193,0)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="93.7908%" y="789" width="0.0467%" height="15" fill="rgb(231,126,1)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="93.7908%" y="773" width="0.0467%" height="15" fill="rgb(243,166,3)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="93.7908%" y="757" width="0.0467%" height="15" fill="rgb(223,22,34)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="93.7908%" y="741" width="0.0467%" height="15" fill="rgb(251,52,51)" fg:x="2009" fg:w="1"/><text x="94.0408%" y="751.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="93.8375%" y="901" width="0.0934%" height="15" fill="rgb(221,165,28)" fg:x="2010" fg:w="2"/><text x="94.0875%" y="911.50"></text></g><g><title>rust_stock_tracker`http::header::map::VacantEntry&lt;T&gt;::insert (1 samples, 0.05%)</title><rect x="93.9309%" y="901" width="0.0467%" height="15" fill="rgb(218,121,47)" fg:x="2012" fg:w="1"/><text x="94.1809%" y="911.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="93.9309%" y="885" width="0.0467%" height="15" fill="rgb(209,120,9)" fg:x="2012" fg:w="1"/><text x="94.1809%" y="895.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="93.9309%" y="869" width="0.0467%" height="15" fill="rgb(236,68,12)" fg:x="2012" fg:w="1"/><text x="94.1809%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.05%)</title><rect x="93.9309%" y="853" width="0.0467%" height="15" fill="rgb(225,194,26)" fg:x="2012" fg:w="1"/><text x="94.1809%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="93.9309%" y="837" width="0.0467%" height="15" fill="rgb(231,84,39)" fg:x="2012" fg:w="1"/><text x="94.1809%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="93.9309%" y="821" width="0.0467%" height="15" fill="rgb(210,11,45)" fg:x="2012" fg:w="1"/><text x="94.1809%" y="831.50"></text></g><g><title>rust_stock_tracker`http::uri::authority::host (1 samples, 0.05%)</title><rect x="93.9776%" y="901" width="0.0467%" height="15" fill="rgb(224,54,52)" fg:x="2013" fg:w="1"/><text x="94.2276%" y="911.50"></text></g><g><title>rust_stock_tracker`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.05%)</title><rect x="93.9776%" y="885" width="0.0467%" height="15" fill="rgb(238,102,14)" fg:x="2013" fg:w="1"/><text x="94.2276%" y="895.50"></text></g><g><title>rust_stock_tracker`core::slice::memchr::memchr_general_case (1 samples, 0.05%)</title><rect x="93.9776%" y="869" width="0.0467%" height="15" fill="rgb(243,160,52)" fg:x="2013" fg:w="1"/><text x="94.2276%" y="879.50"></text></g><g><title>rust_stock_tracker`http::header::map::Entry&lt;T&gt;::or_insert_with (5 samples, 0.23%)</title><rect x="93.8375%" y="917" width="0.2334%" height="15" fill="rgb(216,114,19)" fg:x="2010" fg:w="5"/><text x="94.0875%" y="927.50"></text></g><g><title>rust_stock_tracker`hyper::client::client::get_non_default_port (1 samples, 0.05%)</title><rect x="94.0243%" y="901" width="0.0467%" height="15" fill="rgb(244,166,37)" fg:x="2014" fg:w="1"/><text x="94.2743%" y="911.50"></text></g><g><title>rust_stock_tracker`http::uri::authority::Authority::port (1 samples, 0.05%)</title><rect x="94.0243%" y="885" width="0.0467%" height="15" fill="rgb(246,29,44)" fg:x="2014" fg:w="1"/><text x="94.2743%" y="895.50"></text></g><g><title>rust_stock_tracker`hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (3 samples, 0.14%)</title><rect x="94.0710%" y="917" width="0.1401%" height="15" fill="rgb(215,56,53)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="927.50"></text></g><g><title>rust_stock_tracker`hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (3 samples, 0.14%)</title><rect x="94.0710%" y="901" width="0.1401%" height="15" fill="rgb(217,60,2)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="911.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.14%)</title><rect x="94.0710%" y="885" width="0.1401%" height="15" fill="rgb(207,26,24)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="895.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule (3 samples, 0.14%)</title><rect x="94.0710%" y="869" width="0.1401%" height="15" fill="rgb(252,210,15)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="879.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule::_{{closure}} (3 samples, 0.14%)</title><rect x="94.0710%" y="853" width="0.1401%" height="15" fill="rgb(253,209,26)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="863.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (3 samples, 0.14%)</title><rect x="94.0710%" y="837" width="0.1401%" height="15" fill="rgb(238,170,14)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.14%)</title><rect x="94.0710%" y="821" width="0.1401%" height="15" fill="rgb(216,178,15)" fg:x="2015" fg:w="3"/><text x="94.3210%" y="831.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,349 samples, 62.98%)</title><rect x="31.2792%" y="933" width="62.9785%" height="15" fill="rgb(250,197,2)" fg:x="670" fg:w="1349"/><text x="31.5292%" y="943.50">rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`tokio::task::spawn::spawn (1 samples, 0.05%)</title><rect x="94.2110%" y="917" width="0.0467%" height="15" fill="rgb(212,70,42)" fg:x="2018" fg:w="1"/><text x="94.4610%" y="927.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::spawner::Spawner::spawn (1 samples, 0.05%)</title><rect x="94.2110%" y="901" width="0.0467%" height="15" fill="rgb(227,213,9)" fg:x="2018" fg:w="1"/><text x="94.4610%" y="911.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="94.2110%" y="885" width="0.0467%" height="15" fill="rgb(245,99,25)" fg:x="2018" fg:w="1"/><text x="94.4610%" y="895.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule::_{{closure}} (1 samples, 0.05%)</title><rect x="94.2110%" y="869" width="0.0467%" height="15" fill="rgb(250,82,29)" fg:x="2018" fg:w="1"/><text x="94.4610%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.05%)</title><rect x="94.2110%" y="853" width="0.0467%" height="15" fill="rgb(241,226,54)" fg:x="2018" fg:w="1"/><text x="94.4610%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.05%)</title><rect x="94.2110%" y="837" width="0.0467%" height="15" fill="rgb(221,99,41)" fg:x="2018" fg:w="1"/><text x="94.4610%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1,354 samples, 63.21%)</title><rect x="31.0924%" y="949" width="63.2120%" height="15" fill="rgb(213,90,21)" fg:x="666" fg:w="1354"/><text x="31.3424%" y="959.50">rust_stock_tracker`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.05%)</title><rect x="94.2577%" y="933" width="0.0467%" height="15" fill="rgb(205,208,24)" fg:x="2019" fg:w="1"/><text x="94.5077%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="94.3044%" y="933" width="0.0467%" height="15" fill="rgb(246,31,12)" fg:x="2020" fg:w="1"/><text x="94.5544%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="94.3044%" y="917" width="0.0467%" height="15" fill="rgb(213,154,6)" fg:x="2020" fg:w="1"/><text x="94.5544%" y="927.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.05%)</title><rect x="94.3511%" y="917" width="0.0467%" height="15" fill="rgb(222,163,29)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="927.50"></text></g><g><title>libdyld.dylib`_dyld_fast_stub_entry(void*, long) (1 samples, 0.05%)</title><rect x="94.3511%" y="901" width="0.0467%" height="15" fill="rgb(227,201,8)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="911.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.05%)</title><rect x="94.3511%" y="885" width="0.0467%" height="15" fill="rgb(233,9,32)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="895.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.05%)</title><rect x="94.3511%" y="869" width="0.0467%" height="15" fill="rgb(217,54,24)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="879.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.05%)</title><rect x="94.3511%" y="853" width="0.0467%" height="15" fill="rgb(235,192,0)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="863.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.05%)</title><rect x="94.3511%" y="837" width="0.0467%" height="15" fill="rgb(235,45,9)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="847.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.05%)</title><rect x="94.3511%" y="821" width="0.0467%" height="15" fill="rgb(246,42,40)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="831.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.05%)</title><rect x="94.3511%" y="805" width="0.0467%" height="15" fill="rgb(248,111,24)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="815.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.05%)</title><rect x="94.3511%" y="789" width="0.0467%" height="15" fill="rgb(249,65,22)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="799.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (1 samples, 0.05%)</title><rect x="94.3511%" y="773" width="0.0467%" height="15" fill="rgb(238,111,51)" fg:x="2021" fg:w="1"/><text x="94.6011%" y="783.50"></text></g><g><title>rust_stock_tracker`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.09%)</title><rect x="94.3511%" y="933" width="0.0934%" height="15" fill="rgb(250,118,22)" fg:x="2021" fg:w="2"/><text x="94.6011%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="94.3978%" y="917" width="0.0467%" height="15" fill="rgb(234,84,26)" fg:x="2022" fg:w="1"/><text x="94.6478%" y="927.50"></text></g><g><title>rust_stock_tracker`bytes::bytes::static_drop (1 samples, 0.05%)</title><rect x="94.4444%" y="933" width="0.0467%" height="15" fill="rgb(243,172,12)" fg:x="2023" fg:w="1"/><text x="94.6944%" y="943.50"></text></g><g><title>rust_stock_tracker`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.23%)</title><rect x="94.3044%" y="949" width="0.2334%" height="15" fill="rgb(236,150,49)" fg:x="2020" fg:w="5"/><text x="94.5544%" y="959.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;hyper::client::pool::PoolInner&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="94.4911%" y="933" width="0.0467%" height="15" fill="rgb(225,197,26)" fg:x="2024" fg:w="1"/><text x="94.7411%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="94.5378%" y="933" width="0.0467%" height="15" fill="rgb(214,17,42)" fg:x="2025" fg:w="1"/><text x="94.7878%" y="943.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;reqwest::async_impl::client::Pending&gt; (2 samples, 0.09%)</title><rect x="94.5378%" y="949" width="0.0934%" height="15" fill="rgb(224,165,40)" fg:x="2025" fg:w="2"/><text x="94.7878%" y="959.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.05%)</title><rect x="94.5845%" y="933" width="0.0467%" height="15" fill="rgb(246,100,4)" fg:x="2026" fg:w="1"/><text x="94.8345%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="94.5845%" y="917" width="0.0467%" height="15" fill="rgb(222,103,0)" fg:x="2026" fg:w="1"/><text x="94.8345%" y="927.50"></text></g><g><title>rust_stock_tracker`http::header::map::HeaderMap&lt;T&gt;::with_capacity (2 samples, 0.09%)</title><rect x="94.6312%" y="949" width="0.0934%" height="15" fill="rgb(227,189,26)" fg:x="2027" fg:w="2"/><text x="94.8812%" y="959.50"></text></g><g><title>rust_stock_tracker`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="94.7246%" y="805" width="0.0467%" height="15" fill="rgb(214,202,17)" fg:x="2029" fg:w="1"/><text x="94.9746%" y="815.50"></text></g><g><title>rust_stock_tracker`reqwest::async_impl::client::Client::get (2 samples, 0.09%)</title><rect x="94.7246%" y="949" width="0.0934%" height="15" fill="rgb(229,111,3)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="959.50"></text></g><g><title>rust_stock_tracker`&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (2 samples, 0.09%)</title><rect x="94.7246%" y="933" width="0.0934%" height="15" fill="rgb(229,172,15)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="943.50"></text></g><g><title>rust_stock_tracker`url::ParseOptions::parse (2 samples, 0.09%)</title><rect x="94.7246%" y="917" width="0.0934%" height="15" fill="rgb(230,224,35)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="927.50"></text></g><g><title>rust_stock_tracker`url::parser::Parser::parse_url (2 samples, 0.09%)</title><rect x="94.7246%" y="901" width="0.0934%" height="15" fill="rgb(251,141,6)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="911.50"></text></g><g><title>rust_stock_tracker`url::parser::Parser::after_double_slash (2 samples, 0.09%)</title><rect x="94.7246%" y="885" width="0.0934%" height="15" fill="rgb(225,208,6)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="895.50"></text></g><g><title>rust_stock_tracker`url::parser::Parser::parse_host (2 samples, 0.09%)</title><rect x="94.7246%" y="869" width="0.0934%" height="15" fill="rgb(246,181,16)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="879.50"></text></g><g><title>rust_stock_tracker`url::host::Host::parse (2 samples, 0.09%)</title><rect x="94.7246%" y="853" width="0.0934%" height="15" fill="rgb(227,129,36)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="863.50"></text></g><g><title>rust_stock_tracker`idna::uts46::Config::to_ascii (2 samples, 0.09%)</title><rect x="94.7246%" y="837" width="0.0934%" height="15" fill="rgb(248,117,24)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="847.50"></text></g><g><title>rust_stock_tracker`idna::uts46::Idna::to_ascii (2 samples, 0.09%)</title><rect x="94.7246%" y="821" width="0.0934%" height="15" fill="rgb(214,185,35)" fg:x="2029" fg:w="2"/><text x="94.9746%" y="831.50"></text></g><g><title>rust_stock_tracker`idna::uts46::processing (1 samples, 0.05%)</title><rect x="94.7712%" y="805" width="0.0467%" height="15" fill="rgb(236,150,34)" fg:x="2030" fg:w="1"/><text x="95.0212%" y="815.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="94.7712%" y="789" width="0.0467%" height="15" fill="rgb(243,228,27)" fg:x="2030" fg:w="1"/><text x="95.0212%" y="799.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="94.7712%" y="773" width="0.0467%" height="15" fill="rgb(245,77,44)" fg:x="2030" fg:w="1"/><text x="95.0212%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="94.7712%" y="757" width="0.0467%" height="15" fill="rgb(235,214,42)" fg:x="2030" fg:w="1"/><text x="95.0212%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="94.7712%" y="741" width="0.0467%" height="15" fill="rgb(221,74,3)" fg:x="2030" fg:w="1"/><text x="95.0212%" y="751.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,366 samples, 63.77%)</title><rect x="31.0924%" y="965" width="63.7722%" height="15" fill="rgb(206,121,29)" fg:x="666" fg:w="1366"/><text x="31.3424%" y="975.50">rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`reqwest::async_impl::client::ClientBuilder::new (1 samples, 0.05%)</title><rect x="94.8179%" y="949" width="0.0467%" height="15" fill="rgb(249,131,53)" fg:x="2031" fg:w="1"/><text x="95.0679%" y="959.50"></text></g><g><title>rust_stock_tracker`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.05%)</title><rect x="94.8179%" y="933" width="0.0467%" height="15" fill="rgb(236,170,29)" fg:x="2031" fg:w="1"/><text x="95.0679%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 0.05%)</title><rect x="94.8646%" y="949" width="0.0467%" height="15" fill="rgb(247,96,15)" fg:x="2032" fg:w="1"/><text x="95.1146%" y="959.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::body::body::DelayEof&gt;&gt; (1 samples, 0.05%)</title><rect x="94.9580%" y="917" width="0.0467%" height="15" fill="rgb(211,210,7)" fg:x="2034" fg:w="1"/><text x="95.2080%" y="927.50"></text></g><g><title>rust_stock_tracker`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2 samples, 0.09%)</title><rect x="95.0980%" y="869" width="0.0934%" height="15" fill="rgb(240,88,50)" fg:x="2037" fg:w="2"/><text x="95.3480%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (11 samples, 0.51%)</title><rect x="94.8646%" y="965" width="0.5135%" height="15" fill="rgb(209,229,26)" fg:x="2032" fg:w="11"/><text x="95.1146%" y="975.50"></text></g><g><title>rust_stock_tracker`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (10 samples, 0.47%)</title><rect x="94.9113%" y="949" width="0.4669%" height="15" fill="rgb(210,68,23)" fg:x="2033" fg:w="10"/><text x="95.1613%" y="959.50"></text></g><g><title>rust_stock_tracker`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (10 samples, 0.47%)</title><rect x="94.9113%" y="933" width="0.4669%" height="15" fill="rgb(229,180,13)" fg:x="2033" fg:w="10"/><text x="95.1613%" y="943.50"></text></g><g><title>rust_stock_tracker`hyper::body::body::Body::poll_inner (8 samples, 0.37%)</title><rect x="95.0047%" y="917" width="0.3735%" height="15" fill="rgb(236,53,44)" fg:x="2035" fg:w="8"/><text x="95.2547%" y="927.50"></text></g><g><title>rust_stock_tracker`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.37%)</title><rect x="95.0047%" y="901" width="0.3735%" height="15" fill="rgb(244,214,29)" fg:x="2035" fg:w="8"/><text x="95.2547%" y="911.50"></text></g><g><title>rust_stock_tracker`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (8 samples, 0.37%)</title><rect x="95.0047%" y="885" width="0.3735%" height="15" fill="rgb(220,75,29)" fg:x="2035" fg:w="8"/><text x="95.2547%" y="895.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (4 samples, 0.19%)</title><rect x="95.1914%" y="869" width="0.1867%" height="15" fill="rgb(214,183,37)" fg:x="2039" fg:w="4"/><text x="95.4414%" y="879.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule (4 samples, 0.19%)</title><rect x="95.1914%" y="853" width="0.1867%" height="15" fill="rgb(239,117,29)" fg:x="2039" fg:w="4"/><text x="95.4414%" y="863.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::basic_scheduler::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;::schedule::_{{closure}} (4 samples, 0.19%)</title><rect x="95.1914%" y="837" width="0.1867%" height="15" fill="rgb(237,171,35)" fg:x="2039" fg:w="4"/><text x="95.4414%" y="847.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (4 samples, 0.19%)</title><rect x="95.1914%" y="821" width="0.1867%" height="15" fill="rgb(229,178,53)" fg:x="2039" fg:w="4"/><text x="95.4414%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.19%)</title><rect x="95.1914%" y="805" width="0.1867%" height="15" fill="rgb(210,102,19)" fg:x="2039" fg:w="4"/><text x="95.4414%" y="815.50"></text></g><g><title>rust_stock_tracker`&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="95.3782%" y="965" width="0.0934%" height="15" fill="rgb(235,127,22)" fg:x="2043" fg:w="2"/><text x="95.6282%" y="975.50"></text></g><g><title>rust_stock_tracker`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="95.3782%" y="949" width="0.0934%" height="15" fill="rgb(244,31,31)" fg:x="2043" fg:w="2"/><text x="95.6282%" y="959.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (2 samples, 0.09%)</title><rect x="95.3782%" y="933" width="0.0934%" height="15" fill="rgb(231,43,21)" fg:x="2043" fg:w="2"/><text x="95.6282%" y="943.50"></text></g><g><title>rust_stock_tracker`alloc::fmt::format (1 samples, 0.05%)</title><rect x="95.4715%" y="965" width="0.0467%" height="15" fill="rgb(217,131,35)" fg:x="2045" fg:w="1"/><text x="95.7215%" y="975.50"></text></g><g><title>rust_stock_tracker`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.05%)</title><rect x="95.4715%" y="949" width="0.0467%" height="15" fill="rgb(221,149,4)" fg:x="2045" fg:w="1"/><text x="95.7215%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.14%)</title><rect x="95.5182%" y="901" width="0.1401%" height="15" fill="rgb(232,170,28)" fg:x="2046" fg:w="3"/><text x="95.7682%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.14%)</title><rect x="95.5182%" y="885" width="0.1401%" height="15" fill="rgb(238,56,10)" fg:x="2046" fg:w="3"/><text x="95.7682%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.14%)</title><rect x="95.5182%" y="869" width="0.1401%" height="15" fill="rgb(235,196,14)" fg:x="2046" fg:w="3"/><text x="95.7682%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.14%)</title><rect x="95.5182%" y="853" width="0.1401%" height="15" fill="rgb(216,45,48)" fg:x="2046" fg:w="3"/><text x="95.7682%" y="863.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.19%)</title><rect x="95.5182%" y="965" width="0.1867%" height="15" fill="rgb(238,213,17)" fg:x="2046" fg:w="4"/><text x="95.7682%" y="975.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::finish_grow (4 samples, 0.19%)</title><rect x="95.5182%" y="949" width="0.1867%" height="15" fill="rgb(212,13,2)" fg:x="2046" fg:w="4"/><text x="95.7682%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.19%)</title><rect x="95.5182%" y="933" width="0.1867%" height="15" fill="rgb(240,114,20)" fg:x="2046" fg:w="4"/><text x="95.7682%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.19%)</title><rect x="95.5182%" y="917" width="0.1867%" height="15" fill="rgb(228,41,40)" fg:x="2046" fg:w="4"/><text x="95.7682%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="95.6583%" y="901" width="0.0467%" height="15" fill="rgb(244,132,35)" fg:x="2049" fg:w="1"/><text x="95.9083%" y="911.50"></text></g><g><title>rust_stock_tracker`bytes::bytes::promotable_even_drop (1 samples, 0.05%)</title><rect x="95.7049%" y="949" width="0.0467%" height="15" fill="rgb(253,189,4)" fg:x="2050" fg:w="1"/><text x="95.9549%" y="959.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.14%)</title><rect x="95.7049%" y="965" width="0.1401%" height="15" fill="rgb(224,37,19)" fg:x="2050" fg:w="3"/><text x="95.9549%" y="975.50"></text></g><g><title>rust_stock_tracker`bytes::bytes_mut::shared_v_drop (2 samples, 0.09%)</title><rect x="95.7516%" y="949" width="0.0934%" height="15" fill="rgb(235,223,18)" fg:x="2051" fg:w="2"/><text x="96.0016%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.09%)</title><rect x="95.7516%" y="933" width="0.0934%" height="15" fill="rgb(235,163,25)" fg:x="2051" fg:w="2"/><text x="96.0016%" y="943.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;rust_stock_tracker_lib::stocks::StockHistory&gt; (1 samples, 0.05%)</title><rect x="95.8450%" y="965" width="0.0467%" height="15" fill="rgb(217,145,28)" fg:x="2053" fg:w="1"/><text x="96.0950%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="95.8450%" y="949" width="0.0467%" height="15" fill="rgb(223,223,32)" fg:x="2053" fg:w="1"/><text x="96.0950%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="95.8450%" y="933" width="0.0467%" height="15" fill="rgb(227,189,39)" fg:x="2053" fg:w="1"/><text x="96.0950%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.05%)</title><rect x="95.8450%" y="917" width="0.0467%" height="15" fill="rgb(248,10,22)" fg:x="2053" fg:w="1"/><text x="96.0950%" y="927.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;yahoo_finance_api::quotes::YQuoteBlock&gt; (2 samples, 0.09%)</title><rect x="95.8917%" y="965" width="0.0934%" height="15" fill="rgb(248,46,39)" fg:x="2054" fg:w="2"/><text x="96.1417%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="95.8917%" y="949" width="0.0934%" height="15" fill="rgb(248,113,48)" fg:x="2054" fg:w="2"/><text x="96.1417%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="95.8917%" y="933" width="0.0934%" height="15" fill="rgb(245,16,25)" fg:x="2054" fg:w="2"/><text x="96.1417%" y="943.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="95.9851%" y="917" width="0.0467%" height="15" fill="rgb(249,152,16)" fg:x="2056" fg:w="1"/><text x="96.2351%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.09%)</title><rect x="96.0317%" y="805" width="0.0934%" height="15" fill="rgb(250,16,1)" fg:x="2057" fg:w="2"/><text x="96.2817%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="96.1718%" y="789" width="0.0467%" height="15" fill="rgb(249,138,3)" fg:x="2060" fg:w="1"/><text x="96.4218%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="96.2185%" y="773" width="0.0934%" height="15" fill="rgb(227,71,41)" fg:x="2061" fg:w="2"/><text x="96.4685%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="96.2652%" y="757" width="0.0467%" height="15" fill="rgb(209,184,23)" fg:x="2062" fg:w="1"/><text x="96.5152%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="96.2652%" y="741" width="0.0467%" height="15" fill="rgb(223,215,31)" fg:x="2062" fg:w="1"/><text x="96.5152%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="96.2652%" y="725" width="0.0467%" height="15" fill="rgb(210,146,28)" fg:x="2062" fg:w="1"/><text x="96.5152%" y="735.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.09%)</title><rect x="96.3119%" y="773" width="0.0934%" height="15" fill="rgb(209,183,41)" fg:x="2063" fg:w="2"/><text x="96.5619%" y="783.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (8 samples, 0.37%)</title><rect x="96.1251%" y="805" width="0.3735%" height="15" fill="rgb(209,224,45)" fg:x="2059" fg:w="8"/><text x="96.3751%" y="815.50"></text></g><g><title>rust_stock_tracker`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (6 samples, 0.28%)</title><rect x="96.2185%" y="789" width="0.2801%" height="15" fill="rgb(224,209,51)" fg:x="2061" fg:w="6"/><text x="96.4685%" y="799.50"></text></g><g><title>rust_stock_tracker`core::str::converts::from_utf8 (2 samples, 0.09%)</title><rect x="96.4052%" y="773" width="0.0934%" height="15" fill="rgb(223,17,39)" fg:x="2065" fg:w="2"/><text x="96.6552%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="96.4986%" y="789" width="0.0467%" height="15" fill="rgb(234,204,37)" fg:x="2067" fg:w="1"/><text x="96.7486%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="96.4986%" y="773" width="0.0467%" height="15" fill="rgb(236,120,5)" fg:x="2067" fg:w="1"/><text x="96.7486%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="96.4986%" y="757" width="0.0467%" height="15" fill="rgb(248,97,27)" fg:x="2067" fg:w="1"/><text x="96.7486%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="96.4986%" y="741" width="0.0467%" height="15" fill="rgb(240,66,17)" fg:x="2067" fg:w="1"/><text x="96.7486%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="96.5453%" y="789" width="0.0467%" height="15" fill="rgb(210,79,3)" fg:x="2068" fg:w="1"/><text x="96.7953%" y="799.50"></text></g><g><title>rust_stock_tracker`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (3 samples, 0.14%)</title><rect x="96.4986%" y="805" width="0.1401%" height="15" fill="rgb(214,176,27)" fg:x="2067" fg:w="3"/><text x="96.7486%" y="815.50"></text></g><g><title>rust_stock_tracker`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.05%)</title><rect x="96.5920%" y="789" width="0.0467%" height="15" fill="rgb(235,185,3)" fg:x="2069" fg:w="1"/><text x="96.8420%" y="799.50"></text></g><g><title>rust_stock_tracker`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.09%)</title><rect x="96.6387%" y="805" width="0.0934%" height="15" fill="rgb(227,24,12)" fg:x="2070" fg:w="2"/><text x="96.8887%" y="815.50"></text></g><g><title>rust_stock_tracker`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="96.7320%" y="805" width="0.0467%" height="15" fill="rgb(252,169,48)" fg:x="2072" fg:w="1"/><text x="96.9820%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="96.9188%" y="789" width="0.0467%" height="15" fill="rgb(212,65,1)" fg:x="2076" fg:w="1"/><text x="97.1688%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="96.9188%" y="773" width="0.0467%" height="15" fill="rgb(242,39,24)" fg:x="2076" fg:w="1"/><text x="97.1688%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="96.9188%" y="757" width="0.0467%" height="15" fill="rgb(249,32,23)" fg:x="2076" fg:w="1"/><text x="97.1688%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="96.9188%" y="741" width="0.0467%" height="15" fill="rgb(251,195,23)" fg:x="2076" fg:w="1"/><text x="97.1688%" y="751.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="96.9655%" y="773" width="0.0467%" height="15" fill="rgb(236,174,8)" fg:x="2077" fg:w="1"/><text x="97.2155%" y="783.50"></text></g><g><title>rust_stock_tracker`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="96.9655%" y="757" width="0.0467%" height="15" fill="rgb(220,197,8)" fg:x="2077" fg:w="1"/><text x="97.2155%" y="767.50"></text></g><g><title>rust_stock_tracker`core::str::converts::from_utf8 (1 samples, 0.05%)</title><rect x="96.9655%" y="741" width="0.0467%" height="15" fill="rgb(240,108,37)" fg:x="2077" fg:w="1"/><text x="97.2155%" y="751.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="97.0588%" y="725" width="0.0467%" height="15" fill="rgb(232,176,24)" fg:x="2079" fg:w="1"/><text x="97.3088%" y="735.50"></text></g><g><title>rust_stock_tracker`core::str::converts::from_utf8 (1 samples, 0.05%)</title><rect x="97.0588%" y="709" width="0.0467%" height="15" fill="rgb(243,35,29)" fg:x="2079" fg:w="1"/><text x="97.3088%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="97.1055%" y="709" width="0.0467%" height="15" fill="rgb(210,37,18)" fg:x="2080" fg:w="1"/><text x="97.3555%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="97.1055%" y="693" width="0.0467%" height="15" fill="rgb(224,184,40)" fg:x="2080" fg:w="1"/><text x="97.3555%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="97.1055%" y="677" width="0.0467%" height="15" fill="rgb(236,39,29)" fg:x="2080" fg:w="1"/><text x="97.3555%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="97.1055%" y="661" width="0.0467%" height="15" fill="rgb(232,48,39)" fg:x="2080" fg:w="1"/><text x="97.3555%" y="671.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.14%)</title><rect x="97.0588%" y="741" width="0.1401%" height="15" fill="rgb(236,34,42)" fg:x="2079" fg:w="3"/><text x="97.3088%" y="751.50"></text></g><g><title>rust_stock_tracker`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.09%)</title><rect x="97.1055%" y="725" width="0.0934%" height="15" fill="rgb(243,106,37)" fg:x="2080" fg:w="2"/><text x="97.3555%" y="735.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="97.1522%" y="709" width="0.0467%" height="15" fill="rgb(218,96,6)" fg:x="2081" fg:w="1"/><text x="97.4022%" y="719.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.42%)</title><rect x="96.9655%" y="789" width="0.4202%" height="15" fill="rgb(235,130,12)" fg:x="2077" fg:w="9"/><text x="97.2155%" y="799.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.37%)</title><rect x="97.0121%" y="773" width="0.3735%" height="15" fill="rgb(231,95,0)" fg:x="2078" fg:w="8"/><text x="97.2621%" y="783.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.37%)</title><rect x="97.0121%" y="757" width="0.3735%" height="15" fill="rgb(228,12,23)" fg:x="2078" fg:w="8"/><text x="97.2621%" y="767.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.19%)</title><rect x="97.1989%" y="741" width="0.1867%" height="15" fill="rgb(216,12,1)" fg:x="2082" fg:w="4"/><text x="97.4489%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.14%)</title><rect x="97.2456%" y="725" width="0.1401%" height="15" fill="rgb(219,59,3)" fg:x="2083" fg:w="3"/><text x="97.4956%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.14%)</title><rect x="97.2456%" y="709" width="0.1401%" height="15" fill="rgb(215,208,46)" fg:x="2083" fg:w="3"/><text x="97.4956%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="97.3389%" y="693" width="0.0467%" height="15" fill="rgb(254,224,29)" fg:x="2085" fg:w="1"/><text x="97.5889%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.05%)</title><rect x="97.5257%" y="757" width="0.0467%" height="15" fill="rgb(232,14,29)" fg:x="2089" fg:w="1"/><text x="97.7757%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.05%)</title><rect x="97.6657%" y="693" width="0.0467%" height="15" fill="rgb(208,45,52)" fg:x="2092" fg:w="1"/><text x="97.9157%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="97.8058%" y="661" width="0.0467%" height="15" fill="rgb(234,191,28)" fg:x="2095" fg:w="1"/><text x="98.0558%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="97.8058%" y="645" width="0.0467%" height="15" fill="rgb(244,67,43)" fg:x="2095" fg:w="1"/><text x="98.0558%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="97.8058%" y="629" width="0.0467%" height="15" fill="rgb(236,189,24)" fg:x="2095" fg:w="1"/><text x="98.0558%" y="639.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.23%)</title><rect x="97.6657%" y="741" width="0.2334%" height="15" fill="rgb(239,214,33)" fg:x="2092" fg:w="5"/><text x="97.9157%" y="751.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::finish_grow (5 samples, 0.23%)</title><rect x="97.6657%" y="725" width="0.2334%" height="15" fill="rgb(226,176,41)" fg:x="2092" fg:w="5"/><text x="97.9157%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.23%)</title><rect x="97.6657%" y="709" width="0.2334%" height="15" fill="rgb(248,47,8)" fg:x="2092" fg:w="5"/><text x="97.9157%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.19%)</title><rect x="97.7124%" y="693" width="0.1867%" height="15" fill="rgb(218,81,44)" fg:x="2093" fg:w="4"/><text x="97.9624%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.19%)</title><rect x="97.7124%" y="677" width="0.1867%" height="15" fill="rgb(213,98,6)" fg:x="2093" fg:w="4"/><text x="97.9624%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="97.8525%" y="661" width="0.0467%" height="15" fill="rgb(222,85,22)" fg:x="2096" fg:w="1"/><text x="98.1025%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="97.8525%" y="645" width="0.0467%" height="15" fill="rgb(239,46,39)" fg:x="2096" fg:w="1"/><text x="98.1025%" y="655.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (47 samples, 2.19%)</title><rect x="96.0317%" y="821" width="2.1942%" height="15" fill="rgb(237,12,29)" fg:x="2057" fg:w="47"/><text x="96.2817%" y="831.50">r..</text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (31 samples, 1.45%)</title><rect x="96.7787%" y="805" width="1.4472%" height="15" fill="rgb(214,77,8)" fg:x="2073" fg:w="31"/><text x="97.0287%" y="815.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 0.84%)</title><rect x="97.3856%" y="789" width="0.8403%" height="15" fill="rgb(217,168,37)" fg:x="2086" fg:w="18"/><text x="97.6356%" y="799.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 0.75%)</title><rect x="97.4790%" y="773" width="0.7470%" height="15" fill="rgb(221,217,23)" fg:x="2088" fg:w="16"/><text x="97.7290%" y="783.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 0.65%)</title><rect x="97.5724%" y="757" width="0.6536%" height="15" fill="rgb(243,229,36)" fg:x="2090" fg:w="14"/><text x="97.8224%" y="767.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.33%)</title><rect x="97.8992%" y="741" width="0.3268%" height="15" fill="rgb(251,163,40)" fg:x="2097" fg:w="7"/><text x="98.1492%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (6 samples, 0.28%)</title><rect x="97.9458%" y="725" width="0.2801%" height="15" fill="rgb(237,222,12)" fg:x="2098" fg:w="6"/><text x="98.1958%" y="735.50"></text></g><g><title>rust_stock_tracker`serde_json::de::Deserializer&lt;R&gt;::parse_decimal (3 samples, 0.14%)</title><rect x="98.0859%" y="709" width="0.1401%" height="15" fill="rgb(248,132,6)" fg:x="2101" fg:w="3"/><text x="98.3359%" y="719.50"></text></g><g><title>rust_stock_tracker`serde_json::de::from_slice (49 samples, 2.29%)</title><rect x="95.9851%" y="965" width="2.2876%" height="15" fill="rgb(227,167,50)" fg:x="2056" fg:w="49"/><text x="96.2351%" y="975.50">r..</text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (49 samples, 2.29%)</title><rect x="95.9851%" y="949" width="2.2876%" height="15" fill="rgb(242,84,37)" fg:x="2056" fg:w="49"/><text x="96.2351%" y="959.50">r..</text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (49 samples, 2.29%)</title><rect x="95.9851%" y="933" width="2.2876%" height="15" fill="rgb(212,4,50)" fg:x="2056" fg:w="49"/><text x="96.2351%" y="943.50">r..</text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (48 samples, 2.24%)</title><rect x="96.0317%" y="917" width="2.2409%" height="15" fill="rgb(230,228,32)" fg:x="2057" fg:w="48"/><text x="96.2817%" y="927.50">r..</text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (48 samples, 2.24%)</title><rect x="96.0317%" y="901" width="2.2409%" height="15" fill="rgb(248,217,23)" fg:x="2057" fg:w="48"/><text x="96.2817%" y="911.50">r..</text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (48 samples, 2.24%)</title><rect x="96.0317%" y="885" width="2.2409%" height="15" fill="rgb(238,197,32)" fg:x="2057" fg:w="48"/><text x="96.2817%" y="895.50">r..</text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (48 samples, 2.24%)</title><rect x="96.0317%" y="869" width="2.2409%" height="15" fill="rgb(236,106,1)" fg:x="2057" fg:w="48"/><text x="96.2817%" y="879.50">r..</text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (48 samples, 2.24%)</title><rect x="96.0317%" y="853" width="2.2409%" height="15" fill="rgb(219,228,13)" fg:x="2057" fg:w="48"/><text x="96.2817%" y="863.50">r..</text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (48 samples, 2.24%)</title><rect x="96.0317%" y="837" width="2.2409%" height="15" fill="rgb(238,30,35)" fg:x="2057" fg:w="48"/><text x="96.2817%" y="847.50">r..</text></g><g><title>rust_stock_tracker`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="98.2260%" y="821" width="0.0467%" height="15" fill="rgb(236,70,23)" fg:x="2104" fg:w="1"/><text x="98.4760%" y="831.50"></text></g><g><title>rust_stock_tracker`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="98.2260%" y="805" width="0.0467%" height="15" fill="rgb(249,104,48)" fg:x="2104" fg:w="1"/><text x="98.4760%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.05%)</title><rect x="98.2260%" y="789" width="0.0467%" height="15" fill="rgb(254,117,50)" fg:x="2104" fg:w="1"/><text x="98.4760%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.05%)</title><rect x="98.2260%" y="773" width="0.0467%" height="15" fill="rgb(223,152,4)" fg:x="2104" fg:w="1"/><text x="98.4760%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="98.2260%" y="757" width="0.0467%" height="15" fill="rgb(245,6,2)" fg:x="2104" fg:w="1"/><text x="98.4760%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.05%)</title><rect x="98.2260%" y="741" width="0.0467%" height="15" fill="rgb(249,150,24)" fg:x="2104" fg:w="1"/><text x="98.4760%" y="751.50"></text></g><g><title>rust_stock_tracker`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="98.2726%" y="965" width="0.0467%" height="15" fill="rgb(228,185,42)" fg:x="2105" fg:w="1"/><text x="98.5226%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.05%)</title><rect x="98.3193%" y="949" width="0.0467%" height="15" fill="rgb(226,39,33)" fg:x="2106" fg:w="1"/><text x="98.5693%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::park::thread::wake (3 samples, 0.14%)</title><rect x="98.3193%" y="965" width="0.1401%" height="15" fill="rgb(221,166,19)" fg:x="2106" fg:w="3"/><text x="98.5693%" y="975.50"></text></g><g><title>rust_stock_tracker`parking_lot::condvar::Condvar::notify_one_slow (2 samples, 0.09%)</title><rect x="98.3660%" y="949" width="0.0934%" height="15" fill="rgb(209,109,2)" fg:x="2107" fg:w="2"/><text x="98.6160%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.09%)</title><rect x="98.3660%" y="933" width="0.0934%" height="15" fill="rgb(252,216,26)" fg:x="2107" fg:w="2"/><text x="98.6160%" y="943.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::handle::Handle::enter (1 samples, 0.05%)</title><rect x="98.4594%" y="965" width="0.0467%" height="15" fill="rgb(227,173,36)" fg:x="2109" fg:w="1"/><text x="98.7094%" y="975.50"></text></g><g><title>rust_stock_tracker`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="98.4594%" y="949" width="0.0467%" height="15" fill="rgb(209,90,7)" fg:x="2109" fg:w="1"/><text x="98.7094%" y="959.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="98.4594%" y="933" width="0.0467%" height="15" fill="rgb(250,194,11)" fg:x="2109" fg:w="1"/><text x="98.7094%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="98.5061%" y="917" width="0.0467%" height="15" fill="rgb(220,72,50)" fg:x="2110" fg:w="1"/><text x="98.7561%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="98.5994%" y="805" width="0.0467%" height="15" fill="rgb(222,106,48)" fg:x="2112" fg:w="1"/><text x="98.8494%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="98.5994%" y="789" width="0.0467%" height="15" fill="rgb(216,220,45)" fg:x="2112" fg:w="1"/><text x="98.8494%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="98.5994%" y="773" width="0.0467%" height="15" fill="rgb(234,112,18)" fg:x="2112" fg:w="1"/><text x="98.8494%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="98.6461%" y="805" width="0.0467%" height="15" fill="rgb(206,179,9)" fg:x="2113" fg:w="1"/><text x="98.8961%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="98.6461%" y="789" width="0.0467%" height="15" fill="rgb(215,115,40)" fg:x="2113" fg:w="1"/><text x="98.8961%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.05%)</title><rect x="98.6928%" y="789" width="0.0467%" height="15" fill="rgb(222,69,34)" fg:x="2114" fg:w="1"/><text x="98.9428%" y="799.50"></text></g><g><title>rust_stock_tracker`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.05%)</title><rect x="98.7395%" y="789" width="0.0467%" height="15" fill="rgb(209,161,10)" fg:x="2115" fg:w="1"/><text x="98.9895%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="98.8796%" y="773" width="0.0467%" height="15" fill="rgb(217,6,38)" fg:x="2118" fg:w="1"/><text x="99.1296%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="98.8796%" y="757" width="0.0467%" height="15" fill="rgb(229,229,48)" fg:x="2118" fg:w="1"/><text x="99.1296%" y="767.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.05%)</title><rect x="98.9262%" y="773" width="0.0467%" height="15" fill="rgb(225,21,28)" fg:x="2119" fg:w="1"/><text x="99.1762%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="98.9262%" y="757" width="0.0467%" height="15" fill="rgb(206,33,13)" fg:x="2119" fg:w="1"/><text x="99.1762%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="98.9262%" y="741" width="0.0467%" height="15" fill="rgb(242,178,17)" fg:x="2119" fg:w="1"/><text x="99.1762%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.05%)</title><rect x="98.9729%" y="773" width="0.0467%" height="15" fill="rgb(220,162,5)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="783.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (1 samples, 0.05%)</title><rect x="98.9729%" y="757" width="0.0467%" height="15" fill="rgb(210,33,43)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="767.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.05%)</title><rect x="98.9729%" y="741" width="0.0467%" height="15" fill="rgb(216,116,54)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (1 samples, 0.05%)</title><rect x="98.9729%" y="725" width="0.0467%" height="15" fill="rgb(249,92,24)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="735.50"></text></g><g><title>rust_stock_tracker`core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.05%)</title><rect x="98.9729%" y="709" width="0.0467%" height="15" fill="rgb(231,189,14)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="98.9729%" y="693" width="0.0467%" height="15" fill="rgb(230,8,41)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="98.9729%" y="677" width="0.0467%" height="15" fill="rgb(249,7,27)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="98.9729%" y="661" width="0.0467%" height="15" fill="rgb(232,86,5)" fg:x="2120" fg:w="1"/><text x="99.2229%" y="671.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="99.0663%" y="725" width="0.0467%" height="15" fill="rgb(224,175,18)" fg:x="2122" fg:w="1"/><text x="99.3163%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="99.1130%" y="661" width="0.0467%" height="15" fill="rgb(220,129,12)" fg:x="2123" fg:w="1"/><text x="99.3630%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.05%)</title><rect x="99.1130%" y="645" width="0.0467%" height="15" fill="rgb(210,19,36)" fg:x="2123" fg:w="1"/><text x="99.3630%" y="655.50"></text></g><g><title>rust_stock_tracker`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.19%)</title><rect x="99.0196%" y="741" width="0.1867%" height="15" fill="rgb(219,96,14)" fg:x="2121" fg:w="4"/><text x="99.2696%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.09%)</title><rect x="99.1130%" y="725" width="0.0934%" height="15" fill="rgb(249,106,1)" fg:x="2123" fg:w="2"/><text x="99.3630%" y="735.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (2 samples, 0.09%)</title><rect x="99.1130%" y="709" width="0.0934%" height="15" fill="rgb(249,155,20)" fg:x="2123" fg:w="2"/><text x="99.3630%" y="719.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.09%)</title><rect x="99.1130%" y="693" width="0.0934%" height="15" fill="rgb(244,168,9)" fg:x="2123" fg:w="2"/><text x="99.3630%" y="703.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_array (2 samples, 0.09%)</title><rect x="99.1130%" y="677" width="0.0934%" height="15" fill="rgb(216,23,50)" fg:x="2123" fg:w="2"/><text x="99.3630%" y="687.50"></text></g><g><title>rust_stock_tracker`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.05%)</title><rect x="99.1597%" y="661" width="0.0467%" height="15" fill="rgb(224,219,20)" fg:x="2124" fg:w="1"/><text x="99.4097%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="99.1597%" y="645" width="0.0467%" height="15" fill="rgb(222,156,15)" fg:x="2124" fg:w="1"/><text x="99.4097%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="99.1597%" y="629" width="0.0467%" height="15" fill="rgb(231,97,17)" fg:x="2124" fg:w="1"/><text x="99.4097%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="99.1597%" y="613" width="0.0467%" height="15" fill="rgb(218,70,48)" fg:x="2124" fg:w="1"/><text x="99.4097%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="99.1597%" y="597" width="0.0467%" height="15" fill="rgb(212,196,52)" fg:x="2124" fg:w="1"/><text x="99.4097%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="99.1597%" y="581" width="0.0467%" height="15" fill="rgb(243,203,18)" fg:x="2124" fg:w="1"/><text x="99.4097%" y="591.50"></text></g><g><title>rust_stock_tracker`&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.05%)</title><rect x="99.2063%" y="741" width="0.0467%" height="15" fill="rgb(252,125,41)" fg:x="2125" fg:w="1"/><text x="99.4563%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (6 samples, 0.28%)</title><rect x="99.0196%" y="773" width="0.2801%" height="15" fill="rgb(223,180,33)" fg:x="2121" fg:w="6"/><text x="99.2696%" y="783.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_array (6 samples, 0.28%)</title><rect x="99.0196%" y="757" width="0.2801%" height="15" fill="rgb(254,159,46)" fg:x="2121" fg:w="6"/><text x="99.2696%" y="767.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.05%)</title><rect x="99.2530%" y="741" width="0.0467%" height="15" fill="rgb(254,38,10)" fg:x="2126" fg:w="1"/><text x="99.5030%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.14%)</title><rect x="99.2997%" y="773" width="0.1401%" height="15" fill="rgb(208,217,32)" fg:x="2127" fg:w="3"/><text x="99.5497%" y="783.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (2 samples, 0.09%)</title><rect x="99.3464%" y="757" width="0.0934%" height="15" fill="rgb(221,120,13)" fg:x="2128" fg:w="2"/><text x="99.5964%" y="767.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.09%)</title><rect x="99.3464%" y="741" width="0.0934%" height="15" fill="rgb(246,54,52)" fg:x="2128" fg:w="2"/><text x="99.5964%" y="751.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (2 samples, 0.09%)</title><rect x="99.3464%" y="725" width="0.0934%" height="15" fill="rgb(242,34,25)" fg:x="2128" fg:w="2"/><text x="99.5964%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.05%)</title><rect x="99.3931%" y="709" width="0.0467%" height="15" fill="rgb(247,209,9)" fg:x="2129" fg:w="1"/><text x="99.6431%" y="719.50"></text></g><g><title>rust_stock_tracker`yahoo_finance_api::quotes::YResponse::from_json (21 samples, 0.98%)</title><rect x="98.5061%" y="965" width="0.9804%" height="15" fill="rgb(228,71,26)" fg:x="2110" fg:w="21"/><text x="98.7561%" y="975.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (21 samples, 0.98%)</title><rect x="98.5061%" y="949" width="0.9804%" height="15" fill="rgb(222,145,49)" fg:x="2110" fg:w="21"/><text x="98.7561%" y="959.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (21 samples, 0.98%)</title><rect x="98.5061%" y="933" width="0.9804%" height="15" fill="rgb(218,121,17)" fg:x="2110" fg:w="21"/><text x="98.7561%" y="943.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (20 samples, 0.93%)</title><rect x="98.5528%" y="917" width="0.9337%" height="15" fill="rgb(244,50,7)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="927.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (20 samples, 0.93%)</title><rect x="98.5528%" y="901" width="0.9337%" height="15" fill="rgb(246,229,37)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="911.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (20 samples, 0.93%)</title><rect x="98.5528%" y="885" width="0.9337%" height="15" fill="rgb(225,18,5)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="895.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_array (20 samples, 0.93%)</title><rect x="98.5528%" y="869" width="0.9337%" height="15" fill="rgb(213,204,8)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="879.50"></text></g><g><title>rust_stock_tracker`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (20 samples, 0.93%)</title><rect x="98.5528%" y="853" width="0.9337%" height="15" fill="rgb(238,103,6)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="863.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (20 samples, 0.93%)</title><rect x="98.5528%" y="837" width="0.9337%" height="15" fill="rgb(222,25,35)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="847.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (20 samples, 0.93%)</title><rect x="98.5528%" y="821" width="0.9337%" height="15" fill="rgb(213,203,35)" fg:x="2111" fg:w="20"/><text x="98.8028%" y="831.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 0.79%)</title><rect x="98.6928%" y="805" width="0.7937%" height="15" fill="rgb(221,79,53)" fg:x="2114" fg:w="17"/><text x="98.9428%" y="815.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_object (15 samples, 0.70%)</title><rect x="98.7862%" y="789" width="0.7003%" height="15" fill="rgb(243,200,35)" fg:x="2116" fg:w="15"/><text x="99.0362%" y="799.50"></text></g><g><title>rust_stock_tracker`serde_json::value::de::visit_array (1 samples, 0.05%)</title><rect x="99.4398%" y="773" width="0.0467%" height="15" fill="rgb(248,60,25)" fg:x="2130" fg:w="1"/><text x="99.6898%" y="783.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,473 samples, 68.77%)</title><rect x="30.8123%" y="981" width="68.7675%" height="15" fill="rgb(227,53,46)" fg:x="660" fg:w="1473"/><text x="31.0623%" y="991.50">rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>rust_stock_tracker`yahoo_finance_api::quotes::YResponse::quotes (2 samples, 0.09%)</title><rect x="99.4865%" y="965" width="0.0934%" height="15" fill="rgb(216,120,32)" fg:x="2131" fg:w="2"/><text x="99.7365%" y="975.50"></text></g><g><title>rust_stock_tracker`yahoo_finance_api::quotes::QuoteBlock::get_ith_quote (2 samples, 0.09%)</title><rect x="99.4865%" y="949" width="0.0934%" height="15" fill="rgb(220,134,1)" fg:x="2131" fg:w="2"/><text x="99.7365%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::Runtime::enter (1 samples, 0.05%)</title><rect x="99.5798%" y="981" width="0.0467%" height="15" fill="rgb(237,168,5)" fg:x="2133" fg:w="1"/><text x="99.8298%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="99.6265%" y="965" width="0.0467%" height="15" fill="rgb(231,100,33)" fg:x="2134" fg:w="1"/><text x="99.8765%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.05%)</title><rect x="99.6265%" y="949" width="0.0467%" height="15" fill="rgb(236,177,47)" fg:x="2134" fg:w="1"/><text x="99.8765%" y="959.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (2 samples, 0.09%)</title><rect x="99.6265%" y="981" width="0.0934%" height="15" fill="rgb(235,7,49)" fg:x="2134" fg:w="2"/><text x="99.8765%" y="991.50"></text></g><g><title>rust_stock_tracker`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1 samples, 0.05%)</title><rect x="99.6732%" y="965" width="0.0467%" height="15" fill="rgb(232,119,22)" fg:x="2135" fg:w="1"/><text x="99.9232%" y="975.50"></text></g><g><title>rust_stock_tracker`core::ops::function::FnOnce::call_once{{vtable.shim}} (2,093 samples, 97.71%)</title><rect x="2.0542%" y="1141" width="97.7124%" height="15" fill="rgb(254,73,53)" fg:x="44" fg:w="2093"/><text x="2.3042%" y="1151.50">rust_stock_tracker`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>rust_stock_tracker`std::sys_common::backtrace::__rust_begin_short_backtrace (2,092 samples, 97.67%)</title><rect x="2.1008%" y="1125" width="97.6657%" height="15" fill="rgb(251,35,20)" fg:x="45" fg:w="2092"/><text x="2.3508%" y="1135.50">rust_stock_tracker`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust_stock_tracker`tokio::runtime::blocking::pool::Inner::run (1,768 samples, 82.54%)</title><rect x="17.2269%" y="1109" width="82.5397%" height="15" fill="rgb(241,119,20)" fg:x="369" fg:w="1768"/><text x="17.4769%" y="1119.50">rust_stock_tracker`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,750 samples, 81.70%)</title><rect x="18.0672%" y="1093" width="81.6993%" height="15" fill="rgb(207,102,14)" fg:x="387" fg:w="1750"/><text x="18.3172%" y="1103.50">rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>rust_stock_tracker`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,648 samples, 76.94%)</title><rect x="22.8291%" y="1077" width="76.9374%" height="15" fill="rgb(248,201,50)" fg:x="489" fg:w="1648"/><text x="23.0791%" y="1087.50">rust_stock_tracker`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::run (1,648 samples, 76.94%)</title><rect x="22.8291%" y="1061" width="76.9374%" height="15" fill="rgb(222,185,44)" fg:x="489" fg:w="1648"/><text x="23.0791%" y="1071.50">rust_stock_tracker`tokio::runtime::thread_pool::worker::run</text></g><g><title>rust_stock_tracker`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,648 samples, 76.94%)</title><rect x="22.8291%" y="1045" width="76.9374%" height="15" fill="rgb(218,107,18)" fg:x="489" fg:w="1648"/><text x="23.0791%" y="1055.50">rust_stock_tracker`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::Context::run (1,648 samples, 76.94%)</title><rect x="22.8291%" y="1029" width="76.9374%" height="15" fill="rgb(237,177,39)" fg:x="489" fg:w="1648"/><text x="23.0791%" y="1039.50">rust_stock_tracker`tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>rust_stock_tracker`tokio::runtime::thread_pool::worker::Context::run_task (1,503 samples, 70.17%)</title><rect x="29.5985%" y="1013" width="70.1681%" height="15" fill="rgb(246,69,6)" fg:x="634" fg:w="1503"/><text x="29.8485%" y="1023.50">rust_stock_tracker`tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,477 samples, 68.95%)</title><rect x="30.8123%" y="997" width="68.9542%" height="15" fill="rgb(234,208,37)" fg:x="660" fg:w="1477"/><text x="31.0623%" y="1007.50">rust_stock_tracker`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>rust_stock_tracker`yahoo_finance_api::quotes::YResponse::from_json (1 samples, 0.05%)</title><rect x="99.7199%" y="981" width="0.0467%" height="15" fill="rgb(225,4,6)" fg:x="2136" fg:w="1"/><text x="99.9699%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,097 samples, 97.90%)</title><rect x="2.0542%" y="1189" width="97.8992%" height="15" fill="rgb(233,45,0)" fg:x="44" fg:w="2097"/><text x="2.3042%" y="1199.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,097 samples, 97.90%)</title><rect x="2.0542%" y="1173" width="97.8992%" height="15" fill="rgb(226,136,5)" fg:x="44" fg:w="2097"/><text x="2.3042%" y="1183.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>rust_stock_tracker`std::sys::unix::thread::Thread::new::thread_start (2,097 samples, 97.90%)</title><rect x="2.0542%" y="1157" width="97.8992%" height="15" fill="rgb(211,91,47)" fg:x="44" fg:w="2097"/><text x="2.3042%" y="1167.50">rust_stock_tracker`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>rust_stock_tracker`std::sys::unix::stack_overflow::imp::make_handler (4 samples, 0.19%)</title><rect x="99.7666%" y="1141" width="0.1867%" height="15" fill="rgb(242,88,51)" fg:x="2137" fg:w="4"/><text x="100.0166%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (4 samples, 0.19%)</title><rect x="99.7666%" y="1125" width="0.1867%" height="15" fill="rgb(230,91,28)" fg:x="2137" fg:w="4"/><text x="100.0166%" y="1135.50"></text></g><g><title>all (2,142 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(254,186,29)" fg:x="0" fg:w="2142"/><text x="0.2500%" y="1215.50"></text></g><g><title>rust_stock_tracker`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="99.9533%" y="1189" width="0.0467%" height="15" fill="rgb(238,6,4)" fg:x="2141" fg:w="1"/><text x="100.2033%" y="1199.50"></text></g></svg></svg>